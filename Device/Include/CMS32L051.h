/*
 * ARM Limited (ARM) is supplying this software for use with Cortex-M
 * processor based microcontroller, but can be equally used for other
 * suitable processor architectures. This file can be freely distributed.
 * Modifications to this file shall be clearly marked.
 * 
 * THIS SOFTWARE IS PROVIDED "AS IS". NO WARRANTIES, WHETHER EXPRESS, IMPLIED
 * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
 * ARM SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL, OR
 * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
 *
 * @file     CMS32L051.h
 * @brief    CMSIS HeaderFile
 * @version  1.2
 * @date     14. September 2021
 * @note     Generated by SVDConv V3.3.18 on Tuesday, 14.09.2021 15:07:22
 *           from File 'Files/SVD/CMS32L051.svd',
 *           last modified on Tuesday, 14.09.2021 03:23:34
 */



/** @addtogroup CMS
  * @{
  */


/** @addtogroup CMS32L051
  * @{
  */


#ifndef CMS32L051_H
#define CMS32L051_H

#ifdef __cplusplus
extern "C" {
#endif


/** @addtogroup Configuration_of_CMSIS
  * @{
  */



/* =========================================================================================================================== */
/* ================                                Interrupt Number Definition                                ================ */
/* =========================================================================================================================== */

typedef enum {
/* =======================================  ARM Cortex-M0+ Specific Interrupt Numbers  ======================================= */
  Reset_IRQn                = -15,              /*!< -15  Reset Vector, invoked on Power up and warm reset                     */
  NonMaskableInt_IRQn       = -14,              /*!< -14  Non maskable Interrupt, cannot be stopped or preempted               */
  HardFault_IRQn            = -13,              /*!< -13  Hard Fault, all classes of Fault                                     */
  SVCall_IRQn               =  -5,              /*!< -5 System Service Call via SVC instruction                                */
  PendSV_IRQn               =  -2,              /*!< -2 Pendable request for system service                                    */
  SysTick_IRQn              =  -1,              /*!< -1 System Tick Timer                                                      */
/* =========================================  CMS32L051 Specific Interrupt Numbers  ========================================== */
  LVI_IRQn                  =   0,              /*!< 0  Low Voltage detection interrupt                                        */
  INTP0_IRQn                =   1,              /*!< 1  INTP0 External interrupt request input is valid                        */
  INTP1_IRQn                =   2,              /*!< 2  INTP1 External interrupt request input is valid                        */
  INTP2_IRQn                =   3,              /*!< 3  INTP2 External interrupt request input is valid                        */
  INTP3_IRQn                =   4,              /*!< 4  INTP3 External interrupt request input is valid                        */
  TM01H_IRQn                =   5,              /*!< 5  TM40 channel 1(higher 8 bit) interrupt request                         */
  KEY_IRQn                  =   6,              /*!< 6  KEY return interrupt request                                           */
  ST2_IRQn                  =   7,              /*!< 7  UART2 transmission transfer end or buffer empty                        */
  SPI20_IRQn                =   7,              /*!< 7  SPI20 transfer end or buffer empty                                     */
  IIC20_IRQn                =   7,              /*!< 7  IIC20 transfer end                                                     */
  SR2_IRQn                  =   8,              /*!< 8  UART2 rerception transfer                                              */
  SPI21_IRQn                =   8,              /*!< 8  SPI21 transfer end or buffer empty                                     */
  IIC21_IRQn                =   8,              /*!< 8  IIC21 transfer end                                                     */
  SRE2_IRQn                 =   9,              /*!< 9  UART2 rerception communication error occurrence                        */
  ST0_IRQn                  =  10,              /*!< 10 UART0 transmission transfer end or buffer empty                        */
  SPI00_IRQn                =  10,              /*!< 10 SPI00 transfer end or buffer empty                                     */
  IIC00_IRQn                =  10,              /*!< 10 IIC00 transfer end                                                     */
  SR0_IRQn                  =  11,              /*!< 11 UART0 rerception transfer                                              */
  SPI01_IRQn                =  11,              /*!< 11 SPI01 transfer end or buffer empty                                     */
  IIC01_IRQn                =  11,              /*!< 11 IIC01 transfer end                                                     */
  SRE0_IRQn                 =  12,              /*!< 12 UART0 rerception communication error occurrence                        */
  ST1_IRQn                  =  13,              /*!< 13 UART1 transmission transfer end or buffer empty                        */
  SPI10_IRQn                =  13,              /*!< 13 SPI10 transfer end or buffer empty                                     */
  IIC10_IRQn                =  13,              /*!< 13 IIC10 transfer end                                                     */
  SPI_IRQn                  =  13,              /*!< 13 SPI   transfer end                                                     */
  SR1_IRQn                  =  14,              /*!< 14 UART1 rerception transfer                                              */
  SPI11_IRQn                =  14,              /*!< 14 SPI11 transfer end or buffer empty                                     */
  IIC11_IRQn                =  14,              /*!< 14 IIC11 transfer end                                                     */
  SRE1_IRQn                 =  15,              /*!< 15 UART1 rerception communication error occurrence                        */
  IICA_IRQn                 =  16,              /*!< 16 IICA interrupt request                                                 */
  TM00_IRQn                 =  17,              /*!< 17 TM40 channel 0 interrupt request                                       */
  TM01_IRQn                 =  18,              /*!< 18 TM40 channel 1 interrupt request                                       */
  TM02_IRQn                 =  19,              /*!< 19 TM40 channel 2 interrupt request                                       */
  TM03_IRQn                 =  20,              /*!< 20 TM40 channel 3 interrupt request                                       */
  ADC_IRQn                  =  21,              /*!< 21 ADC interrupt request                                                  */
  RTC_IRQn                  =  22,              /*!< 22 Real-Time Clock interrupt request                                      */
  IT_IRQn                   =  23,              /*!< 23 15-bit interval timer interrupt request                                */
  OCRV_IRQn                 =  24,              /*!< 24 OCRV interrupt request                                                 */
  TM10_IRQn                 =  27,              /*!< 27 TM41 channel 0 interrupt request                                       */
  TM11_IRQn                 =  28,              /*!< 28 TM41 channel 1 interrupt request                                       */
  TM12_IRQn                 =  29,              /*!< 29 TM41 channel 2 interrupt request                                       */
  TM13_IRQn                 =  30,              /*!< 30 TM41 channel 3 interrupt request                                       */
  FMC_IRQn                  =  31               /*!< 31 Flash erase or write finish                                            */
} IRQn_Type;



/* =========================================================================================================================== */
/* ================                           Processor and Core Peripheral Section                           ================ */
/* =========================================================================================================================== */

/* ==========================  Configuration of the ARM Cortex-M0+ Processor and Core Peripherals  =========================== */
#define __CM0PLUS_REV                 0x0001U   /*!< CM0PLUS Core Revision                                                     */
#define __NVIC_PRIO_BITS               2        /*!< Number of Bits used for Priority Levels                                   */
#define __Vendor_SysTickConfig         0        /*!< Set to 1 if different SysTick Config is used                              */
#define __VTOR_PRESENT                 1        /*!< Set to 1 if CPU supports Vector Table Offset Register                     */


/** @} */ /* End of group Configuration_of_CMSIS */

#include "core_cm0plus.h"                       /*!< ARM Cortex-M0+ processor and core peripherals                             */
#include "system_CMS32L051.h"                   /*!< CMS32L051 System                                                          */

#ifndef __IM                                    /*!< Fallback for older CMSIS versions                                         */
  #define __IM   __I
#endif
#ifndef __OM                                    /*!< Fallback for older CMSIS versions                                         */
  #define __OM   __O
#endif
#ifndef __IOM                                   /*!< Fallback for older CMSIS versions                                         */
  #define __IOM  __IO
#endif


/* ========================================  Start of section using anonymous unions  ======================================== */
#if defined (__CC_ARM)
  #pragma push
  #pragma anon_unions
#elif defined (__ICCARM__)
  #pragma language=extended
#elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wc11-extensions"
  #pragma clang diagnostic ignored "-Wreserved-id-macro"
  #pragma clang diagnostic ignored "-Wgnu-anonymous-struct"
  #pragma clang diagnostic ignored "-Wnested-anon-types"
#elif defined (__GNUC__)
  /* anonymous unions are enabled by default */
#elif defined (__TMS470__)
  /* anonymous unions are enabled by default */
#elif defined (__TASKING__)
  #pragma warning 586
#elif defined (__CSMC__)
  /* anonymous unions are enabled by default */
#else
  #warning Not supported compiler type
#endif


/* =========================================================================================================================== */
/* ================                              Device Specific Cluster Section                              ================ */
/* =========================================================================================================================== */


/** @addtogroup Device_Peripheral_clusters
  * @{
  */


/**
  * @brief DMAVEC_CTRL [CTRL] (DMA control data area)
  */
typedef struct {
  __IOM uint16_t  DMACR;                        /*!< (@ 0x00000000) DMA Control register                                       */
  __IOM uint16_t  DMBLS;                        /*!< (@ 0x00000002) DMA Block Size register                                    */
  __IOM uint16_t  DMACT;                        /*!< (@ 0x00000004) DMA Transfer Count register                                */
  __IOM uint16_t  DMRLD;                        /*!< (@ 0x00000006) DMA Transfer Count Reload register                         */
  __IOM uint32_t  DMSAR;                        /*!< (@ 0x00000008) DMA Source Address register                                */
  __IOM uint32_t  DMDAR;                        /*!< (@ 0x0000000C) DMA Destination Address register                           */
} DMAVEC_CTRL_Type;                             /*!< Size = 16 (0x10)                                                          */


/**
  * @brief INT_IF [IF] (Interrupt flag register)
  */
typedef struct {
  __IOM uint8_t   IFL;                          /*!< (@ 0x00000000) Interrupt flag register                                    */
  __IM  uint8_t   RESERVED[3];
} INT_IF_Type;                                  /*!< Size = 4 (0x4)                                                            */


/**
  * @brief INT_MK [MK] (Interrupt mask register)
  */
typedef struct {
  __IOM uint8_t   MKL;                          /*!< (@ 0x00000000) Interrupt mask register                                    */
  __IM  uint8_t   RESERVED[3];
} INT_MK_Type;                                  /*!< Size = 4 (0x4)                                                            */


/** @} */ /* End of group Device_Peripheral_clusters */


/* =========================================================================================================================== */
/* ================                            Device Specific Peripheral Section                             ================ */
/* =========================================================================================================================== */


/** @addtogroup Device_Peripheral_peripherals
  * @{
  */



/* =========================================================================================================================== */
/* ================                                            CGC                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief Clock Generate Control (CGC)
  */

typedef struct {                                /*!< (@ 0x40020400) CGC Structure                                              */
  __IOM uint8_t   CMC;                          /*!< (@ 0x00000000) Clock operaton Mode Control Register                       */
  __IOM uint8_t   CSC;                          /*!< (@ 0x00000001) Clock operation Status Register                            */
  __IM  uint8_t   OSTC;                         /*!< (@ 0x00000002) Oscillation stabilization time counter status              */
  __IOM uint8_t   OSTS;                         /*!< (@ 0x00000003) Oscillation stabilization time select register             */
  __IOM uint8_t   CKC;                          /*!< (@ 0x00000004) System clock control register                              */
  __IOM uint8_t   LOSCSEL;                      /*!< (@ 0x00000005) LOCO Frequency Select register                             */
  __IOM uint8_t   PRCR;                         /*!< (@ 0x00000006) LOSCSEL's Protect register                                 */
  __IOM uint8_t   SUBCKSEL;                     /*!< (@ 0x00000007) SubSystem Clock select register                            */
  __IOM uint16_t  PMUKEY;                       /*!< (@ 0x00000008) Power Manager Key Register                                 */
  __IOM uint8_t   PMUCTL;                       /*!< (@ 0x0000000A) Power Manager Control Register                             */
  __IM  uint8_t   RESERVED;
  __IOM uint8_t   WDTCFG0;                      /*!< (@ 0x0000000C) WDT Configeration 0 register                               */
  __IOM uint8_t   WDTCFG1;                      /*!< (@ 0x0000000D) WDT Configeration 1 register                               */
  __IOM uint8_t   WDTCFG2;                      /*!< (@ 0x0000000E) WDT Configeration 2 register                               */
  __IOM uint8_t   WDTCFG3;                      /*!< (@ 0x0000000F) WDT Configeration 3 register                               */
  __IM  uint16_t  RESERVED1[8];
  __IOM uint8_t   PER0;                         /*!< (@ 0x00000020) Peripheral enable register 0                               */
  __IM  uint8_t   RESERVED2[2];
  __IOM uint8_t   OSMC;                         /*!< (@ 0x00000023) Subsystem clock supply mode control register               */
  __IM  uint16_t  RESERVED3[507];
  __IOM uint8_t   PER1;                         /*!< (@ 0x0000041A) Peripheral enable register 1                               */
  __IM  uint8_t   RESERVED4;
  __IM  uint16_t  RESERVED5[2546];
  __IOM uint8_t   HIOTRM;                       /*!< (@ 0x00001800) High-speed on-chip oscillator trimming register            */
  __IM  uint8_t   RESERVED6;
  __IM  uint16_t  RESERVED7[15];
  __IOM uint8_t   HOCODIV;                      /*!< (@ 0x00001820) High-speed on-chip oscillator frequency select
                                                                    register                                                   */
  __IM  uint8_t   RESERVED8;
  __IM  uint16_t  RESERVED9[1007];
  __IOM uint8_t   HOCOFC;                       /*!< (@ 0x00002000) High-speed on-chip oscillator frequency correction
                                                                    register                                                   */
  __IM  uint8_t   RESERVED10;
  __IM  uint16_t  RESERVED11;
} CGC_Type;                                     /*!< Size = 8196 (0x2004)                                                      */



/* =========================================================================================================================== */
/* ================                                            RST                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief Reset Function (RST)
  */

typedef struct {                                /*!< (@ 0x40020420) RST Structure                                              */
  __IM  uint8_t   RESERVED[32];
  __IM  uint8_t   RESF;                         /*!< (@ 0x00000020) Reset flag register                                        */
} RST_Type;                                     /*!< Size = 33 (0x21)                                                          */



/* =========================================================================================================================== */
/* ================                                            LVD                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief Voltage detector (LVD)
  */

typedef struct {                                /*!< (@ 0x40020440) LVD Structure                                              */
  __IM  uint8_t   RESERVED;
  __IOM uint8_t   LVIM;                         /*!< (@ 0x00000001) Voltage detection register                                 */
  __IOM uint8_t   LVIS;                         /*!< (@ 0x00000002) Voltage detection level register                           */
} LVD_Type;                                     /*!< Size = 3 (0x3)                                                            */



/* =========================================================================================================================== */
/* ================                                           PORT                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief Port functions (PORT)
  */

typedef struct {                                /*!< (@ 0x40040000) PORT Structure                                             */
  __IOM uint8_t   P0;                           /*!< (@ 0x00000000) Port register 0                                            */
  __IOM uint8_t   P1;                           /*!< (@ 0x00000001) Port register 1                                            */
  __IOM uint8_t   P2;                           /*!< (@ 0x00000002) Port register 2                                            */
  __IOM uint8_t   P3;                           /*!< (@ 0x00000003) Port register 3                                            */
  __IOM uint8_t   P4;                           /*!< (@ 0x00000004) Port register 4                                            */
  __IOM uint8_t   P5;                           /*!< (@ 0x00000005) Port register 5                                            */
  __IOM uint8_t   P6;                           /*!< (@ 0x00000006) Port register 6                                            */
  __IOM uint8_t   P7;                           /*!< (@ 0x00000007) Port register 7                                            */
  __IM  uint8_t   RESERVED[4];
  __IOM uint8_t   P12;                          /*!< (@ 0x0000000C) Port register 12                                           */
  __IOM uint8_t   P13;                          /*!< (@ 0x0000000D) Port register 13                                           */
  __IOM uint8_t   P14;                          /*!< (@ 0x0000000E) Port register 14                                           */
  __IM  uint8_t   RESERVED1;
  __IOM uint8_t   PSET0;                        /*!< (@ 0x00000010) Port set register 0                                        */
  __IOM uint8_t   PSET1;                        /*!< (@ 0x00000011) Port set register 1                                        */
  __IOM uint8_t   PSET2;                        /*!< (@ 0x00000012) Port set register 2                                        */
  __IOM uint8_t   PSET3;                        /*!< (@ 0x00000013) Port set register 3                                        */
  __IOM uint8_t   PSET4;                        /*!< (@ 0x00000014) Port set register 4                                        */
  __IOM uint8_t   PSET5;                        /*!< (@ 0x00000015) Port set register 5                                        */
  __IOM uint8_t   PSET6;                        /*!< (@ 0x00000016) Port set register 6                                        */
  __IOM uint8_t   PSET7;                        /*!< (@ 0x00000017) Port set register 7                                        */
  __IM  uint8_t   RESERVED2[4];
  __IOM uint8_t   PSET12;                       /*!< (@ 0x0000001C) Port set register 12                                       */
  __IOM uint8_t   PSET13;                       /*!< (@ 0x0000001D) Port set register 13                                       */
  __IOM uint8_t   PSET14;                       /*!< (@ 0x0000001E) Port set register 14                                       */
  __IM  uint8_t   RESERVED3;
  __IOM uint8_t   PM0;                          /*!< (@ 0x00000020) Port mode register 0                                       */
  __IOM uint8_t   PM1;                          /*!< (@ 0x00000021) Port mode register 1                                       */
  __IOM uint8_t   PM2;                          /*!< (@ 0x00000022) Port mode register 2                                       */
  __IOM uint8_t   PM3;                          /*!< (@ 0x00000023) Port mode register 3                                       */
  __IOM uint8_t   PM4;                          /*!< (@ 0x00000024) Port mode register 4                                       */
  __IOM uint8_t   PM5;                          /*!< (@ 0x00000025) Port mode register 5                                       */
  __IOM uint8_t   PM6;                          /*!< (@ 0x00000026) Port mode register 6                                       */
  __IOM uint8_t   PM7;                          /*!< (@ 0x00000027) Port mode register 7                                       */
  __IM  uint8_t   RESERVED4[4];
  __IOM uint8_t   PM12;                         /*!< (@ 0x0000002C) Port mode register 12                                      */
  __IOM uint8_t   PM13;                         /*!< (@ 0x0000002D) Port mode register 13                                      */
  __IOM uint8_t   PM14;                         /*!< (@ 0x0000002E) Port mode register 14                                      */
  __IM  uint8_t   RESERVED5;
  __IOM uint8_t   PU0;                          /*!< (@ 0x00000030) Pull-up resistor option register 0                         */
  __IOM uint8_t   PU1;                          /*!< (@ 0x00000031) Pull-up resistor option register 1                         */
  __IOM uint8_t   PU2;                          /*!< (@ 0x00000032) Pull-up resistor option register 2                         */
  __IOM uint8_t   PU3;                          /*!< (@ 0x00000033) Pull-up resistor option register 3                         */
  __IOM uint8_t   PU4;                          /*!< (@ 0x00000034) Pull-up resistor option register 4                         */
  __IOM uint8_t   PU5;                          /*!< (@ 0x00000035) Pull-up resistor option register 5                         */
  __IOM uint8_t   PU6;                          /*!< (@ 0x00000036) Pull-up resistor option register 6                         */
  __IOM uint8_t   PU7;                          /*!< (@ 0x00000037) Pull-up resistor option register 7                         */
  __IM  uint8_t   RESERVED6[4];
  __IOM uint8_t   PU12;                         /*!< (@ 0x0000003C) Pull-up resistor option register 12                        */
  __IOM uint8_t   PU13;                         /*!< (@ 0x0000003D) Pull-up resistor option register 13                        */
  __IOM uint8_t   PU14;                         /*!< (@ 0x0000003E) Pull-up resistor option register 14                        */
  __IM  uint8_t   RESERVED7;
  __IOM uint8_t   PD0;                          /*!< (@ 0x00000040) Pull-down resistor option register 0                       */
  __IOM uint8_t   PD1;                          /*!< (@ 0x00000041) Pull-down resistor option register 1                       */
  __IOM uint8_t   PD2;                          /*!< (@ 0x00000042) Pull-down resistor option register 2                       */
  __IOM uint8_t   PD3;                          /*!< (@ 0x00000043) Pull-down resistor option register 3                       */
  __IM  uint8_t   RESERVED8;
  __IOM uint8_t   PD5;                          /*!< (@ 0x00000045) Pull-down resistor option register 5                       */
  __IOM uint8_t   PD6;                          /*!< (@ 0x00000046) Pull-down resistor option register 6                       */
  __IOM uint8_t   PD7;                          /*!< (@ 0x00000047) Pull-down resistor option register 7                       */
  __IM  uint8_t   RESERVED9[4];
  __IOM uint8_t   PD12;                         /*!< (@ 0x0000004C) Pull-down resistor option register 12                      */
  __IOM uint8_t   PD13;                         /*!< (@ 0x0000004D) Pull-down resistor option register 13                      */
  __IOM uint8_t   PD14;                         /*!< (@ 0x0000004E) Pull-down resistor option register 14                      */
  __IM  uint8_t   RESERVED10;
  __IOM uint8_t   POM0;                         /*!< (@ 0x00000050) Port output mode register 0                                */
  __IOM uint8_t   POM1;                         /*!< (@ 0x00000051) Port output mode register 1                                */
  __IOM uint8_t   POM2;                         /*!< (@ 0x00000052) Port output mode register 2                                */
  __IOM uint8_t   POM3;                         /*!< (@ 0x00000053) Port output mode register 3                                */
  __IOM uint8_t   POM4;                         /*!< (@ 0x00000054) Port output mode register 4                                */
  __IOM uint8_t   POM5;                         /*!< (@ 0x00000055) Port output mode register 5                                */
  __IOM uint8_t   POM6;                         /*!< (@ 0x00000056) Port output mode register 6                                */
  __IOM uint8_t   POM7;                         /*!< (@ 0x00000057) Port output mode register 7                                */
  __IM  uint8_t   RESERVED11[4];
  __IOM uint8_t   POM12;                        /*!< (@ 0x0000005C) Port output mode register 12                               */
  __IOM uint8_t   POM13;                        /*!< (@ 0x0000005D) Port output mode register 13                               */
  __IOM uint8_t   POM14;                        /*!< (@ 0x0000005E) Port output mode register 14                               */
  __IM  uint8_t   RESERVED12;
  __IOM uint8_t   PMC0;                         /*!< (@ 0x00000060) Port mode control register 0                               */
  __IOM uint8_t   PMC1;                         /*!< (@ 0x00000061) Port mode control register 1                               */
  __IOM uint8_t   PMC2;                         /*!< (@ 0x00000062) Port mode control register 2                               */
  __IOM uint8_t   PMC3;                         /*!< (@ 0x00000063) Port mode control register 3                               */
  __IM  uint8_t   RESERVED13;
  __IOM uint8_t   PMC5;                         /*!< (@ 0x00000065) Port mode control register 5                               */
  __IOM uint8_t   PMC6;                         /*!< (@ 0x00000066) Port mode control register 6                               */
  __IOM uint8_t   PMC7;                         /*!< (@ 0x00000067) Port mode control register 7                               */
  __IM  uint8_t   RESERVED14[4];
  __IOM uint8_t   PMC12;                        /*!< (@ 0x0000006C) Port mode control register 12                              */
  __IOM uint8_t   PMC13;                        /*!< (@ 0x0000006D) Port mode control register 13                              */
  __IOM uint8_t   PMC14;                        /*!< (@ 0x0000006E) Port mode control register 14                              */
  __IM  uint8_t   RESERVED15;
  __IOM uint8_t   PCLR0;                        /*!< (@ 0x00000070) Port clear register 0                                      */
  __IOM uint8_t   PCLR1;                        /*!< (@ 0x00000071) Port clear register 1                                      */
  __IOM uint8_t   PCLR2;                        /*!< (@ 0x00000072) Port clear register 2                                      */
  __IOM uint8_t   PCLR3;                        /*!< (@ 0x00000073) Port clear register 3                                      */
  __IOM uint8_t   PCLR4;                        /*!< (@ 0x00000074) Port clear register 4                                      */
  __IOM uint8_t   PCLR5;                        /*!< (@ 0x00000075) Port clear register 5                                      */
  __IOM uint8_t   PCLR6;                        /*!< (@ 0x00000076) Port clear register 6                                      */
  __IOM uint8_t   PCLR7;                        /*!< (@ 0x00000077) Port clear register 7                                      */
  __IM  uint8_t   RESERVED16[4];
  __IOM uint8_t   PCLR12;                       /*!< (@ 0x0000007C) Port clear register 12                                     */
  __IOM uint8_t   PCLR13;                       /*!< (@ 0x0000007D) Port clear register 13                                     */
  __IOM uint8_t   PCLR14;                       /*!< (@ 0x0000007E) Port clear register 14                                     */
  __IM  uint8_t   RESERVED17[1921];
  __IOM uint8_t   P00CFG;                       /*!< (@ 0x00000800) Alterate Output Function configuration register            */
  __IOM uint8_t   P01CFG;                       /*!< (@ 0x00000801) Alterate Output Function configuration register            */
  __IM  uint8_t   RESERVED18[6];
  __IOM uint8_t   P10CFG;                       /*!< (@ 0x00000808) Alterate Output Function configuration register            */
  __IOM uint8_t   P11CFG;                       /*!< (@ 0x00000809) Alterate Output Function configuration register            */
  __IOM uint8_t   P12CFG;                       /*!< (@ 0x0000080A) Alterate Output Function configuration register            */
  __IOM uint8_t   P13CFG;                       /*!< (@ 0x0000080B) Alterate Output Function configuration register            */
  __IOM uint8_t   P14CFG;                       /*!< (@ 0x0000080C) Alterate Output Function configuration register            */
  __IOM uint8_t   P15CFG;                       /*!< (@ 0x0000080D) Alterate Output Function configuration register            */
  __IOM uint8_t   P16CFG;                       /*!< (@ 0x0000080E) Alterate Output Function configuration register            */
  __IOM uint8_t   P17CFG;                       /*!< (@ 0x0000080F) Alterate Output Function configuration register            */
  __IOM uint8_t   P20CFG;                       /*!< (@ 0x00000810) Alterate Output Function configuration register            */
  __IOM uint8_t   P21CFG;                       /*!< (@ 0x00000811) Alterate Output Function configuration register            */
  __IOM uint8_t   P22CFG;                       /*!< (@ 0x00000812) Alterate Output Function configuration register            */
  __IOM uint8_t   P23CFG;                       /*!< (@ 0x00000813) Alterate Output Function configuration register            */
  __IOM uint8_t   P24CFG;                       /*!< (@ 0x00000814) Alterate Output Function configuration register            */
  __IOM uint8_t   P25CFG;                       /*!< (@ 0x00000815) Alterate Output Function configuration register            */
  __IOM uint8_t   P26CFG;                       /*!< (@ 0x00000816) Alterate Output Function configuration register            */
  __IOM uint8_t   P27CFG;                       /*!< (@ 0x00000817) Alterate Output Function configuration register            */
  __IOM uint8_t   P30CFG;                       /*!< (@ 0x00000818) Alterate Output Function configuration register            */
  __IOM uint8_t   P31CFG;                       /*!< (@ 0x00000819) Alterate Output Function configuration register            */
  __IM  uint8_t   RESERVED19[6];
  __IOM uint8_t   P40CFG;                       /*!< (@ 0x00000820) Alterate Output Function configuration register            */
  __IOM uint8_t   P41CFG;                       /*!< (@ 0x00000821) Alterate Output Function configuration register            */
  __IM  uint8_t   RESERVED20[6];
  __IOM uint8_t   P50CFG;                       /*!< (@ 0x00000828) Alterate Output Function configuration register            */
  __IOM uint8_t   P51CFG;                       /*!< (@ 0x00000829) Alterate Output Function configuration register            */
  __IM  uint8_t   RESERVED21[6];
  __IOM uint8_t   P60CFG;                       /*!< (@ 0x00000830) Alterate Output Function configuration register            */
  __IOM uint8_t   P61CFG;                       /*!< (@ 0x00000831) Alterate Output Function configuration register            */
  __IOM uint8_t   P62CFG;                       /*!< (@ 0x00000832) Alterate Output Function configuration register            */
  __IOM uint8_t   P63CFG;                       /*!< (@ 0x00000833) Alterate Output Function configuration register            */
  __IM  uint8_t   RESERVED22[4];
  __IOM uint8_t   P70CFG;                       /*!< (@ 0x00000838) Alterate Output Function configuration register            */
  __IOM uint8_t   P71CFG;                       /*!< (@ 0x00000839) Alterate Output Function configuration register            */
  __IOM uint8_t   P72CFG;                       /*!< (@ 0x0000083A) Alterate Output Function configuration register            */
  __IOM uint8_t   P73CFG;                       /*!< (@ 0x0000083B) Alterate Output Function configuration register            */
  __IOM uint8_t   P74CFG;                       /*!< (@ 0x0000083C) Alterate Output Function configuration register            */
  __IOM uint8_t   P75CFG;                       /*!< (@ 0x0000083D) Alterate Output Function configuration register            */
  __IM  uint8_t   RESERVED23[2];
  __IOM uint8_t   P120CFG;                      /*!< (@ 0x00000840) Alterate Output Function configuration register            */
  __IOM uint8_t   P121CFG;                      /*!< (@ 0x00000841) Alterate Output Function configuration register            */
  __IOM uint8_t   P122CFG;                      /*!< (@ 0x00000842) Alterate Output Function configuration register            */
  __IOM uint8_t   P123CFG;                      /*!< (@ 0x00000843) Alterate Output Function configuration register            */
  __IOM uint8_t   P124CFG;                      /*!< (@ 0x00000844) Alterate Output Function configuration register            */
  __IM  uint8_t   RESERVED24[3];
  __IOM uint8_t   P130CFG;                      /*!< (@ 0x00000848) Alterate Output Function configuration register            */
  __IM  uint8_t   RESERVED25[5];
  __IOM uint8_t   P136CFG;                      /*!< (@ 0x0000084E) Alterate Output Function configuration register            */
  __IOM uint8_t   P137CFG;                      /*!< (@ 0x0000084F) Alterate Output Function configuration register            */
  __IOM uint8_t   P140CFG;                      /*!< (@ 0x00000850) Alterate Output Function configuration register            */
  __IM  uint8_t   RESERVED26[5];
  __IOM uint8_t   P146CFG;                      /*!< (@ 0x00000856) Alterate Output Function configuration register            */
  __IOM uint8_t   P147CFG;                      /*!< (@ 0x00000857) Alterate Output Function configuration register            */
  __IM  uint8_t   RESERVED27[8];
  __IOM uint8_t   TI10PCFG;                     /*!< (@ 0x00000860) TI10 alternate function pin configuration register         */
  __IOM uint8_t   TI11PCFG;                     /*!< (@ 0x00000861) TI11 alternate function pin configuration register         */
  __IOM uint8_t   TI12PCFG;                     /*!< (@ 0x00000862) TI12 alternate function pin configuration register         */
  __IOM uint8_t   TI13PCFG;                     /*!< (@ 0x00000863) TI13 alternate function pin configuration register         */
  __IOM uint8_t   INTP0PCFG;                    /*!< (@ 0x00000864) INTP0 alternate function pin configuration register        */
  __IOM uint8_t   INTP1PCFG;                    /*!< (@ 0x00000865) INTP1 alternate function pin configuration register        */
  __IOM uint8_t   INTP2PCFG;                    /*!< (@ 0x00000866) INTP2 alternate function pin configuration register        */
  __IOM uint8_t   INTP3PCFG;                    /*!< (@ 0x00000867) INTP3 alternate function pin configuration register        */
  
  union {
    __IOM uint8_t SDI00PCFG;                    /*!< (@ 0x00000868) SDI00/RXD0/SDA00 alternate function pin configuration
                                                                    register                                                   */
    __IOM uint8_t SDA00PCFG;                    /*!< (@ 0x00000868) SDI00/RXD0/SDA00 alternate function pin configuration
                                                                    register                                                   */
    __IOM uint8_t RXD0PCFG;                     /*!< (@ 0x00000868) SDI00/RXD0/SDA00 alternate function pin configuration
                                                                    register                                                   */
  };
  __IOM uint8_t   SCLKI00PCFG;                  /*!< (@ 0x00000869) SCLKI00 alternate function pin configuration
                                                                    register                                                   */
  __IOM uint8_t   SS00PCFG;                     /*!< (@ 0x0000086A) SS00 alternate function pin configuration register         */
  
  union {
    __IOM uint8_t SDI20PCFG;                    /*!< (@ 0x0000086B) SDI20/RXD2/IrRXD alternate function pin configuration
                                                                    register                                                   */
    __IOM uint8_t IRRXDPCFG;                    /*!< (@ 0x0000086B) SDI20/RXD2/IrRXD alternate function pin configuration
                                                                    register                                                   */
    __IOM uint8_t RXD2PCFG;                     /*!< (@ 0x0000086B) SDI20/RXD2/IrRXD alternate function pin configuration
                                                                    register                                                   */
  };
  __IOM uint8_t   SCLKI20PCFG;                  /*!< (@ 0x0000086C) SCLKI20 alternate function pin configuration
                                                                    register                                                   */
  __IOM uint8_t   SDAA0PCFG;                    /*!< (@ 0x0000086D) SDAA0 alternate function pin configuration register        */
  __IOM uint8_t   SCLA0PCFG;                    /*!< (@ 0x0000086E) SCLA0 alternate function pin configuration register        */
  
  union {
    __IOM uint8_t RXD1PCFG;                     /*!< (@ 0x0000086F) RXD1 alternate function pin configuration register         */
    __IOM uint8_t SDA10PCFG;                    /*!< (@ 0x0000086F) SDA10 alternate function pin configuration register        */
    __IOM uint8_t SDI10PCFG;                    /*!< (@ 0x0000086F) SDI10 alternate function pin configuration register        */
  };
  __IM  uint8_t   RESERVED28[11];
  __IOM uint8_t   PMS;                          /*!< (@ 0x0000087B) Port mode select register                                  */
  __IM  uint8_t   RESERVED29[2];
  __IOM uint8_t   SPIPCFG;                      /*!< (@ 0x0000087E) SPI alternate function pins configuration register         */
} PORT_Type;                                    /*!< Size = 2175 (0x87f)                                                       */



/* =========================================================================================================================== */
/* ================                                           TM40                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief General Purpose Timer 4 (TM40)
  */

typedef struct {                                /*!< (@ 0x40041D80) TM40 Structure                                             */
  __IM  uint16_t  TCR00;                        /*!< (@ 0x00000000) Timer count register 00                                    */
  __IM  uint16_t  TCR01;                        /*!< (@ 0x00000002) Timer count register 01                                    */
  __IM  uint16_t  TCR02;                        /*!< (@ 0x00000004) Timer count register 02                                    */
  __IM  uint16_t  TCR03;                        /*!< (@ 0x00000006) Timer count register 03                                    */
  __IM  uint16_t  RESERVED[4];
  __IOM uint16_t  TMR00;                        /*!< (@ 0x00000010) Timer mode register mn                                     */
  __IOM uint16_t  TMR01;                        /*!< (@ 0x00000012) Timer mode register mn                                     */
  __IOM uint16_t  TMR02;                        /*!< (@ 0x00000014) Timer mode register mn                                     */
  __IOM uint16_t  TMR03;                        /*!< (@ 0x00000016) Timer mode register mn                                     */
  __IM  uint16_t  RESERVED1[4];
  __IM  uint16_t  TSR00;                        /*!< (@ 0x00000020) Timer status register mn                                   */
  __IM  uint16_t  TSR01;                        /*!< (@ 0x00000022) Timer status register mn                                   */
  __IM  uint16_t  TSR02;                        /*!< (@ 0x00000024) Timer status register mn                                   */
  __IM  uint16_t  TSR03;                        /*!< (@ 0x00000026) Timer status register mn                                   */
  __IM  uint16_t  RESERVED2[4];
  __IM  uint16_t  TE0;                          /*!< (@ 0x00000030) Timer channel enable status register m                     */
  __IOM uint16_t  TS0;                          /*!< (@ 0x00000032) Timer channel start register 0                             */
  __IOM uint16_t  TT0;                          /*!< (@ 0x00000034) Timer channel stop register 0                              */
  __IOM uint16_t  TPS0;                         /*!< (@ 0x00000036) Timer clock select register 0                              */
  __IOM uint16_t  TO0;                          /*!< (@ 0x00000038) Timer output register 0                                    */
  __IOM uint16_t  TOE0;                         /*!< (@ 0x0000003A) Timer output enable register 0                             */
  __IOM uint16_t  TOL0;                         /*!< (@ 0x0000003C) Timer output level register 0                              */
  __IOM uint16_t  TOM0;                         /*!< (@ 0x0000003E) Timer output mode register 0                               */
  __IM  uint16_t  RESERVED3[172];
  __IOM uint16_t  TDR00;                        /*!< (@ 0x00000198) Timer data register 00                                     */
  
  union {
    __IOM uint16_t TDR01;                       /*!< (@ 0x0000019A) Timer data register 01                                     */
    
    struct {
      __IOM uint8_t TDR01L;                     /*!< (@ 0x0000019A) Timer data lower register 01                               */
      __IOM uint8_t TDR01H;                     /*!< (@ 0x0000019B) Timer data higher register 01                              */
    };
  };
  __IM  uint16_t  RESERVED4[36];
  __IOM uint16_t  TDR02;                        /*!< (@ 0x000001E4) Timer data register 02                                     */
  
  union {
    __IOM uint16_t TDR03;                       /*!< (@ 0x000001E6) Timer data register 03                                     */
    
    struct {
      __IOM uint8_t TDR03L;                     /*!< (@ 0x000001E6) Timer data lower register 03                               */
      __IOM uint8_t TDR03H;                     /*!< (@ 0x000001E7) Timer data higher register 03                              */
    };
  };
} TM40_Type;                                    /*!< Size = 488 (0x1e8)                                                        */



/* =========================================================================================================================== */
/* ================                                           TM41                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief General Purpose Timer 4 (TM41)
  */

typedef struct {                                /*!< (@ 0x40042180) TM41 Structure                                             */
  __IM  uint16_t  TCR10;                        /*!< (@ 0x00000000) Timer count register 00                                    */
  __IM  uint16_t  TCR11;                        /*!< (@ 0x00000002) Timer count register 01                                    */
  __IM  uint16_t  TCR12;                        /*!< (@ 0x00000004) Timer count register 02                                    */
  __IM  uint16_t  TCR13;                        /*!< (@ 0x00000006) Timer count register 03                                    */
  __IM  uint16_t  RESERVED[4];
  __IOM uint16_t  TMR10;                        /*!< (@ 0x00000010) Timer mode register mn                                     */
  __IOM uint16_t  TMR11;                        /*!< (@ 0x00000012) Timer mode register mn                                     */
  __IOM uint16_t  TMR12;                        /*!< (@ 0x00000014) Timer mode register mn                                     */
  __IOM uint16_t  TMR13;                        /*!< (@ 0x00000016) Timer mode register mn                                     */
  __IM  uint16_t  RESERVED1[4];
  __IM  uint16_t  TSR10;                        /*!< (@ 0x00000020) Timer status register mn                                   */
  __IM  uint16_t  TSR11;                        /*!< (@ 0x00000022) Timer status register mn                                   */
  __IM  uint16_t  TSR12;                        /*!< (@ 0x00000024) Timer status register mn                                   */
  __IM  uint16_t  TSR13;                        /*!< (@ 0x00000026) Timer status register mn                                   */
  __IM  uint16_t  RESERVED2[4];
  __IM  uint16_t  TE1;                          /*!< (@ 0x00000030) Timer channel enable status register m                     */
  __IOM uint16_t  TS1;                          /*!< (@ 0x00000032) Timer channel start register 0                             */
  __IOM uint16_t  TT1;                          /*!< (@ 0x00000034) Timer channel stop register 0                              */
  __IOM uint16_t  TPS1;                         /*!< (@ 0x00000036) Timer clock select register 0                              */
  __IOM uint16_t  TO1;                          /*!< (@ 0x00000038) Timer output register 0                                    */
  __IOM uint16_t  TOE1;                         /*!< (@ 0x0000003A) Timer output enable register 0                             */
  __IOM uint16_t  TOL1;                         /*!< (@ 0x0000003C) Timer output level register 0                              */
  __IOM uint16_t  TOM1;                         /*!< (@ 0x0000003E) Timer output mode register 0                               */
  __IM  uint16_t  RESERVED3[172];
  __IOM uint16_t  TDR10;                        /*!< (@ 0x00000198) Timer data register 00                                     */
  
  union {
    __IOM uint16_t TDR11;                       /*!< (@ 0x0000019A) Timer data register 01                                     */
    
    struct {
      __IOM uint8_t TDR11L;                     /*!< (@ 0x0000019A) Timer data lower register 01                               */
      __IOM uint8_t TDR11H;                     /*!< (@ 0x0000019B) Timer data higher register 01                              */
    };
  };
  __IM  uint16_t  RESERVED4[36];
  __IOM uint16_t  TDR12;                        /*!< (@ 0x000001E4) Timer data register 02                                     */
  
  union {
    __IOM uint16_t TDR13;                       /*!< (@ 0x000001E6) Timer data register 03                                     */
    
    struct {
      __IOM uint8_t TDR13L;                     /*!< (@ 0x000001E6) Timer data lower register 03                               */
      __IOM uint8_t TDR13H;                     /*!< (@ 0x000001E7) Timer data higher register 03                              */
    };
  };
} TM41_Type;                                    /*!< Size = 488 (0x1e8)                                                        */



/* =========================================================================================================================== */
/* ================                                           EPWM                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief Enhance PWM controller (EPWM)
  */

typedef struct {                                /*!< (@ 0x40044400) EPWM Structure                                             */
  __IOM uint16_t  EPWMSRC;                      /*!< (@ 0x00000000) Input source select register                               */
  __IM  uint16_t  RESERVED;
  __IOM uint16_t  EPWMSTC;                      /*!< (@ 0x00000004) EPWMO0n cutoff control register                            */
  __IM  uint16_t  RESERVED1;
  __IOM uint16_t  EPWMCTL;                      /*!< (@ 0x00000008) EPWMO0n output control register                            */
  __IM  uint16_t  RESERVED2;
  __IOM uint16_t  EPWMSTL;                      /*!< (@ 0x0000000C) EPWMO0n cutoff output level register                       */
  __IM  uint16_t  RESERVED3;
  __IOM uint16_t  EPWMSTR;                      /*!< (@ 0x00000010) Status register                                            */
} EPWM_Type;                                    /*!< Size = 18 (0x12)                                                          */



/* =========================================================================================================================== */
/* ================                                            RTC                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief Real-Time clock (RTC)
  */

typedef struct {                                /*!< (@ 0x40044F00) RTC Structure                                              */
  __IM  uint16_t  RESERVED[26];
  __IOM uint16_t  SUBCUD;                       /*!< (@ 0x00000034) Watch error correction register                            */
  __IM  uint16_t  RESERVED1[13];
  __IOM uint16_t  ITMC;                         /*!< (@ 0x00000050) 15-bit interval timer control register                     */
  __IOM uint8_t   SEC;                          /*!< (@ 0x00000052) Second count register                                      */
  __IOM uint8_t   MIN;                          /*!< (@ 0x00000053) Minute count register                                      */
  __IOM uint8_t   HOUR;                         /*!< (@ 0x00000054) Hour count register                                        */
  __IOM uint8_t   WEEK;                         /*!< (@ 0x00000055) Week count register                                        */
  __IOM uint8_t   DAY;                          /*!< (@ 0x00000056) Day count register                                         */
  __IOM uint8_t   MONTH;                        /*!< (@ 0x00000057) Month count register                                       */
  __IOM uint8_t   YEAR;                         /*!< (@ 0x00000058) Year count register                                        */
  __IM  uint8_t   RESERVED2;
  __IOM uint8_t   ALARMWM;                      /*!< (@ 0x0000005A) Alarm minute register                                      */
  __IOM uint8_t   ALARMWH;                      /*!< (@ 0x0000005B) Alarm hour register                                        */
  __IOM uint8_t   ALARMWW;                      /*!< (@ 0x0000005C) Alarm week register                                        */
  __IOM uint8_t   RTCC0;                        /*!< (@ 0x0000005D) Real-time clock control register 0                         */
  __IOM uint8_t   RTCC1;                        /*!< (@ 0x0000005E) Real-time clock control register 1                         */
  __IM  uint8_t   RESERVED3;
  __IM  uint16_t  RESERVED4;
} RTC_Type;                                     /*!< Size = 98 (0x62)                                                          */



/* =========================================================================================================================== */
/* ================                                           PCBZ                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief Clock/Buzzer output controller (PCBZ)
  */

typedef struct {                                /*!< (@ 0x40040FA0) PCBZ Structure                                             */
  __IM  uint8_t   RESERVED[5];
  __IOM uint8_t   CKS0;                         /*!< (@ 0x00000005) Clock output select registers 0                            */
  __IOM uint8_t   CKS1;                         /*!< (@ 0x00000006) Clock output select registers 1                            */
} PCBZ_Type;                                    /*!< Size = 7 (0x7)                                                            */



/* =========================================================================================================================== */
/* ================                                            WDT                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief Watchdog Timer with window (WDT)
  */

typedef struct {                                /*!< (@ 0x40020404) WDT Structure                                              */
  __IM  uint8_t   RESERVED;
  __IOM uint8_t   LOCKCTL;                      /*!< (@ 0x00000001) Lockup Watchdog timer enable register                      */
  __IOM uint8_t   PRCR;                         /*!< (@ 0x00000002) Lockup Watchdog timer enable protect register              */
  __IM  uint8_t   RESERVED1[3066];
  __IOM uint8_t   WDTE;                         /*!< (@ 0x00000BFD) Watchdog timer enable register                             */
} WDT_Type;                                     /*!< Size = 3070 (0xbfe)                                                       */



/* =========================================================================================================================== */
/* ================                                            ADC                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief A/D Converter (ADC)
  */

typedef struct {                                /*!< (@ 0x40045000) ADC Structure                                              */
  __IOM uint8_t   ADM0;                         /*!< (@ 0x00000000) A/D mode register 0                                        */
  __IM  uint8_t   RESERVED;
  __IOM uint8_t   ADM1;                         /*!< (@ 0x00000002) A/D mode register 1                                        */
  __IM  uint8_t   RESERVED1;
  __IOM uint8_t   ADM2;                         /*!< (@ 0x00000004) A/D mode register 2                                        */
  __IM  uint8_t   RESERVED2;
  __IOM uint8_t   ADTRG;                        /*!< (@ 0x00000006) A/D mode register 2                                        */
  __IM  uint8_t   RESERVED3;
  __IOM uint8_t   ADS;                          /*!< (@ 0x00000008) Analog input channel specification register                */
  __IM  uint8_t   RESERVED4;
  __IOM uint8_t   ADLL;                         /*!< (@ 0x0000000A) Conversion result comparison lower limit setting
                                                                    register                                                   */
  __IOM uint8_t   ADUL;                         /*!< (@ 0x0000000B) Conversion result comparison upper limit setting
                                                                    register                                                   */
  __IM  uint16_t  RESERVED5;
  
  union {
    __IOM uint16_t ADCR;                        /*!< (@ 0x0000000E) 12-bit A/D conversion result register                      */
    
    struct {
      __IM  uint8_t RESERVED6;
      __IOM uint8_t ADCRH;                      /*!< (@ 0x0000000F) Higher 8-bit A/D conversion result register                */
    };
  };
  __IM  uint16_t  RESERVED7[2];
  __IM  uint8_t   RESERVED8;
  __IOM uint8_t   ADSMPWAIT;                    /*!< (@ 0x00000015) A/D sampling wait control register                         */
} ADC_Type;                                     /*!< Size = 22 (0x16)                                                          */



/* =========================================================================================================================== */
/* ================                                           SCI0                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief Serial Communication Interface 0 with UART, SPI and simplified I2C supported (SCI0)
  */

typedef struct {                                /*!< (@ 0x40041100) SCI0 Structure                                             */
  __IM  uint16_t  SSR00;                        /*!< (@ 0x00000000) Serial status register mn                                  */
  __IM  uint16_t  SSR01;                        /*!< (@ 0x00000002) Serial status register mn                                  */
  __IM  uint16_t  SSR02;                        /*!< (@ 0x00000004) Serial status register mn                                  */
  __IM  uint16_t  SSR03;                        /*!< (@ 0x00000006) Serial status register mn                                  */
  __IOM uint16_t  SIR00;                        /*!< (@ 0x00000008) Serial flag clear trigger register mn                      */
  __IOM uint16_t  SIR01;                        /*!< (@ 0x0000000A) Serial flag clear trigger register mn                      */
  __IOM uint16_t  SIR02;                        /*!< (@ 0x0000000C) Serial flag clear trigger register mn                      */
  __IOM uint16_t  SIR03;                        /*!< (@ 0x0000000E) Serial flag clear trigger register mn                      */
  __IOM uint16_t  SMR00;                        /*!< (@ 0x00000010) Serial mode register mn                                    */
  __IOM uint16_t  SMR01;                        /*!< (@ 0x00000012) Serial mode register mn                                    */
  __IOM uint16_t  SMR02;                        /*!< (@ 0x00000014) Serial mode register mn                                    */
  __IOM uint16_t  SMR03;                        /*!< (@ 0x00000016) Serial mode register mn                                    */
  __IOM uint16_t  SCR00;                        /*!< (@ 0x00000018) Serial communication operation setting register
                                                                    mn                                                         */
  __IOM uint16_t  SCR01;                        /*!< (@ 0x0000001A) Serial communication operation setting register
                                                                    mn                                                         */
  __IOM uint16_t  SCR02;                        /*!< (@ 0x0000001C) Serial communication operation setting register
                                                                    mn                                                         */
  __IOM uint16_t  SCR03;                        /*!< (@ 0x0000001E) Serial communication operation setting register
                                                                    mn                                                         */
  __IM  uint16_t  SE0;                          /*!< (@ 0x00000020) Serial channel enable status register m                    */
  __IOM uint16_t  SS0;                          /*!< (@ 0x00000022) Serial channel start register 0                            */
  __IOM uint16_t  ST0;                          /*!< (@ 0x00000024) Serial channel stop register 0                             */
  __IOM uint16_t  SPS0;                         /*!< (@ 0x00000026) Serial clock select register 0                             */
  __IOM uint16_t  SO0;                          /*!< (@ 0x00000028) Serial output register 0                                   */
  __IOM uint16_t  SOE0;                         /*!< (@ 0x0000002A) Serial output enable register 0                            */
  __IM  uint16_t  RESERVED[4];
  __IOM uint16_t  SOL0;                         /*!< (@ 0x00000034) Serial output level register 0                             */
  __IM  uint16_t  RESERVED1[237];
  
  union {
    __IOM uint16_t SDR00;                       /*!< (@ 0x00000210) Serial data register 00                                    */
    __IOM uint8_t SIO00;                        /*!< (@ 0x00000210) SPI data register                                          */
    __IOM uint8_t TXD0;                         /*!< (@ 0x00000210) UART transmit data register                                */
  };
  
  union {
    __IOM uint16_t SDR01;                       /*!< (@ 0x00000212) Serial data register 01                                    */
    __IOM uint8_t SIO01;                        /*!< (@ 0x00000212) SPI data register                                          */
    __IOM uint8_t RXD0;                         /*!< (@ 0x00000212) UART receive data register                                 */
  };
  __IM  uint16_t  RESERVED2[24];
  
  union {
    __IOM uint16_t SDR02;                       /*!< (@ 0x00000244) Serial data register 02                                    */
    __IOM uint8_t SIO10;                        /*!< (@ 0x00000244) SPI data register                                          */
    __IOM uint8_t TXD1;                         /*!< (@ 0x00000244) UART transmit data register                                */
  };
  
  union {
    __IOM uint16_t SDR03;                       /*!< (@ 0x00000246) Serial data register 03                                    */
    __IOM uint8_t SIO11;                        /*!< (@ 0x00000246) SPI data register                                          */
    __IOM uint8_t RXD1;                         /*!< (@ 0x00000246) UART receive data register                                 */
  };
} SCI0_Type;                                    /*!< Size = 584 (0x248)                                                        */



/* =========================================================================================================================== */
/* ================                                           SCI1                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief Serial Communication Interface 1 with UART, SPI and simplified I2C supported (SCI1)
  */

typedef struct {                                /*!< (@ 0x40041540) SCI1 Structure                                             */
  __IM  uint16_t  SSR10;                        /*!< (@ 0x00000000) Serial status register mn                                  */
  __IM  uint16_t  SSR11;                        /*!< (@ 0x00000002) Serial status register mn                                  */
  __IM  uint16_t  RESERVED[2];
  __IOM uint16_t  SIR10;                        /*!< (@ 0x00000008) Serial flag clear trigger register mn                      */
  __IOM uint16_t  SIR11;                        /*!< (@ 0x0000000A) Serial flag clear trigger register mn                      */
  __IM  uint16_t  RESERVED1[2];
  __IOM uint16_t  SMR10;                        /*!< (@ 0x00000010) Serial mode register mn                                    */
  __IOM uint16_t  SMR11;                        /*!< (@ 0x00000012) Serial mode register mn                                    */
  __IM  uint16_t  RESERVED2[2];
  __IOM uint16_t  SCR10;                        /*!< (@ 0x00000018) Serial communication operation setting register
                                                                    mn                                                         */
  __IOM uint16_t  SCR11;                        /*!< (@ 0x0000001A) Serial communication operation setting register
                                                                    mn                                                         */
  __IM  uint16_t  RESERVED3[2];
  __IM  uint16_t  SE1;                          /*!< (@ 0x00000020) Serial channel enable status register 1                    */
  __IOM uint16_t  SS1;                          /*!< (@ 0x00000022) Serial channel start register 1                            */
  __IOM uint16_t  ST1;                          /*!< (@ 0x00000024) Serial channel stop register 1                             */
  __IOM uint16_t  SPS1;                         /*!< (@ 0x00000026) Serial clock select register 1                             */
  __IOM uint16_t  SO1;                          /*!< (@ 0x00000028) Serial output register 1                                   */
  __IOM uint16_t  SOE1;                         /*!< (@ 0x0000002A) Serial output enable register 1                            */
  __IM  uint16_t  RESERVED4[4];
  __IOM uint16_t  SOL1;                         /*!< (@ 0x00000034) Serial output level register 1                             */
  __IM  uint16_t  RESERVED5[233];
  
  union {
    __IOM uint16_t SDR10;                       /*!< (@ 0x00000208) Serial data register 10                                    */
    __IOM uint8_t SIO20;                        /*!< (@ 0x00000208) SPI data register                                          */
    __IOM uint8_t TXD2;                         /*!< (@ 0x00000208) UART transmit data register                                */
  };
  
  union {
    __IOM uint16_t SDR11;                       /*!< (@ 0x0000020A) Serial data register 11                                    */
    __IOM uint8_t SIO21;                        /*!< (@ 0x0000020A) SPI data register                                          */
    __IOM uint8_t RXD2;                         /*!< (@ 0x0000020A) UART receive data register                                 */
  };
} SCI1_Type;                                    /*!< Size = 524 (0x20c)                                                        */



/* =========================================================================================================================== */
/* ================                                            SPI                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief Serial Interface SPI (SPI)
  */

typedef struct {                                /*!< (@ 0x40042400) SPI Structure                                              */
  __IOM uint32_t  SPIM;                         /*!< (@ 0x00000000) SPI mode control register                                  */
  __IOM uint32_t  SPIC;                         /*!< (@ 0x00000004) SPI control register                                       */
  __IOM uint32_t  SDRO;                         /*!< (@ 0x00000008) Data buffer of transmission                                */
  __IOM uint32_t  SDRI;                         /*!< (@ 0x0000000C) Data buffer of reception                                   */
} SPI_Type;                                     /*!< Size = 16 (0x10)                                                          */



/* =========================================================================================================================== */
/* ================                                           IICA                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief Serial Interface I2C with multimaster and wakeup supported (IICA)
  */

typedef struct {                                /*!< (@ 0x40041A30) IICA Structure                                             */
  __IOM uint8_t   IICCTL00;                     /*!< (@ 0x00000000) IICA control register 0                                    */
  __IOM uint8_t   IICCTL01;                     /*!< (@ 0x00000001) IICA control register 0                                    */
  __IOM uint8_t   IICWL0;                       /*!< (@ 0x00000002) IICA low-level width setting register 0                    */
  __IOM uint8_t   IICWH0;                       /*!< (@ 0x00000003) IICA high-level width setting register 0                   */
  __IOM uint8_t   SVA0;                         /*!< (@ 0x00000004) Slave address register 0                                   */
  __IM  uint8_t   RESERVED[283];
  __IOM uint8_t   IICA0;                        /*!< (@ 0x00000120) IICA shift register 0                                      */
  __IM  uint8_t   IICS0;                        /*!< (@ 0x00000121) IICA status register 0                                     */
  __IOM uint8_t   IICF0;                        /*!< (@ 0x00000122) IICA flag register 0                                       */
} IICA_Type;                                    /*!< Size = 291 (0x123)                                                        */



/* =========================================================================================================================== */
/* ================                                           IRDA                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief IrDA communication module based on Infrared Data Association stardard 1.0 (IRDA)
  */

typedef struct {                                /*!< (@ 0x400440A0) IRDA Structure                                             */
  __IOM uint8_t   IRCR;                         /*!< (@ 0x00000000) IrDA control register                                      */
} IRDA_Type;                                    /*!< Size = 1 (0x1)                                                            */



/* =========================================================================================================================== */
/* ================                                            DMA                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief Enhanced DMA Controller (DMA)
  */

typedef struct {                                /*!< (@ 0x40005000) DMA Structure                                              */
  __IOM uint8_t   DMAEN0;                       /*!< (@ 0x00000000) DMA activation enable register 0                           */
  __IOM uint8_t   DMAEN1;                       /*!< (@ 0x00000001) DMA activation enable register 1                           */
  __IOM uint8_t   DMAEN2;                       /*!< (@ 0x00000002) DMA activation enable register 2                           */
  __IM  uint8_t   RESERVED;
  __IM  uint32_t  RESERVED1;
  __IOM uint32_t  DMABAR;                       /*!< (@ 0x00000008) DMA base address register                                  */
  __IOM uint32_t  IFPRCR;                       /*!< (@ 0x0000000C) DMA Trigger Protect register                               */
  __IOM uint8_t   DMAIF0;                       /*!< (@ 0x00000010) DMA Trigger enable register 0                              */
  __IOM uint8_t   DMAIF1;                       /*!< (@ 0x00000011) DMA Trigger enable register 1                              */
  __IOM uint8_t   DMAIF2;                       /*!< (@ 0x00000012) DMA Trigger enable register 2                              */
  __IM  uint8_t   RESERVED2;
} DMA_Type;                                     /*!< Size = 20 (0x14)                                                          */



/* =========================================================================================================================== */
/* ================                                          DMAVEC                                           ================ */
/* =========================================================================================================================== */


/**
  * @brief DMA Vector and Control Data Area (DMAVEC)
  */

typedef struct {                                /*!< (@ 0x20000000) DMAVEC Structure                                           */
  __IOM uint8_t   VEC[32];                      /*!< (@ 0x00000000) DMA vector area                                            */
  __IOM DMAVEC_CTRL_Type CTRL[24];              /*!< (@ 0x00000020) DMA control data area                                      */
} DMAVEC_Type;                                  /*!< Size = 416 (0x1a0)                                                        */



/* =========================================================================================================================== */
/* ================                                            ELC                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief Event Link Controller (ELC)
  */

typedef struct {                                /*!< (@ 0x40043400) ELC Structure                                              */
  __IOM uint8_t   ELSELR00;                     /*!< (@ 0x00000000) Event output destination select register 00                */
  __IOM uint8_t   ELSELR01;                     /*!< (@ 0x00000001) Event output destination select register 01                */
  __IOM uint8_t   ELSELR02;                     /*!< (@ 0x00000002) Event output destination select register 02                */
  __IOM uint8_t   ELSELR03;                     /*!< (@ 0x00000003) Event output destination select register 03                */
  __IOM uint8_t   ELSELR04;                     /*!< (@ 0x00000004) Event output destination select register 04                */
  __IOM uint8_t   ELSELR05;                     /*!< (@ 0x00000005) Event output destination select register 05                */
  __IOM uint8_t   ELSELR06;                     /*!< (@ 0x00000006) Event output destination select register 06                */
  __IOM uint8_t   ELSELR07;                     /*!< (@ 0x00000007) Event output destination select register 07                */
  __IOM uint8_t   ELSELR08;                     /*!< (@ 0x00000008) Event output destination select register 08                */
  __IOM uint8_t   ELSELR09;                     /*!< (@ 0x00000009) Event output destination select register 09                */
  __IOM uint8_t   ELSELR10;                     /*!< (@ 0x0000000A) Event output destination select register 10                */
  __IOM uint8_t   ELSELR11;                     /*!< (@ 0x0000000B) Event output destination select register 11                */
  __IOM uint8_t   ELSELR12;                     /*!< (@ 0x0000000C) Event output destination select register 12                */
  __IOM uint8_t   ELSELR13;                     /*!< (@ 0x0000000D) Event output destination select register 13                */
  __IOM uint8_t   ELSELR14;                     /*!< (@ 0x0000000E) Event output destination select register 14                */
} ELC_Type;                                     /*!< Size = 15 (0xf)                                                           */



/* =========================================================================================================================== */
/* ================                                            INT                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief Interrupt Controller (INT)
  */

typedef struct {                                /*!< (@ 0x40006000) INT Structure                                              */
  __IOM INT_IF_Type IF[32];                     /*!< (@ 0x00000000) Interrupt flag register                                    */
  __IM  uint8_t   RESERVED[128];
  __IOM INT_MK_Type MK[32];                     /*!< (@ 0x00000100) Interrupt mask register                                    */
} INT_Type;                                     /*!< Size = 384 (0x180)                                                        */



/* =========================================================================================================================== */
/* ================                                           INTM                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief Pin input edge detection (INTM)
  */

typedef struct {                                /*!< (@ 0x40045B38) INTM Structure                                             */
  __IOM uint8_t   EGP0;                         /*!< (@ 0x00000000) External interrupt rising edge enable register             */
  __IOM uint8_t   EGN0;                         /*!< (@ 0x00000001) External interrupt falling edge enable register            */
} INTM_Type;                                    /*!< Size = 2 (0x2)                                                            */



/* =========================================================================================================================== */
/* ================                                            KEY                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief Key interrupt (KEY)
  */

typedef struct {                                /*!< (@ 0x40044B30) KEY Structure                                              */
  __IM  uint8_t   RESERVED[7];
  __IOM uint8_t   KRM;                          /*!< (@ 0x00000007) Key return mode register                                   */
} KEY_Type;                                     /*!< Size = 8 (0x8)                                                            */



/* =========================================================================================================================== */
/* ================                                           MISC                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief Miscellaneous function (MISC)
  */

typedef struct {                                /*!< (@ 0x40040470) MISC Structure                                             */
  __IOM uint8_t   NFEN0;                        /*!< (@ 0x00000000) Noise filter enable register 0                             */
  __IOM uint8_t   NFEN1;                        /*!< (@ 0x00000001) Noise filter enable register 1                             */
  __IOM uint8_t   NFEN2;                        /*!< (@ 0x00000002) Noise filter enable register 2                             */
  __IOM uint8_t   ISC;                          /*!< (@ 0x00000003) Input switch control register                              */
  __IOM uint8_t   TIOS0;                        /*!< (@ 0x00000004) Timer I/O select register 0                                */
  __IOM uint8_t   TIOS1;                        /*!< (@ 0x00000005) Timer I/O select register 1                                */
  __IM  uint8_t   RESERVED[6];
  __IOM uint8_t   RTCCL;                        /*!< (@ 0x0000000C) Real-time clock select register                            */
} MISC_Type;                                    /*!< Size = 13 (0xd)                                                           */



/* =========================================================================================================================== */
/* ================                                            FMC                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief Flash Memory Controller (FMC)
  */

typedef struct {                                /*!< (@ 0x40020000) FMC Structure                                              */
  __IOM uint32_t  FLSTS;                        /*!< (@ 0x00000000) Flash status register                                      */
  __IOM uint32_t  FLOPMD1;                      /*!< (@ 0x00000004) Flash operation mode register 1                            */
  __IOM uint32_t  FLOPMD2;                      /*!< (@ 0x00000008) Flash operation mode register 2                            */
  __IOM uint32_t  FLERMD;                       /*!< (@ 0x0000000C) Flash erase mode register                                  */
  __IOM uint32_t  FLCERCNT;                     /*!< (@ 0x00000010) Flash chip erase control register                          */
  __IOM uint32_t  FLSERCNT;                     /*!< (@ 0x00000014) Flash sector erase control register                        */
  __IOM uint32_t  FLNVSCNT;                     /*!< (@ 0x00000018) Flash address setup time (Tnvs) control register           */
  __IOM uint32_t  FLPROCNT;                     /*!< (@ 0x0000001C) Flash program control register                             */
  __IOM uint32_t  FLPROT;                       /*!< (@ 0x00000020) Flash protect control register                             */
  __IM  uint32_t  RESERVED[5];
  __IOM uint32_t  FLPRVCNT;                     /*!< (@ 0x00000038) Flash program recovery time (Trcv) control register        */
  __IOM uint32_t  FLERVCNT;                     /*!< (@ 0x0000003C) Flash erase recovery time (Trcv) control register          */
} FMC_Type;                                     /*!< Size = 64 (0x40)                                                          */



/* =========================================================================================================================== */
/* ================                                            SAF                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief Flash memory CRC operation function (High-Speed CRC) (SAF)
  */

typedef struct {                                /*!< (@ 0x40020100) SAF Structure                                              */
  __IM  uint16_t  RESERVED[402];
  __IM  uint8_t   RESERVED1;
  __IOM uint8_t   RPECTL;                       /*!< (@ 0x00000325) RAM parity error control register                          */
  __IM  uint16_t  RESERVED2[2549];
  __IOM uint8_t   CRC0CTL;                      /*!< (@ 0x00001710) Flash memory CRC control register                          */
  __IM  uint8_t   RESERVED3;
  __IOM uint16_t  PGCRCL;                       /*!< (@ 0x00001712) Flash memory CRC operation result register                 */
  __IM  uint16_t  RESERVED4[63026];
  __IOM uint16_t  SFRGD;                        /*!< (@ 0x00020378) SFR guard control register                                 */
  __IM  uint16_t  RESERVED5[5952];
  __IOM uint16_t  CRCD;                         /*!< (@ 0x000231FA) CRC data register                                          */
  __IM  uint16_t  RESERVED6[88];
  __IOM uint8_t   CRCIN;                        /*!< (@ 0x000232AC) CRC input register                                         */
  __IM  uint8_t   RESERVED7;
  __IM  uint16_t  RESERVED8;
} SAF_Type;                                     /*!< Size = 144048 (0x232b0)                                                   */



/* =========================================================================================================================== */
/* ================                                            CRC                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief General Purpose CRC (CRC)
  */

typedef struct {                                /*!< (@ 0x400432F0) CRC Structure                                              */
  __IM  uint16_t  RESERVED[5];
  __IOM uint16_t  CRCD;                         /*!< (@ 0x0000000A) CRC data register                                          */
  __IM  uint16_t  RESERVED1[88];
  __IOM uint8_t   CRCIN;                        /*!< (@ 0x000000BC) CRC input register                                         */
  __IM  uint8_t   RESERVED2;
  __IM  uint16_t  RESERVED3;
} CRC_Type;                                     /*!< Size = 192 (0xc0)                                                         */



/* =========================================================================================================================== */
/* ================                                            DBG                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief DBG Controller (DBG)
  */

typedef struct {                                /*!< (@ 0x4001B000) DBG Structure                                              */
  __IM  uint32_t  DBGSTR;                       /*!< (@ 0x00000000) Debug status register                                      */
  __IOM uint32_t  DBGSTOPCR;                    /*!< (@ 0x00000004) Debug Stop Control register                                */
} DBG_Type;                                     /*!< Size = 8 (0x8)                                                            */



/* =========================================================================================================================== */
/* ================                                            BGR                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief Temperature Sensor calibration data (BGR)
  */

typedef struct {                                /*!< (@ 0x00500660) BGR Structure                                              */
  __IM  uint16_t  VBG85;                        /*!< (@ 0x00000000) The A/D conversion value of VBGR at 85 degrees
                                                                    and 3.0V reference voltage                                 */
  __IM  uint16_t  RESERVED;
  __IM  uint16_t  VBG25;                        /*!< (@ 0x00000004) The A/D conversion value of VBGR at 25 degrees
                                                                    and 3.0V reference voltage                                 */
} BGR_Type;                                     /*!< Size = 6 (0x6)                                                            */



/* =========================================================================================================================== */
/* ================                                            TSN                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief Temperature Sensor calibration data (TSN)
  */

typedef struct {                                /*!< (@ 0x00500668) TSN Structure                                              */
  __IM  int16_t   TSN85;                        /*!< (@ 0x00000000) The A/D conversion value of Temperature Sensor
                                                                    at 85 degrees and 3.0V reference voltage                   */
  __IM  uint16_t  RESERVED;
  __IM  int16_t   TSN25;                        /*!< (@ 0x00000004) The A/D conversion value of Temperature Sensor
                                                                    at 25 degrees and 3.0V reference voltage                   */
} TSN_Type;                                     /*!< Size = 6 (0x6)                                                            */



/* =========================================================================================================================== */
/* ================                                            UID                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief 128-bit Unique ID (UID)
  */

typedef struct {                                /*!< (@ 0x00500894) UID Structure                                              */
  __IM  uint32_t  UID0;                         /*!< (@ 0x00000000) UID word 0                                                 */
  __IM  uint32_t  UID1;                         /*!< (@ 0x00000004) UID word 1                                                 */
  __IM  uint32_t  UID2;                         /*!< (@ 0x00000008) UID word 2                                                 */
  __IM  uint32_t  UID3;                         /*!< (@ 0x0000000C) UID word 3                                                 */
} UID_Type;                                     /*!< Size = 16 (0x10)                                                          */


/** @} */ /* End of group Device_Peripheral_peripherals */


/* =========================================================================================================================== */
/* ================                          Device Specific Peripheral Address Map                           ================ */
/* =========================================================================================================================== */


/** @addtogroup Device_Peripheral_peripheralAddr
  * @{
  */

#define CGC_BASE                    0x40020400UL
#define RST_BASE                    0x40020420UL
#define LVD_BASE                    0x40020440UL
#define PORT_BASE                   0x40040000UL
#define TM40_BASE                   0x40041D80UL
#define TM41_BASE                   0x40042180UL
#define EPWM_BASE                   0x40044400UL
#define RTC_BASE                    0x40044F00UL
#define PCBZ_BASE                   0x40040FA0UL
#define WDT_BASE                    0x40020404UL
#define ADC_BASE                    0x40045000UL
#define SCI0_BASE                   0x40041100UL
#define SCI1_BASE                   0x40041540UL
#define SPI_BASE                    0x40042400UL
#define IICA_BASE                   0x40041A30UL
#define IRDA_BASE                   0x400440A0UL
#define DMA_BASE                    0x40005000UL
#define DMAVEC_BASE                 0x20000000UL
#define ELC_BASE                    0x40043400UL
#define INT_BASE                    0x40006000UL
#define INTM_BASE                   0x40045B38UL
#define KEY_BASE                    0x40044B30UL
#define MISC_BASE                   0x40040470UL
#define FMC_BASE                    0x40020000UL
#define SAF_BASE                    0x40020100UL
#define CRC_BASE                    0x400432F0UL
#define DBG_BASE                    0x4001B000UL
#define BGR_BASE                    0x00500660UL
#define TSN_BASE                    0x00500668UL
#define UID_BASE                    0x00500894UL

/** @} */ /* End of group Device_Peripheral_peripheralAddr */


/* =========================================================================================================================== */
/* ================                                  Peripheral declaration                                   ================ */
/* =========================================================================================================================== */


/** @addtogroup Device_Peripheral_declaration
  * @{
  */

#define CGC                         ((CGC_Type*)               CGC_BASE)
#define RST                         ((RST_Type*)               RST_BASE)
#define LVD                         ((LVD_Type*)               LVD_BASE)
#define PORT                        ((PORT_Type*)              PORT_BASE)
#define TM40                        ((TM40_Type*)              TM40_BASE)
#define TM41                        ((TM41_Type*)              TM41_BASE)
#define EPWM                        ((EPWM_Type*)              EPWM_BASE)
#define RTC                         ((RTC_Type*)               RTC_BASE)
#define PCBZ                        ((PCBZ_Type*)              PCBZ_BASE)
#define WDT                         ((WDT_Type*)               WDT_BASE)
#define ADC                         ((ADC_Type*)               ADC_BASE)
#define SCI0                        ((SCI0_Type*)              SCI0_BASE)
#define SCI1                        ((SCI1_Type*)              SCI1_BASE)
#define SPI                         ((SPI_Type*)               SPI_BASE)
#define IICA                        ((IICA_Type*)              IICA_BASE)
#define IRDA                        ((IRDA_Type*)              IRDA_BASE)
#define DMA                         ((DMA_Type*)               DMA_BASE)
#define DMAVEC                      ((DMAVEC_Type*)            DMAVEC_BASE)
#define ELC                         ((ELC_Type*)               ELC_BASE)
#define INT                         ((INT_Type*)               INT_BASE)
#define INTM                        ((INTM_Type*)              INTM_BASE)
#define KEY                         ((KEY_Type*)               KEY_BASE)
#define MISC                        ((MISC_Type*)              MISC_BASE)
#define FMC                         ((FMC_Type*)               FMC_BASE)
#define SAF                         ((SAF_Type*)               SAF_BASE)
#define CRC                         ((CRC_Type*)               CRC_BASE)
#define DBG                         ((DBG_Type*)               DBG_BASE)
#define BGR                         ((BGR_Type*)               BGR_BASE)
#define TSN                         ((TSN_Type*)               TSN_BASE)
#define UID                         ((UID_Type*)               UID_BASE)

/** @} */ /* End of group Device_Peripheral_declaration */


/* =========================================  End of section using anonymous unions  ========================================= */
#if defined (__CC_ARM)
  #pragma pop
#elif defined (__ICCARM__)
  /* leave anonymous unions enabled */
#elif (__ARMCC_VERSION >= 6010050)
  #pragma clang diagnostic pop
#elif defined (__GNUC__)
  /* anonymous unions are enabled by default */
#elif defined (__TMS470__)
  /* anonymous unions are enabled by default */
#elif defined (__TASKING__)
  #pragma warning restore
#elif defined (__CSMC__)
  /* anonymous unions are enabled by default */
#endif


/* =========================================================================================================================== */
/* ================                                 Pos/Mask Cluster Section                                  ================ */
/* =========================================================================================================================== */


/** @addtogroup PosMask_clusters
  * @{
  */



/* =========================================================================================================================== */
/* ================                                           CTRL                                            ================ */
/* =========================================================================================================================== */

/* =========================================================  DMACR  ========================================================= */
#define CTRL_DMACR_SZ_Pos                 (6UL)                     /*!< CTRL DMACR: SZ (Bit 6)                                */
#define CTRL_DMACR_SZ_Msk                 (0xc0UL)                  /*!< CTRL DMACR: SZ (Bitfield-Mask: 0x03)                  */
#define CTRL_DMACR_RPTINT_Pos             (5UL)                     /*!< CTRL DMACR: RPTINT (Bit 5)                            */
#define CTRL_DMACR_RPTINT_Msk             (0x20UL)                  /*!< CTRL DMACR: RPTINT (Bitfield-Mask: 0x01)              */
#define CTRL_DMACR_CHNE_Pos               (4UL)                     /*!< CTRL DMACR: CHNE (Bit 4)                              */
#define CTRL_DMACR_CHNE_Msk               (0x10UL)                  /*!< CTRL DMACR: CHNE (Bitfield-Mask: 0x01)                */
#define CTRL_DMACR_DAMOD_Pos              (3UL)                     /*!< CTRL DMACR: DAMOD (Bit 3)                             */
#define CTRL_DMACR_DAMOD_Msk              (0x8UL)                   /*!< CTRL DMACR: DAMOD (Bitfield-Mask: 0x01)               */
#define CTRL_DMACR_SAMOD_Pos              (2UL)                     /*!< CTRL DMACR: SAMOD (Bit 2)                             */
#define CTRL_DMACR_SAMOD_Msk              (0x4UL)                   /*!< CTRL DMACR: SAMOD (Bitfield-Mask: 0x01)               */
#define CTRL_DMACR_RPTSEL_Pos             (1UL)                     /*!< CTRL DMACR: RPTSEL (Bit 1)                            */
#define CTRL_DMACR_RPTSEL_Msk             (0x2UL)                   /*!< CTRL DMACR: RPTSEL (Bitfield-Mask: 0x01)              */
#define CTRL_DMACR_MODE_Pos               (0UL)                     /*!< CTRL DMACR: MODE (Bit 0)                              */
#define CTRL_DMACR_MODE_Msk               (0x1UL)                   /*!< CTRL DMACR: MODE (Bitfield-Mask: 0x01)                */
/* =========================================================  DMBLS  ========================================================= */
/* =========================================================  DMACT  ========================================================= */
/* =========================================================  DMRLD  ========================================================= */
/* =========================================================  DMSAR  ========================================================= */
/* =========================================================  DMDAR  ========================================================= */


/* =========================================================================================================================== */
/* ================                                            IF                                             ================ */
/* =========================================================================================================================== */

/* ==========================================================  IFL  ========================================================== */


/* =========================================================================================================================== */
/* ================                                            MK                                             ================ */
/* =========================================================================================================================== */

/* ==========================================================  MKL  ========================================================== */

/** @} */ /* End of group PosMask_clusters */


/* =========================================================================================================================== */
/* ================                                Pos/Mask Peripheral Section                                ================ */
/* =========================================================================================================================== */


/** @addtogroup PosMask_peripherals
  * @{
  */



/* =========================================================================================================================== */
/* ================                                            CGC                                            ================ */
/* =========================================================================================================================== */

/* ==========================================================  CMC  ========================================================== */
#define CGC_CMC_AMPH_Pos                  (0UL)                     /*!< CGC CMC: AMPH (Bit 0)                                 */
#define CGC_CMC_AMPH_Msk                  (0x1UL)                   /*!< CGC CMC: AMPH (Bitfield-Mask: 0x01)                   */
#define CGC_CMC_AMPHS_Pos                 (1UL)                     /*!< CGC CMC: AMPHS (Bit 1)                                */
#define CGC_CMC_AMPHS_Msk                 (0x6UL)                   /*!< CGC CMC: AMPHS (Bitfield-Mask: 0x03)                  */
#define CGC_CMC_OSCSELS_Pos               (4UL)                     /*!< CGC CMC: OSCSELS (Bit 4)                              */
#define CGC_CMC_OSCSELS_Msk               (0x10UL)                  /*!< CGC CMC: OSCSELS (Bitfield-Mask: 0x01)                */
#define CGC_CMC_EXCLKS_Pos                (5UL)                     /*!< CGC CMC: EXCLKS (Bit 5)                               */
#define CGC_CMC_EXCLKS_Msk                (0x20UL)                  /*!< CGC CMC: EXCLKS (Bitfield-Mask: 0x01)                 */
#define CGC_CMC_OSCSEL_Pos                (6UL)                     /*!< CGC CMC: OSCSEL (Bit 6)                               */
#define CGC_CMC_OSCSEL_Msk                (0x40UL)                  /*!< CGC CMC: OSCSEL (Bitfield-Mask: 0x01)                 */
#define CGC_CMC_EXCLK_Pos                 (7UL)                     /*!< CGC CMC: EXCLK (Bit 7)                                */
#define CGC_CMC_EXCLK_Msk                 (0x80UL)                  /*!< CGC CMC: EXCLK (Bitfield-Mask: 0x01)                  */
/* ==========================================================  CSC  ========================================================== */
#define CGC_CSC_HIOSTOP_Pos               (0UL)                     /*!< CGC CSC: HIOSTOP (Bit 0)                              */
#define CGC_CSC_HIOSTOP_Msk               (0x1UL)                   /*!< CGC CSC: HIOSTOP (Bitfield-Mask: 0x01)                */
#define CGC_CSC_XTSTOP_Pos                (6UL)                     /*!< CGC CSC: XTSTOP (Bit 6)                               */
#define CGC_CSC_XTSTOP_Msk                (0x40UL)                  /*!< CGC CSC: XTSTOP (Bitfield-Mask: 0x01)                 */
#define CGC_CSC_MSTOP_Pos                 (7UL)                     /*!< CGC CSC: MSTOP (Bit 7)                                */
#define CGC_CSC_MSTOP_Msk                 (0x80UL)                  /*!< CGC CSC: MSTOP (Bitfield-Mask: 0x01)                  */
/* =========================================================  OSTC  ========================================================== */
/* =========================================================  OSTS  ========================================================== */
/* ==========================================================  CKC  ========================================================== */
#define CGC_CKC_MCM0_Pos                  (4UL)                     /*!< CGC CKC: MCM0 (Bit 4)                                 */
#define CGC_CKC_MCM0_Msk                  (0x10UL)                  /*!< CGC CKC: MCM0 (Bitfield-Mask: 0x01)                   */
#define CGC_CKC_MCS_Pos                   (5UL)                     /*!< CGC CKC: MCS (Bit 5)                                  */
#define CGC_CKC_MCS_Msk                   (0x20UL)                  /*!< CGC CKC: MCS (Bitfield-Mask: 0x01)                    */
#define CGC_CKC_CSS_Pos                   (6UL)                     /*!< CGC CKC: CSS (Bit 6)                                  */
#define CGC_CKC_CSS_Msk                   (0x40UL)                  /*!< CGC CKC: CSS (Bitfield-Mask: 0x01)                    */
#define CGC_CKC_CLS_Pos                   (7UL)                     /*!< CGC CKC: CLS (Bit 7)                                  */
#define CGC_CKC_CLS_Msk                   (0x80UL)                  /*!< CGC CKC: CLS (Bitfield-Mask: 0x01)                    */
/* =========================================================  PER0  ========================================================== */
#define CGC_PER0_TM40EN_Pos               (0UL)                     /*!< CGC PER0: TM40EN (Bit 0)                              */
#define CGC_PER0_TM40EN_Msk               (0x1UL)                   /*!< CGC PER0: TM40EN (Bitfield-Mask: 0x01)                */
#define CGC_PER0_TM41EN_Pos               (1UL)                     /*!< CGC PER0: TM41EN (Bit 1)                              */
#define CGC_PER0_TM41EN_Msk               (0x2UL)                   /*!< CGC PER0: TM41EN (Bitfield-Mask: 0x01)                */
#define CGC_PER0_SCI0EN_Pos               (2UL)                     /*!< CGC PER0: SCI0EN (Bit 2)                              */
#define CGC_PER0_SCI0EN_Msk               (0x4UL)                   /*!< CGC PER0: SCI0EN (Bitfield-Mask: 0x01)                */
#define CGC_PER0_SCI1EN_Pos               (3UL)                     /*!< CGC PER0: SCI1EN (Bit 3)                              */
#define CGC_PER0_SCI1EN_Msk               (0x8UL)                   /*!< CGC PER0: SCI1EN (Bitfield-Mask: 0x01)                */
#define CGC_PER0_IICA0EN_Pos              (4UL)                     /*!< CGC PER0: IICA0EN (Bit 4)                             */
#define CGC_PER0_IICA0EN_Msk              (0x10UL)                  /*!< CGC PER0: IICA0EN (Bitfield-Mask: 0x01)               */
#define CGC_PER0_ADCEN_Pos                (5UL)                     /*!< CGC PER0: ADCEN (Bit 5)                               */
#define CGC_PER0_ADCEN_Msk                (0x20UL)                  /*!< CGC PER0: ADCEN (Bitfield-Mask: 0x01)                 */
#define CGC_PER0_IRDAEN_Pos               (6UL)                     /*!< CGC PER0: IRDAEN (Bit 6)                              */
#define CGC_PER0_IRDAEN_Msk               (0x40UL)                  /*!< CGC PER0: IRDAEN (Bitfield-Mask: 0x01)                */
#define CGC_PER0_RTCEN_Pos                (7UL)                     /*!< CGC PER0: RTCEN (Bit 7)                               */
#define CGC_PER0_RTCEN_Msk                (0x80UL)                  /*!< CGC PER0: RTCEN (Bitfield-Mask: 0x01)                 */
/* =========================================================  PER1  ========================================================== */
#define CGC_PER1_EPWMEN_Pos               (2UL)                     /*!< CGC PER1: EPWMEN (Bit 2)                              */
#define CGC_PER1_EPWMEN_Msk               (0x4UL)                   /*!< CGC PER1: EPWMEN (Bitfield-Mask: 0x01)                */
#define CGC_PER1_DMAEN_Pos                (3UL)                     /*!< CGC PER1: DMAEN (Bit 3)                               */
#define CGC_PER1_DMAEN_Msk                (0x8UL)                   /*!< CGC PER1: DMAEN (Bitfield-Mask: 0x01)                 */
#define CGC_PER1_PGACMPEN_Pos             (5UL)                     /*!< CGC PER1: PGACMPEN (Bit 5)                            */
#define CGC_PER1_PGACMPEN_Msk             (0x20UL)                  /*!< CGC PER1: PGACMPEN (Bitfield-Mask: 0x01)              */
#define CGC_PER1_SPIEN_Pos                (7UL)                     /*!< CGC PER1: SPIEN (Bit 7)                               */
#define CGC_PER1_SPIEN_Msk                (0x80UL)                  /*!< CGC PER1: SPIEN (Bitfield-Mask: 0x01)                 */
/* =========================================================  OSMC  ========================================================== */
#define CGC_OSMC_WUTMMCK0_Pos             (4UL)                     /*!< CGC OSMC: WUTMMCK0 (Bit 4)                            */
#define CGC_OSMC_WUTMMCK0_Msk             (0x10UL)                  /*!< CGC OSMC: WUTMMCK0 (Bitfield-Mask: 0x01)              */
#define CGC_OSMC_RTCLPC_Pos               (7UL)                     /*!< CGC OSMC: RTCLPC (Bit 7)                              */
#define CGC_OSMC_RTCLPC_Msk               (0x80UL)                  /*!< CGC OSMC: RTCLPC (Bitfield-Mask: 0x01)                */
/* ========================================================  LOSCSEL  ======================================================== */
#define CGC_LOSCSEL_LOSCSEL_Pos           (0UL)                     /*!< CGC LOSCSEL: LOSCSEL (Bit 0)                          */
#define CGC_LOSCSEL_LOSCSEL_Msk           (0x1UL)                   /*!< CGC LOSCSEL: LOSCSEL (Bitfield-Mask: 0x01)            */
/* =========================================================  PRCR  ========================================================== */
/* =======================================================  SUBCKSEL  ======================================================== */
#define CGC_SUBCKSEL_SELLOSC_Pos          (0UL)                     /*!< CGC SUBCKSEL: SELLOSC (Bit 0)                         */
#define CGC_SUBCKSEL_SELLOSC_Msk          (0x1UL)                   /*!< CGC SUBCKSEL: SELLOSC (Bitfield-Mask: 0x01)           */
/* ========================================================  HOCODIV  ======================================================== */
/* ========================================================  HIOTRM  ========================================================= */
/* ========================================================  PMUKEY  ========================================================= */
/* ========================================================  PMUCTL  ========================================================= */
/* ========================================================  WDTCFG0  ======================================================== */
/* ========================================================  WDTCFG1  ======================================================== */
/* ========================================================  WDTCFG2  ======================================================== */
/* ========================================================  WDTCFG3  ======================================================== */
/* ========================================================  HOCOFC  ========================================================= */
#define CGC_HOCOFC_FCST_Pos               (0UL)                     /*!< CGC HOCOFC: FCST (Bit 0)                              */
#define CGC_HOCOFC_FCST_Msk               (0x1UL)                   /*!< CGC HOCOFC: FCST (Bitfield-Mask: 0x01)                */
#define CGC_HOCOFC_FCIE_Pos               (6UL)                     /*!< CGC HOCOFC: FCIE (Bit 6)                              */
#define CGC_HOCOFC_FCIE_Msk               (0x40UL)                  /*!< CGC HOCOFC: FCIE (Bitfield-Mask: 0x01)                */
#define CGC_HOCOFC_FCMD_Pos               (7UL)                     /*!< CGC HOCOFC: FCMD (Bit 7)                              */
#define CGC_HOCOFC_FCMD_Msk               (0x80UL)                  /*!< CGC HOCOFC: FCMD (Bitfield-Mask: 0x01)                */


/* =========================================================================================================================== */
/* ================                                            RST                                            ================ */
/* =========================================================================================================================== */

/* =========================================================  RESF  ========================================================== */
#define RST_RESF_LVIRF_Pos                (0UL)                     /*!< RST RESF: LVIRF (Bit 0)                               */
#define RST_RESF_LVIRF_Msk                (0x1UL)                   /*!< RST RESF: LVIRF (Bitfield-Mask: 0x01)                 */
#define RST_RESF_IAWRF_Pos                (1UL)                     /*!< RST RESF: IAWRF (Bit 1)                               */
#define RST_RESF_IAWRF_Msk                (0x2UL)                   /*!< RST RESF: IAWRF (Bitfield-Mask: 0x01)                 */
#define RST_RESF_RPERF_Pos                (2UL)                     /*!< RST RESF: RPERF (Bit 2)                               */
#define RST_RESF_RPERF_Msk                (0x4UL)                   /*!< RST RESF: RPERF (Bitfield-Mask: 0x01)                 */
#define RST_RESF_WDTRF_Pos                (4UL)                     /*!< RST RESF: WDTRF (Bit 4)                               */
#define RST_RESF_WDTRF_Msk                (0x10UL)                  /*!< RST RESF: WDTRF (Bitfield-Mask: 0x01)                 */
#define RST_RESF_SYSRF_Pos                (7UL)                     /*!< RST RESF: SYSRF (Bit 7)                               */
#define RST_RESF_SYSRF_Msk                (0x80UL)                  /*!< RST RESF: SYSRF (Bitfield-Mask: 0x01)                 */


/* =========================================================================================================================== */
/* ================                                            LVD                                            ================ */
/* =========================================================================================================================== */

/* =========================================================  LVIM  ========================================================== */
#define LVD_LVIM_LVIF_Pos                 (0UL)                     /*!< LVD LVIM: LVIF (Bit 0)                                */
#define LVD_LVIM_LVIF_Msk                 (0x1UL)                   /*!< LVD LVIM: LVIF (Bitfield-Mask: 0x01)                  */
#define LVD_LVIM_LVIOMSK_Pos              (1UL)                     /*!< LVD LVIM: LVIOMSK (Bit 1)                             */
#define LVD_LVIM_LVIOMSK_Msk              (0x2UL)                   /*!< LVD LVIM: LVIOMSK (Bitfield-Mask: 0x01)               */
#define LVD_LVIM_LVISEN_Pos               (7UL)                     /*!< LVD LVIM: LVISEN (Bit 7)                              */
#define LVD_LVIM_LVISEN_Msk               (0x80UL)                  /*!< LVD LVIM: LVISEN (Bitfield-Mask: 0x01)                */
/* =========================================================  LVIS  ========================================================== */
#define LVD_LVIS_LVILV_Pos                (0UL)                     /*!< LVD LVIS: LVILV (Bit 0)                               */
#define LVD_LVIS_LVILV_Msk                (0x1UL)                   /*!< LVD LVIS: LVILV (Bitfield-Mask: 0x01)                 */
#define LVD_LVIS_LVIMD_Pos                (7UL)                     /*!< LVD LVIS: LVIMD (Bit 7)                               */
#define LVD_LVIS_LVIMD_Msk                (0x80UL)                  /*!< LVD LVIS: LVIMD (Bitfield-Mask: 0x01)                 */


/* =========================================================================================================================== */
/* ================                                           PORT                                            ================ */
/* =========================================================================================================================== */

/* ==========================================================  PM0  ========================================================== */
/* ==========================================================  PM1  ========================================================== */
/* ==========================================================  PM2  ========================================================== */
/* ==========================================================  PM3  ========================================================== */
/* ==========================================================  PM4  ========================================================== */
/* ==========================================================  PM5  ========================================================== */
/* ==========================================================  PM6  ========================================================== */
/* ==========================================================  PM7  ========================================================== */
/* =========================================================  PM12  ========================================================== */
/* =========================================================  PM13  ========================================================== */
/* =========================================================  PM14  ========================================================== */
/* ==========================================================  P0  =========================================================== */
/* ==========================================================  P1  =========================================================== */
/* ==========================================================  P2  =========================================================== */
/* ==========================================================  P3  =========================================================== */
/* ==========================================================  P4  =========================================================== */
/* ==========================================================  P5  =========================================================== */
/* ==========================================================  P6  =========================================================== */
/* ==========================================================  P7  =========================================================== */
/* ==========================================================  P12  ========================================================== */
/* ==========================================================  P13  ========================================================== */
/* ==========================================================  P14  ========================================================== */
/* ==========================================================  PU0  ========================================================== */
/* ==========================================================  PU1  ========================================================== */
/* ==========================================================  PU2  ========================================================== */
/* ==========================================================  PU3  ========================================================== */
/* ==========================================================  PU4  ========================================================== */
/* ==========================================================  PU5  ========================================================== */
/* ==========================================================  PU6  ========================================================== */
/* ==========================================================  PU7  ========================================================== */
/* =========================================================  PU12  ========================================================== */
/* =========================================================  PU13  ========================================================== */
/* =========================================================  PU14  ========================================================== */
/* ==========================================================  PD0  ========================================================== */
/* ==========================================================  PD1  ========================================================== */
/* ==========================================================  PD2  ========================================================== */
/* ==========================================================  PD3  ========================================================== */
/* ==========================================================  PD5  ========================================================== */
/* ==========================================================  PD6  ========================================================== */
/* ==========================================================  PD7  ========================================================== */
/* =========================================================  PD12  ========================================================== */
/* =========================================================  PD13  ========================================================== */
/* =========================================================  PD14  ========================================================== */
/* =========================================================  POM0  ========================================================== */
/* =========================================================  POM1  ========================================================== */
/* =========================================================  POM2  ========================================================== */
/* =========================================================  POM3  ========================================================== */
/* =========================================================  POM4  ========================================================== */
/* =========================================================  POM5  ========================================================== */
/* =========================================================  POM6  ========================================================== */
/* =========================================================  POM7  ========================================================== */
/* =========================================================  POM12  ========================================================= */
/* =========================================================  POM13  ========================================================= */
/* =========================================================  POM14  ========================================================= */
/* =========================================================  PMC0  ========================================================== */
/* =========================================================  PMC1  ========================================================== */
/* =========================================================  PMC2  ========================================================== */
/* =========================================================  PMC3  ========================================================== */
/* =========================================================  PMC5  ========================================================== */
/* =========================================================  PMC6  ========================================================== */
/* =========================================================  PMC7  ========================================================== */
/* =========================================================  PMC12  ========================================================= */
/* =========================================================  PMC13  ========================================================= */
/* =========================================================  PMC14  ========================================================= */
/* =========================================================  PSET0  ========================================================= */
/* =========================================================  PSET1  ========================================================= */
/* =========================================================  PSET2  ========================================================= */
/* =========================================================  PSET3  ========================================================= */
/* =========================================================  PSET4  ========================================================= */
/* =========================================================  PSET5  ========================================================= */
/* =========================================================  PSET6  ========================================================= */
/* =========================================================  PSET7  ========================================================= */
/* ========================================================  PSET12  ========================================================= */
/* ========================================================  PSET13  ========================================================= */
/* ========================================================  PSET14  ========================================================= */
/* =========================================================  PCLR0  ========================================================= */
/* =========================================================  PCLR1  ========================================================= */
/* =========================================================  PCLR2  ========================================================= */
/* =========================================================  PCLR3  ========================================================= */
/* =========================================================  PCLR4  ========================================================= */
/* =========================================================  PCLR5  ========================================================= */
/* =========================================================  PCLR6  ========================================================= */
/* =========================================================  PCLR7  ========================================================= */
/* ========================================================  PCLR12  ========================================================= */
/* ========================================================  PCLR13  ========================================================= */
/* ========================================================  PCLR14  ========================================================= */
/* ========================================================  P00CFG  ========================================================= */
#define PORT_P00CFG_CFG_Pos               (0UL)                     /*!< PORT P00CFG: CFG (Bit 0)                              */
#define PORT_P00CFG_CFG_Msk               (0xfUL)                   /*!< PORT P00CFG: CFG (Bitfield-Mask: 0x0f)                */
/* ========================================================  P01CFG  ========================================================= */
#define PORT_P01CFG_CFG_Pos               (0UL)                     /*!< PORT P01CFG: CFG (Bit 0)                              */
#define PORT_P01CFG_CFG_Msk               (0xfUL)                   /*!< PORT P01CFG: CFG (Bitfield-Mask: 0x0f)                */
/* ========================================================  P10CFG  ========================================================= */
#define PORT_P10CFG_CFG_Pos               (0UL)                     /*!< PORT P10CFG: CFG (Bit 0)                              */
#define PORT_P10CFG_CFG_Msk               (0xfUL)                   /*!< PORT P10CFG: CFG (Bitfield-Mask: 0x0f)                */
/* ========================================================  P11CFG  ========================================================= */
#define PORT_P11CFG_CFG_Pos               (0UL)                     /*!< PORT P11CFG: CFG (Bit 0)                              */
#define PORT_P11CFG_CFG_Msk               (0xfUL)                   /*!< PORT P11CFG: CFG (Bitfield-Mask: 0x0f)                */
/* ========================================================  P12CFG  ========================================================= */
#define PORT_P12CFG_CFG_Pos               (0UL)                     /*!< PORT P12CFG: CFG (Bit 0)                              */
#define PORT_P12CFG_CFG_Msk               (0xfUL)                   /*!< PORT P12CFG: CFG (Bitfield-Mask: 0x0f)                */
/* ========================================================  P13CFG  ========================================================= */
#define PORT_P13CFG_CFG_Pos               (0UL)                     /*!< PORT P13CFG: CFG (Bit 0)                              */
#define PORT_P13CFG_CFG_Msk               (0xfUL)                   /*!< PORT P13CFG: CFG (Bitfield-Mask: 0x0f)                */
/* ========================================================  P14CFG  ========================================================= */
#define PORT_P14CFG_CFG_Pos               (0UL)                     /*!< PORT P14CFG: CFG (Bit 0)                              */
#define PORT_P14CFG_CFG_Msk               (0xfUL)                   /*!< PORT P14CFG: CFG (Bitfield-Mask: 0x0f)                */
/* ========================================================  P15CFG  ========================================================= */
#define PORT_P15CFG_CFG_Pos               (0UL)                     /*!< PORT P15CFG: CFG (Bit 0)                              */
#define PORT_P15CFG_CFG_Msk               (0xfUL)                   /*!< PORT P15CFG: CFG (Bitfield-Mask: 0x0f)                */
/* ========================================================  P16CFG  ========================================================= */
#define PORT_P16CFG_CFG_Pos               (0UL)                     /*!< PORT P16CFG: CFG (Bit 0)                              */
#define PORT_P16CFG_CFG_Msk               (0xfUL)                   /*!< PORT P16CFG: CFG (Bitfield-Mask: 0x0f)                */
/* ========================================================  P17CFG  ========================================================= */
#define PORT_P17CFG_CFG_Pos               (0UL)                     /*!< PORT P17CFG: CFG (Bit 0)                              */
#define PORT_P17CFG_CFG_Msk               (0xfUL)                   /*!< PORT P17CFG: CFG (Bitfield-Mask: 0x0f)                */
/* ========================================================  P20CFG  ========================================================= */
#define PORT_P20CFG_CFG_Pos               (0UL)                     /*!< PORT P20CFG: CFG (Bit 0)                              */
#define PORT_P20CFG_CFG_Msk               (0xfUL)                   /*!< PORT P20CFG: CFG (Bitfield-Mask: 0x0f)                */
/* ========================================================  P21CFG  ========================================================= */
#define PORT_P21CFG_CFG_Pos               (0UL)                     /*!< PORT P21CFG: CFG (Bit 0)                              */
#define PORT_P21CFG_CFG_Msk               (0xfUL)                   /*!< PORT P21CFG: CFG (Bitfield-Mask: 0x0f)                */
/* ========================================================  P22CFG  ========================================================= */
#define PORT_P22CFG_CFG_Pos               (0UL)                     /*!< PORT P22CFG: CFG (Bit 0)                              */
#define PORT_P22CFG_CFG_Msk               (0xfUL)                   /*!< PORT P22CFG: CFG (Bitfield-Mask: 0x0f)                */
/* ========================================================  P23CFG  ========================================================= */
#define PORT_P23CFG_CFG_Pos               (0UL)                     /*!< PORT P23CFG: CFG (Bit 0)                              */
#define PORT_P23CFG_CFG_Msk               (0xfUL)                   /*!< PORT P23CFG: CFG (Bitfield-Mask: 0x0f)                */
/* ========================================================  P24CFG  ========================================================= */
#define PORT_P24CFG_CFG_Pos               (0UL)                     /*!< PORT P24CFG: CFG (Bit 0)                              */
#define PORT_P24CFG_CFG_Msk               (0xfUL)                   /*!< PORT P24CFG: CFG (Bitfield-Mask: 0x0f)                */
/* ========================================================  P25CFG  ========================================================= */
#define PORT_P25CFG_CFG_Pos               (0UL)                     /*!< PORT P25CFG: CFG (Bit 0)                              */
#define PORT_P25CFG_CFG_Msk               (0xfUL)                   /*!< PORT P25CFG: CFG (Bitfield-Mask: 0x0f)                */
/* ========================================================  P26CFG  ========================================================= */
#define PORT_P26CFG_CFG_Pos               (0UL)                     /*!< PORT P26CFG: CFG (Bit 0)                              */
#define PORT_P26CFG_CFG_Msk               (0xfUL)                   /*!< PORT P26CFG: CFG (Bitfield-Mask: 0x0f)                */
/* ========================================================  P27CFG  ========================================================= */
#define PORT_P27CFG_CFG_Pos               (0UL)                     /*!< PORT P27CFG: CFG (Bit 0)                              */
#define PORT_P27CFG_CFG_Msk               (0xfUL)                   /*!< PORT P27CFG: CFG (Bitfield-Mask: 0x0f)                */
/* ========================================================  P30CFG  ========================================================= */
#define PORT_P30CFG_CFG_Pos               (0UL)                     /*!< PORT P30CFG: CFG (Bit 0)                              */
#define PORT_P30CFG_CFG_Msk               (0xfUL)                   /*!< PORT P30CFG: CFG (Bitfield-Mask: 0x0f)                */
/* ========================================================  P31CFG  ========================================================= */
#define PORT_P31CFG_CFG_Pos               (0UL)                     /*!< PORT P31CFG: CFG (Bit 0)                              */
#define PORT_P31CFG_CFG_Msk               (0xfUL)                   /*!< PORT P31CFG: CFG (Bitfield-Mask: 0x0f)                */
/* ========================================================  P40CFG  ========================================================= */
#define PORT_P40CFG_CFG_Pos               (0UL)                     /*!< PORT P40CFG: CFG (Bit 0)                              */
#define PORT_P40CFG_CFG_Msk               (0xfUL)                   /*!< PORT P40CFG: CFG (Bitfield-Mask: 0x0f)                */
/* ========================================================  P41CFG  ========================================================= */
#define PORT_P41CFG_CFG_Pos               (0UL)                     /*!< PORT P41CFG: CFG (Bit 0)                              */
#define PORT_P41CFG_CFG_Msk               (0xfUL)                   /*!< PORT P41CFG: CFG (Bitfield-Mask: 0x0f)                */
/* ========================================================  P50CFG  ========================================================= */
#define PORT_P50CFG_CFG_Pos               (0UL)                     /*!< PORT P50CFG: CFG (Bit 0)                              */
#define PORT_P50CFG_CFG_Msk               (0xfUL)                   /*!< PORT P50CFG: CFG (Bitfield-Mask: 0x0f)                */
/* ========================================================  P51CFG  ========================================================= */
#define PORT_P51CFG_CFG_Pos               (0UL)                     /*!< PORT P51CFG: CFG (Bit 0)                              */
#define PORT_P51CFG_CFG_Msk               (0xfUL)                   /*!< PORT P51CFG: CFG (Bitfield-Mask: 0x0f)                */
/* ========================================================  P60CFG  ========================================================= */
#define PORT_P60CFG_CFG_Pos               (0UL)                     /*!< PORT P60CFG: CFG (Bit 0)                              */
#define PORT_P60CFG_CFG_Msk               (0xfUL)                   /*!< PORT P60CFG: CFG (Bitfield-Mask: 0x0f)                */
/* ========================================================  P61CFG  ========================================================= */
#define PORT_P61CFG_CFG_Pos               (0UL)                     /*!< PORT P61CFG: CFG (Bit 0)                              */
#define PORT_P61CFG_CFG_Msk               (0xfUL)                   /*!< PORT P61CFG: CFG (Bitfield-Mask: 0x0f)                */
/* ========================================================  P62CFG  ========================================================= */
#define PORT_P62CFG_CFG_Pos               (0UL)                     /*!< PORT P62CFG: CFG (Bit 0)                              */
#define PORT_P62CFG_CFG_Msk               (0xfUL)                   /*!< PORT P62CFG: CFG (Bitfield-Mask: 0x0f)                */
/* ========================================================  P63CFG  ========================================================= */
#define PORT_P63CFG_CFG_Pos               (0UL)                     /*!< PORT P63CFG: CFG (Bit 0)                              */
#define PORT_P63CFG_CFG_Msk               (0xfUL)                   /*!< PORT P63CFG: CFG (Bitfield-Mask: 0x0f)                */
/* ========================================================  P70CFG  ========================================================= */
#define PORT_P70CFG_CFG_Pos               (0UL)                     /*!< PORT P70CFG: CFG (Bit 0)                              */
#define PORT_P70CFG_CFG_Msk               (0xfUL)                   /*!< PORT P70CFG: CFG (Bitfield-Mask: 0x0f)                */
/* ========================================================  P71CFG  ========================================================= */
#define PORT_P71CFG_CFG_Pos               (0UL)                     /*!< PORT P71CFG: CFG (Bit 0)                              */
#define PORT_P71CFG_CFG_Msk               (0xfUL)                   /*!< PORT P71CFG: CFG (Bitfield-Mask: 0x0f)                */
/* ========================================================  P72CFG  ========================================================= */
#define PORT_P72CFG_CFG_Pos               (0UL)                     /*!< PORT P72CFG: CFG (Bit 0)                              */
#define PORT_P72CFG_CFG_Msk               (0xfUL)                   /*!< PORT P72CFG: CFG (Bitfield-Mask: 0x0f)                */
/* ========================================================  P73CFG  ========================================================= */
#define PORT_P73CFG_CFG_Pos               (0UL)                     /*!< PORT P73CFG: CFG (Bit 0)                              */
#define PORT_P73CFG_CFG_Msk               (0xfUL)                   /*!< PORT P73CFG: CFG (Bitfield-Mask: 0x0f)                */
/* ========================================================  P74CFG  ========================================================= */
#define PORT_P74CFG_CFG_Pos               (0UL)                     /*!< PORT P74CFG: CFG (Bit 0)                              */
#define PORT_P74CFG_CFG_Msk               (0xfUL)                   /*!< PORT P74CFG: CFG (Bitfield-Mask: 0x0f)                */
/* ========================================================  P75CFG  ========================================================= */
#define PORT_P75CFG_CFG_Pos               (0UL)                     /*!< PORT P75CFG: CFG (Bit 0)                              */
#define PORT_P75CFG_CFG_Msk               (0xfUL)                   /*!< PORT P75CFG: CFG (Bitfield-Mask: 0x0f)                */
/* ========================================================  P120CFG  ======================================================== */
#define PORT_P120CFG_CFG_Pos              (0UL)                     /*!< PORT P120CFG: CFG (Bit 0)                             */
#define PORT_P120CFG_CFG_Msk              (0xfUL)                   /*!< PORT P120CFG: CFG (Bitfield-Mask: 0x0f)               */
/* ========================================================  P121CFG  ======================================================== */
#define PORT_P121CFG_CFG_Pos              (0UL)                     /*!< PORT P121CFG: CFG (Bit 0)                             */
#define PORT_P121CFG_CFG_Msk              (0xfUL)                   /*!< PORT P121CFG: CFG (Bitfield-Mask: 0x0f)               */
/* ========================================================  P122CFG  ======================================================== */
#define PORT_P122CFG_CFG_Pos              (0UL)                     /*!< PORT P122CFG: CFG (Bit 0)                             */
#define PORT_P122CFG_CFG_Msk              (0xfUL)                   /*!< PORT P122CFG: CFG (Bitfield-Mask: 0x0f)               */
/* ========================================================  P123CFG  ======================================================== */
#define PORT_P123CFG_CFG_Pos              (0UL)                     /*!< PORT P123CFG: CFG (Bit 0)                             */
#define PORT_P123CFG_CFG_Msk              (0xfUL)                   /*!< PORT P123CFG: CFG (Bitfield-Mask: 0x0f)               */
/* ========================================================  P124CFG  ======================================================== */
#define PORT_P124CFG_CFG_Pos              (0UL)                     /*!< PORT P124CFG: CFG (Bit 0)                             */
#define PORT_P124CFG_CFG_Msk              (0xfUL)                   /*!< PORT P124CFG: CFG (Bitfield-Mask: 0x0f)               */
/* ========================================================  P130CFG  ======================================================== */
#define PORT_P130CFG_CFG_Pos              (0UL)                     /*!< PORT P130CFG: CFG (Bit 0)                             */
#define PORT_P130CFG_CFG_Msk              (0xfUL)                   /*!< PORT P130CFG: CFG (Bitfield-Mask: 0x0f)               */
/* ========================================================  P136CFG  ======================================================== */
#define PORT_P136CFG_CFG_Pos              (0UL)                     /*!< PORT P136CFG: CFG (Bit 0)                             */
#define PORT_P136CFG_CFG_Msk              (0xfUL)                   /*!< PORT P136CFG: CFG (Bitfield-Mask: 0x0f)               */
/* ========================================================  P137CFG  ======================================================== */
#define PORT_P137CFG_CFG_Pos              (0UL)                     /*!< PORT P137CFG: CFG (Bit 0)                             */
#define PORT_P137CFG_CFG_Msk              (0xfUL)                   /*!< PORT P137CFG: CFG (Bitfield-Mask: 0x0f)               */
/* ========================================================  P140CFG  ======================================================== */
#define PORT_P140CFG_CFG_Pos              (0UL)                     /*!< PORT P140CFG: CFG (Bit 0)                             */
#define PORT_P140CFG_CFG_Msk              (0xfUL)                   /*!< PORT P140CFG: CFG (Bitfield-Mask: 0x0f)               */
/* ========================================================  P146CFG  ======================================================== */
#define PORT_P146CFG_CFG_Pos              (0UL)                     /*!< PORT P146CFG: CFG (Bit 0)                             */
#define PORT_P146CFG_CFG_Msk              (0xfUL)                   /*!< PORT P146CFG: CFG (Bitfield-Mask: 0x0f)               */
/* ========================================================  P147CFG  ======================================================== */
#define PORT_P147CFG_CFG_Pos              (0UL)                     /*!< PORT P147CFG: CFG (Bit 0)                             */
#define PORT_P147CFG_CFG_Msk              (0xfUL)                   /*!< PORT P147CFG: CFG (Bitfield-Mask: 0x0f)               */
/* =======================================================  TI10PCFG  ======================================================== */
#define PORT_TI10PCFG_CFG_Pos             (0UL)                     /*!< PORT TI10PCFG: CFG (Bit 0)                            */
#define PORT_TI10PCFG_CFG_Msk             (0x3fUL)                  /*!< PORT TI10PCFG: CFG (Bitfield-Mask: 0x3f)              */
/* =======================================================  TI11PCFG  ======================================================== */
#define PORT_TI11PCFG_CFG_Pos             (0UL)                     /*!< PORT TI11PCFG: CFG (Bit 0)                            */
#define PORT_TI11PCFG_CFG_Msk             (0x3fUL)                  /*!< PORT TI11PCFG: CFG (Bitfield-Mask: 0x3f)              */
/* =======================================================  TI12PCFG  ======================================================== */
#define PORT_TI12PCFG_CFG_Pos             (0UL)                     /*!< PORT TI12PCFG: CFG (Bit 0)                            */
#define PORT_TI12PCFG_CFG_Msk             (0x3fUL)                  /*!< PORT TI12PCFG: CFG (Bitfield-Mask: 0x3f)              */
/* =======================================================  TI13PCFG  ======================================================== */
#define PORT_TI13PCFG_CFG_Pos             (0UL)                     /*!< PORT TI13PCFG: CFG (Bit 0)                            */
#define PORT_TI13PCFG_CFG_Msk             (0x3fUL)                  /*!< PORT TI13PCFG: CFG (Bitfield-Mask: 0x3f)              */
/* =======================================================  INTP0PCFG  ======================================================= */
#define PORT_INTP0PCFG_CFG_Pos            (0UL)                     /*!< PORT INTP0PCFG: CFG (Bit 0)                           */
#define PORT_INTP0PCFG_CFG_Msk            (0x3fUL)                  /*!< PORT INTP0PCFG: CFG (Bitfield-Mask: 0x3f)             */
/* =======================================================  INTP1PCFG  ======================================================= */
#define PORT_INTP1PCFG_CFG_Pos            (0UL)                     /*!< PORT INTP1PCFG: CFG (Bit 0)                           */
#define PORT_INTP1PCFG_CFG_Msk            (0x3fUL)                  /*!< PORT INTP1PCFG: CFG (Bitfield-Mask: 0x3f)             */
/* =======================================================  INTP2PCFG  ======================================================= */
#define PORT_INTP2PCFG_CFG_Pos            (0UL)                     /*!< PORT INTP2PCFG: CFG (Bit 0)                           */
#define PORT_INTP2PCFG_CFG_Msk            (0x3fUL)                  /*!< PORT INTP2PCFG: CFG (Bitfield-Mask: 0x3f)             */
/* =======================================================  INTP3PCFG  ======================================================= */
#define PORT_INTP3PCFG_CFG_Pos            (0UL)                     /*!< PORT INTP3PCFG: CFG (Bit 0)                           */
#define PORT_INTP3PCFG_CFG_Msk            (0x3fUL)                  /*!< PORT INTP3PCFG: CFG (Bitfield-Mask: 0x3f)             */
/* =======================================================  SDI00PCFG  ======================================================= */
#define PORT_SDI00PCFG_CFG_Pos            (0UL)                     /*!< PORT SDI00PCFG: CFG (Bit 0)                           */
#define PORT_SDI00PCFG_CFG_Msk            (0x3fUL)                  /*!< PORT SDI00PCFG: CFG (Bitfield-Mask: 0x3f)             */
/* =======================================================  SDA00PCFG  ======================================================= */
/* =======================================================  RXD0PCFG  ======================================================== */
/* ======================================================  SCLKI00PCFG  ====================================================== */
#define PORT_SCLKI00PCFG_CFG_Pos          (0UL)                     /*!< PORT SCLKI00PCFG: CFG (Bit 0)                         */
#define PORT_SCLKI00PCFG_CFG_Msk          (0x3fUL)                  /*!< PORT SCLKI00PCFG: CFG (Bitfield-Mask: 0x3f)           */
/* =======================================================  SS00PCFG  ======================================================== */
#define PORT_SS00PCFG_CFG_Pos             (0UL)                     /*!< PORT SS00PCFG: CFG (Bit 0)                            */
#define PORT_SS00PCFG_CFG_Msk             (0x3fUL)                  /*!< PORT SS00PCFG: CFG (Bitfield-Mask: 0x3f)              */
/* =======================================================  SDI20PCFG  ======================================================= */
#define PORT_SDI20PCFG_CFG_Pos            (0UL)                     /*!< PORT SDI20PCFG: CFG (Bit 0)                           */
#define PORT_SDI20PCFG_CFG_Msk            (0x3fUL)                  /*!< PORT SDI20PCFG: CFG (Bitfield-Mask: 0x3f)             */
/* =======================================================  IRRXDPCFG  ======================================================= */
/* =======================================================  RXD2PCFG  ======================================================== */
/* ======================================================  SCLKI20PCFG  ====================================================== */
#define PORT_SCLKI20PCFG_CFG_Pos          (0UL)                     /*!< PORT SCLKI20PCFG: CFG (Bit 0)                         */
#define PORT_SCLKI20PCFG_CFG_Msk          (0x3fUL)                  /*!< PORT SCLKI20PCFG: CFG (Bitfield-Mask: 0x3f)           */
/* =======================================================  RXD1PCFG  ======================================================== */
#define PORT_RXD1PCFG_CFG_Pos             (0UL)                     /*!< PORT RXD1PCFG: CFG (Bit 0)                            */
#define PORT_RXD1PCFG_CFG_Msk             (0x3fUL)                  /*!< PORT RXD1PCFG: CFG (Bitfield-Mask: 0x3f)              */
/* =======================================================  SDA10PCFG  ======================================================= */
/* =======================================================  SDI10PCFG  ======================================================= */
/* =======================================================  SDAA0PCFG  ======================================================= */
#define PORT_SDAA0PCFG_CFG_Pos            (0UL)                     /*!< PORT SDAA0PCFG: CFG (Bit 0)                           */
#define PORT_SDAA0PCFG_CFG_Msk            (0x3fUL)                  /*!< PORT SDAA0PCFG: CFG (Bitfield-Mask: 0x3f)             */
/* =======================================================  SCLA0PCFG  ======================================================= */
#define PORT_SCLA0PCFG_CFG_Pos            (0UL)                     /*!< PORT SCLA0PCFG: CFG (Bit 0)                           */
#define PORT_SCLA0PCFG_CFG_Msk            (0x3fUL)                  /*!< PORT SCLA0PCFG: CFG (Bitfield-Mask: 0x3f)             */
/* ==========================================================  PMS  ========================================================== */
/* ========================================================  SPIPCFG  ======================================================== */


/* =========================================================================================================================== */
/* ================                                           TM40                                            ================ */
/* =========================================================================================================================== */

/* =========================================================  TCR0  ========================================================== */
/* =========================================================  TMR00  ========================================================= */
#define TM40_TMR00_MD_Pos                 (0UL)                     /*!< TM40 TMR00: MD (Bit 0)                                */
#define TM40_TMR00_MD_Msk                 (0xfUL)                   /*!< TM40 TMR00: MD (Bitfield-Mask: 0x0f)                  */
#define TM40_TMR00_CIS_Pos                (6UL)                     /*!< TM40 TMR00: CIS (Bit 6)                               */
#define TM40_TMR00_CIS_Msk                (0xc0UL)                  /*!< TM40 TMR00: CIS (Bitfield-Mask: 0x03)                 */
#define TM40_TMR00_STS_Pos                (8UL)                     /*!< TM40 TMR00: STS (Bit 8)                               */
#define TM40_TMR00_STS_Msk                (0x700UL)                 /*!< TM40 TMR00: STS (Bitfield-Mask: 0x07)                 */
#define TM40_TMR00_CCS_Pos                (12UL)                    /*!< TM40 TMR00: CCS (Bit 12)                              */
#define TM40_TMR00_CCS_Msk                (0x1000UL)                /*!< TM40 TMR00: CCS (Bitfield-Mask: 0x01)                 */
#define TM40_TMR00_CKS_Pos                (14UL)                    /*!< TM40 TMR00: CKS (Bit 14)                              */
#define TM40_TMR00_CKS_Msk                (0xc000UL)                /*!< TM40 TMR00: CKS (Bitfield-Mask: 0x03)                 */
/* =========================================================  TMR01  ========================================================= */
#define TM40_TMR01_MD_Pos                 (0UL)                     /*!< TM40 TMR01: MD (Bit 0)                                */
#define TM40_TMR01_MD_Msk                 (0xfUL)                   /*!< TM40 TMR01: MD (Bitfield-Mask: 0x0f)                  */
#define TM40_TMR01_CIS_Pos                (6UL)                     /*!< TM40 TMR01: CIS (Bit 6)                               */
#define TM40_TMR01_CIS_Msk                (0xc0UL)                  /*!< TM40 TMR01: CIS (Bitfield-Mask: 0x03)                 */
#define TM40_TMR01_STS_Pos                (8UL)                     /*!< TM40 TMR01: STS (Bit 8)                               */
#define TM40_TMR01_STS_Msk                (0x700UL)                 /*!< TM40 TMR01: STS (Bitfield-Mask: 0x07)                 */
#define TM40_TMR01_SPLIT_Pos              (11UL)                    /*!< TM40 TMR01: SPLIT (Bit 11)                            */
#define TM40_TMR01_SPLIT_Msk              (0x800UL)                 /*!< TM40 TMR01: SPLIT (Bitfield-Mask: 0x01)               */
#define TM40_TMR01_CCS_Pos                (12UL)                    /*!< TM40 TMR01: CCS (Bit 12)                              */
#define TM40_TMR01_CCS_Msk                (0x1000UL)                /*!< TM40 TMR01: CCS (Bitfield-Mask: 0x01)                 */
#define TM40_TMR01_CKS_Pos                (14UL)                    /*!< TM40 TMR01: CKS (Bit 14)                              */
#define TM40_TMR01_CKS_Msk                (0xc000UL)                /*!< TM40 TMR01: CKS (Bitfield-Mask: 0x03)                 */
/* =========================================================  TMR02  ========================================================= */
#define TM40_TMR02_MD_Pos                 (0UL)                     /*!< TM40 TMR02: MD (Bit 0)                                */
#define TM40_TMR02_MD_Msk                 (0xfUL)                   /*!< TM40 TMR02: MD (Bitfield-Mask: 0x0f)                  */
#define TM40_TMR02_CIS_Pos                (6UL)                     /*!< TM40 TMR02: CIS (Bit 6)                               */
#define TM40_TMR02_CIS_Msk                (0xc0UL)                  /*!< TM40 TMR02: CIS (Bitfield-Mask: 0x03)                 */
#define TM40_TMR02_STS_Pos                (8UL)                     /*!< TM40 TMR02: STS (Bit 8)                               */
#define TM40_TMR02_STS_Msk                (0x700UL)                 /*!< TM40 TMR02: STS (Bitfield-Mask: 0x07)                 */
#define TM40_TMR02_MASTER_Pos             (11UL)                    /*!< TM40 TMR02: MASTER (Bit 11)                           */
#define TM40_TMR02_MASTER_Msk             (0x800UL)                 /*!< TM40 TMR02: MASTER (Bitfield-Mask: 0x01)              */
#define TM40_TMR02_CCS_Pos                (12UL)                    /*!< TM40 TMR02: CCS (Bit 12)                              */
#define TM40_TMR02_CCS_Msk                (0x1000UL)                /*!< TM40 TMR02: CCS (Bitfield-Mask: 0x01)                 */
#define TM40_TMR02_CKS_Pos                (14UL)                    /*!< TM40 TMR02: CKS (Bit 14)                              */
#define TM40_TMR02_CKS_Msk                (0xc000UL)                /*!< TM40 TMR02: CKS (Bitfield-Mask: 0x03)                 */
/* =========================================================  TMR03  ========================================================= */
#define TM40_TMR03_MD_Pos                 (0UL)                     /*!< TM40 TMR03: MD (Bit 0)                                */
#define TM40_TMR03_MD_Msk                 (0xfUL)                   /*!< TM40 TMR03: MD (Bitfield-Mask: 0x0f)                  */
#define TM40_TMR03_CIS_Pos                (6UL)                     /*!< TM40 TMR03: CIS (Bit 6)                               */
#define TM40_TMR03_CIS_Msk                (0xc0UL)                  /*!< TM40 TMR03: CIS (Bitfield-Mask: 0x03)                 */
#define TM40_TMR03_STS_Pos                (8UL)                     /*!< TM40 TMR03: STS (Bit 8)                               */
#define TM40_TMR03_STS_Msk                (0x700UL)                 /*!< TM40 TMR03: STS (Bitfield-Mask: 0x07)                 */
#define TM40_TMR03_SPLIT_Pos              (11UL)                    /*!< TM40 TMR03: SPLIT (Bit 11)                            */
#define TM40_TMR03_SPLIT_Msk              (0x800UL)                 /*!< TM40 TMR03: SPLIT (Bitfield-Mask: 0x01)               */
#define TM40_TMR03_CCS_Pos                (12UL)                    /*!< TM40 TMR03: CCS (Bit 12)                              */
#define TM40_TMR03_CCS_Msk                (0x1000UL)                /*!< TM40 TMR03: CCS (Bitfield-Mask: 0x01)                 */
#define TM40_TMR03_CKS_Pos                (14UL)                    /*!< TM40 TMR03: CKS (Bit 14)                              */
#define TM40_TMR03_CKS_Msk                (0xc000UL)                /*!< TM40 TMR03: CKS (Bitfield-Mask: 0x03)                 */
/* =========================================================  TSR00  ========================================================= */
#define TM40_TSR00_OVF_Pos                (0UL)                     /*!< TM40 TSR00: OVF (Bit 0)                               */
#define TM40_TSR00_OVF_Msk                (0x1UL)                   /*!< TM40 TSR00: OVF (Bitfield-Mask: 0x01)                 */
/* =========================================================  TSR01  ========================================================= */
#define TM40_TSR01_OVF_Pos                (0UL)                     /*!< TM40 TSR01: OVF (Bit 0)                               */
#define TM40_TSR01_OVF_Msk                (0x1UL)                   /*!< TM40 TSR01: OVF (Bitfield-Mask: 0x01)                 */
/* =========================================================  TSR02  ========================================================= */
#define TM40_TSR02_OVF_Pos                (0UL)                     /*!< TM40 TSR02: OVF (Bit 0)                               */
#define TM40_TSR02_OVF_Msk                (0x1UL)                   /*!< TM40 TSR02: OVF (Bitfield-Mask: 0x01)                 */
/* =========================================================  TSR03  ========================================================= */
#define TM40_TSR03_OVF_Pos                (0UL)                     /*!< TM40 TSR03: OVF (Bit 0)                               */
#define TM40_TSR03_OVF_Msk                (0x1UL)                   /*!< TM40 TSR03: OVF (Bitfield-Mask: 0x01)                 */
/* ==========================================================  TE0  ========================================================== */
#define TM40_TE0_TE00_Pos                 (0UL)                     /*!< TM40 TE0: TE00 (Bit 0)                                */
#define TM40_TE0_TE00_Msk                 (0x1UL)                   /*!< TM40 TE0: TE00 (Bitfield-Mask: 0x01)                  */
#define TM40_TE0_TE01_Pos                 (1UL)                     /*!< TM40 TE0: TE01 (Bit 1)                                */
#define TM40_TE0_TE01_Msk                 (0x2UL)                   /*!< TM40 TE0: TE01 (Bitfield-Mask: 0x01)                  */
#define TM40_TE0_TE02_Pos                 (2UL)                     /*!< TM40 TE0: TE02 (Bit 2)                                */
#define TM40_TE0_TE02_Msk                 (0x4UL)                   /*!< TM40 TE0: TE02 (Bitfield-Mask: 0x01)                  */
#define TM40_TE0_TE03_Pos                 (3UL)                     /*!< TM40 TE0: TE03 (Bit 3)                                */
#define TM40_TE0_TE03_Msk                 (0x8UL)                   /*!< TM40 TE0: TE03 (Bitfield-Mask: 0x01)                  */
#define TM40_TE0_TEH01_Pos                (9UL)                     /*!< TM40 TE0: TEH01 (Bit 9)                               */
#define TM40_TE0_TEH01_Msk                (0x200UL)                 /*!< TM40 TE0: TEH01 (Bitfield-Mask: 0x01)                 */
#define TM40_TE0_TEH03_Pos                (11UL)                    /*!< TM40 TE0: TEH03 (Bit 11)                              */
#define TM40_TE0_TEH03_Msk                (0x800UL)                 /*!< TM40 TE0: TEH03 (Bitfield-Mask: 0x01)                 */
/* ==========================================================  TS0  ========================================================== */
#define TM40_TS0_TS00_Pos                 (0UL)                     /*!< TM40 TS0: TS00 (Bit 0)                                */
#define TM40_TS0_TS00_Msk                 (0x1UL)                   /*!< TM40 TS0: TS00 (Bitfield-Mask: 0x01)                  */
#define TM40_TS0_TS01_Pos                 (1UL)                     /*!< TM40 TS0: TS01 (Bit 1)                                */
#define TM40_TS0_TS01_Msk                 (0x2UL)                   /*!< TM40 TS0: TS01 (Bitfield-Mask: 0x01)                  */
#define TM40_TS0_TS02_Pos                 (2UL)                     /*!< TM40 TS0: TS02 (Bit 2)                                */
#define TM40_TS0_TS02_Msk                 (0x4UL)                   /*!< TM40 TS0: TS02 (Bitfield-Mask: 0x01)                  */
#define TM40_TS0_TS03_Pos                 (3UL)                     /*!< TM40 TS0: TS03 (Bit 3)                                */
#define TM40_TS0_TS03_Msk                 (0x8UL)                   /*!< TM40 TS0: TS03 (Bitfield-Mask: 0x01)                  */
#define TM40_TS0_TSH01_Pos                (9UL)                     /*!< TM40 TS0: TSH01 (Bit 9)                               */
#define TM40_TS0_TSH01_Msk                (0x200UL)                 /*!< TM40 TS0: TSH01 (Bitfield-Mask: 0x01)                 */
#define TM40_TS0_TSH03_Pos                (11UL)                    /*!< TM40 TS0: TSH03 (Bit 11)                              */
#define TM40_TS0_TSH03_Msk                (0x800UL)                 /*!< TM40 TS0: TSH03 (Bitfield-Mask: 0x01)                 */
/* ==========================================================  TT0  ========================================================== */
#define TM40_TT0_TT00_Pos                 (0UL)                     /*!< TM40 TT0: TT00 (Bit 0)                                */
#define TM40_TT0_TT00_Msk                 (0x1UL)                   /*!< TM40 TT0: TT00 (Bitfield-Mask: 0x01)                  */
#define TM40_TT0_TT01_Pos                 (1UL)                     /*!< TM40 TT0: TT01 (Bit 1)                                */
#define TM40_TT0_TT01_Msk                 (0x2UL)                   /*!< TM40 TT0: TT01 (Bitfield-Mask: 0x01)                  */
#define TM40_TT0_TT02_Pos                 (2UL)                     /*!< TM40 TT0: TT02 (Bit 2)                                */
#define TM40_TT0_TT02_Msk                 (0x4UL)                   /*!< TM40 TT0: TT02 (Bitfield-Mask: 0x01)                  */
#define TM40_TT0_TT03_Pos                 (3UL)                     /*!< TM40 TT0: TT03 (Bit 3)                                */
#define TM40_TT0_TT03_Msk                 (0x8UL)                   /*!< TM40 TT0: TT03 (Bitfield-Mask: 0x01)                  */
#define TM40_TT0_TTH01_Pos                (9UL)                     /*!< TM40 TT0: TTH01 (Bit 9)                               */
#define TM40_TT0_TTH01_Msk                (0x200UL)                 /*!< TM40 TT0: TTH01 (Bitfield-Mask: 0x01)                 */
#define TM40_TT0_TTH03_Pos                (11UL)                    /*!< TM40 TT0: TTH03 (Bit 11)                              */
#define TM40_TT0_TTH03_Msk                (0x800UL)                 /*!< TM40 TT0: TTH03 (Bitfield-Mask: 0x01)                 */
/* =========================================================  TPS0  ========================================================== */
#define TM40_TPS0_PRS00_Pos               (0UL)                     /*!< TM40 TPS0: PRS00 (Bit 0)                              */
#define TM40_TPS0_PRS00_Msk               (0xfUL)                   /*!< TM40 TPS0: PRS00 (Bitfield-Mask: 0x0f)                */
#define TM40_TPS0_PRS01_Pos               (4UL)                     /*!< TM40 TPS0: PRS01 (Bit 4)                              */
#define TM40_TPS0_PRS01_Msk               (0xf0UL)                  /*!< TM40 TPS0: PRS01 (Bitfield-Mask: 0x0f)                */
#define TM40_TPS0_PRS02_Pos               (8UL)                     /*!< TM40 TPS0: PRS02 (Bit 8)                              */
#define TM40_TPS0_PRS02_Msk               (0x300UL)                 /*!< TM40 TPS0: PRS02 (Bitfield-Mask: 0x03)                */
#define TM40_TPS0_PRS03_Pos               (12UL)                    /*!< TM40 TPS0: PRS03 (Bit 12)                             */
#define TM40_TPS0_PRS03_Msk               (0x3000UL)                /*!< TM40 TPS0: PRS03 (Bitfield-Mask: 0x03)                */
/* ==========================================================  TO0  ========================================================== */
#define TM40_TO0_TO00_Pos                 (0UL)                     /*!< TM40 TO0: TO00 (Bit 0)                                */
#define TM40_TO0_TO00_Msk                 (0x1UL)                   /*!< TM40 TO0: TO00 (Bitfield-Mask: 0x01)                  */
#define TM40_TO0_TO01_Pos                 (1UL)                     /*!< TM40 TO0: TO01 (Bit 1)                                */
#define TM40_TO0_TO01_Msk                 (0x2UL)                   /*!< TM40 TO0: TO01 (Bitfield-Mask: 0x01)                  */
#define TM40_TO0_TO02_Pos                 (2UL)                     /*!< TM40 TO0: TO02 (Bit 2)                                */
#define TM40_TO0_TO02_Msk                 (0x4UL)                   /*!< TM40 TO0: TO02 (Bitfield-Mask: 0x01)                  */
#define TM40_TO0_TO03_Pos                 (3UL)                     /*!< TM40 TO0: TO03 (Bit 3)                                */
#define TM40_TO0_TO03_Msk                 (0x8UL)                   /*!< TM40 TO0: TO03 (Bitfield-Mask: 0x01)                  */
/* =========================================================  TOE0  ========================================================== */
#define TM40_TOE0_TOE00_Pos               (0UL)                     /*!< TM40 TOE0: TOE00 (Bit 0)                              */
#define TM40_TOE0_TOE00_Msk               (0x1UL)                   /*!< TM40 TOE0: TOE00 (Bitfield-Mask: 0x01)                */
#define TM40_TOE0_TOE01_Pos               (1UL)                     /*!< TM40 TOE0: TOE01 (Bit 1)                              */
#define TM40_TOE0_TOE01_Msk               (0x2UL)                   /*!< TM40 TOE0: TOE01 (Bitfield-Mask: 0x01)                */
#define TM40_TOE0_TOE02_Pos               (2UL)                     /*!< TM40 TOE0: TOE02 (Bit 2)                              */
#define TM40_TOE0_TOE02_Msk               (0x4UL)                   /*!< TM40 TOE0: TOE02 (Bitfield-Mask: 0x01)                */
#define TM40_TOE0_TOE03_Pos               (3UL)                     /*!< TM40 TOE0: TOE03 (Bit 3)                              */
#define TM40_TOE0_TOE03_Msk               (0x8UL)                   /*!< TM40 TOE0: TOE03 (Bitfield-Mask: 0x01)                */
/* =========================================================  TOL0  ========================================================== */
#define TM40_TOL0_TOL01_Pos               (1UL)                     /*!< TM40 TOL0: TOL01 (Bit 1)                              */
#define TM40_TOL0_TOL01_Msk               (0x2UL)                   /*!< TM40 TOL0: TOL01 (Bitfield-Mask: 0x01)                */
#define TM40_TOL0_TOL02_Pos               (2UL)                     /*!< TM40 TOL0: TOL02 (Bit 2)                              */
#define TM40_TOL0_TOL02_Msk               (0x4UL)                   /*!< TM40 TOL0: TOL02 (Bitfield-Mask: 0x01)                */
#define TM40_TOL0_TOL03_Pos               (3UL)                     /*!< TM40 TOL0: TOL03 (Bit 3)                              */
#define TM40_TOL0_TOL03_Msk               (0x8UL)                   /*!< TM40 TOL0: TOL03 (Bitfield-Mask: 0x01)                */
/* =========================================================  TOM0  ========================================================== */
#define TM40_TOM0_TOM01_Pos               (1UL)                     /*!< TM40 TOM0: TOM01 (Bit 1)                              */
#define TM40_TOM0_TOM01_Msk               (0x2UL)                   /*!< TM40 TOM0: TOM01 (Bitfield-Mask: 0x01)                */
#define TM40_TOM0_TOM02_Pos               (2UL)                     /*!< TM40 TOM0: TOM02 (Bit 2)                              */
#define TM40_TOM0_TOM02_Msk               (0x4UL)                   /*!< TM40 TOM0: TOM02 (Bitfield-Mask: 0x01)                */
#define TM40_TOM0_TOM03_Pos               (3UL)                     /*!< TM40 TOM0: TOM03 (Bit 3)                              */
#define TM40_TOM0_TOM03_Msk               (0x8UL)                   /*!< TM40 TOM0: TOM03 (Bitfield-Mask: 0x01)                */
/* =========================================================  TDR0  ========================================================== */
/* =========================================================  TDR0  ========================================================== */
/* ========================================================  TDR01L  ========================================================= */
/* ========================================================  TDR01H  ========================================================= */
/* ========================================================  TDR03L  ========================================================= */
/* ========================================================  TDR03H  ========================================================= */


/* =========================================================================================================================== */
/* ================                                           TM41                                            ================ */
/* =========================================================================================================================== */

/* =========================================================  TCR1  ========================================================== */
/* =========================================================  TMR10  ========================================================= */
#define TM41_TMR10_MD_Pos                 (0UL)                     /*!< TM41 TMR10: MD (Bit 0)                                */
#define TM41_TMR10_MD_Msk                 (0xfUL)                   /*!< TM41 TMR10: MD (Bitfield-Mask: 0x0f)                  */
#define TM41_TMR10_CIS_Pos                (6UL)                     /*!< TM41 TMR10: CIS (Bit 6)                               */
#define TM41_TMR10_CIS_Msk                (0xc0UL)                  /*!< TM41 TMR10: CIS (Bitfield-Mask: 0x03)                 */
#define TM41_TMR10_STS_Pos                (8UL)                     /*!< TM41 TMR10: STS (Bit 8)                               */
#define TM41_TMR10_STS_Msk                (0x700UL)                 /*!< TM41 TMR10: STS (Bitfield-Mask: 0x07)                 */
#define TM41_TMR10_CCS_Pos                (12UL)                    /*!< TM41 TMR10: CCS (Bit 12)                              */
#define TM41_TMR10_CCS_Msk                (0x1000UL)                /*!< TM41 TMR10: CCS (Bitfield-Mask: 0x01)                 */
#define TM41_TMR10_CKS_Pos                (14UL)                    /*!< TM41 TMR10: CKS (Bit 14)                              */
#define TM41_TMR10_CKS_Msk                (0xc000UL)                /*!< TM41 TMR10: CKS (Bitfield-Mask: 0x03)                 */
/* =========================================================  TMR11  ========================================================= */
#define TM41_TMR11_MD_Pos                 (0UL)                     /*!< TM41 TMR11: MD (Bit 0)                                */
#define TM41_TMR11_MD_Msk                 (0xfUL)                   /*!< TM41 TMR11: MD (Bitfield-Mask: 0x0f)                  */
#define TM41_TMR11_CIS_Pos                (6UL)                     /*!< TM41 TMR11: CIS (Bit 6)                               */
#define TM41_TMR11_CIS_Msk                (0xc0UL)                  /*!< TM41 TMR11: CIS (Bitfield-Mask: 0x03)                 */
#define TM41_TMR11_STS_Pos                (8UL)                     /*!< TM41 TMR11: STS (Bit 8)                               */
#define TM41_TMR11_STS_Msk                (0x700UL)                 /*!< TM41 TMR11: STS (Bitfield-Mask: 0x07)                 */
#define TM41_TMR11_SPLIT_Pos              (11UL)                    /*!< TM41 TMR11: SPLIT (Bit 11)                            */
#define TM41_TMR11_SPLIT_Msk              (0x800UL)                 /*!< TM41 TMR11: SPLIT (Bitfield-Mask: 0x01)               */
#define TM41_TMR11_CCS_Pos                (12UL)                    /*!< TM41 TMR11: CCS (Bit 12)                              */
#define TM41_TMR11_CCS_Msk                (0x1000UL)                /*!< TM41 TMR11: CCS (Bitfield-Mask: 0x01)                 */
#define TM41_TMR11_CKS_Pos                (14UL)                    /*!< TM41 TMR11: CKS (Bit 14)                              */
#define TM41_TMR11_CKS_Msk                (0xc000UL)                /*!< TM41 TMR11: CKS (Bitfield-Mask: 0x03)                 */
/* =========================================================  TMR12  ========================================================= */
#define TM41_TMR12_MD_Pos                 (0UL)                     /*!< TM41 TMR12: MD (Bit 0)                                */
#define TM41_TMR12_MD_Msk                 (0xfUL)                   /*!< TM41 TMR12: MD (Bitfield-Mask: 0x0f)                  */
#define TM41_TMR12_CIS_Pos                (6UL)                     /*!< TM41 TMR12: CIS (Bit 6)                               */
#define TM41_TMR12_CIS_Msk                (0xc0UL)                  /*!< TM41 TMR12: CIS (Bitfield-Mask: 0x03)                 */
#define TM41_TMR12_STS_Pos                (8UL)                     /*!< TM41 TMR12: STS (Bit 8)                               */
#define TM41_TMR12_STS_Msk                (0x700UL)                 /*!< TM41 TMR12: STS (Bitfield-Mask: 0x07)                 */
#define TM41_TMR12_MASTER_Pos             (11UL)                    /*!< TM41 TMR12: MASTER (Bit 11)                           */
#define TM41_TMR12_MASTER_Msk             (0x800UL)                 /*!< TM41 TMR12: MASTER (Bitfield-Mask: 0x01)              */
#define TM41_TMR12_CCS_Pos                (12UL)                    /*!< TM41 TMR12: CCS (Bit 12)                              */
#define TM41_TMR12_CCS_Msk                (0x1000UL)                /*!< TM41 TMR12: CCS (Bitfield-Mask: 0x01)                 */
#define TM41_TMR12_CKS_Pos                (14UL)                    /*!< TM41 TMR12: CKS (Bit 14)                              */
#define TM41_TMR12_CKS_Msk                (0xc000UL)                /*!< TM41 TMR12: CKS (Bitfield-Mask: 0x03)                 */
/* =========================================================  TMR13  ========================================================= */
#define TM41_TMR13_MD_Pos                 (0UL)                     /*!< TM41 TMR13: MD (Bit 0)                                */
#define TM41_TMR13_MD_Msk                 (0xfUL)                   /*!< TM41 TMR13: MD (Bitfield-Mask: 0x0f)                  */
#define TM41_TMR13_CIS_Pos                (6UL)                     /*!< TM41 TMR13: CIS (Bit 6)                               */
#define TM41_TMR13_CIS_Msk                (0xc0UL)                  /*!< TM41 TMR13: CIS (Bitfield-Mask: 0x03)                 */
#define TM41_TMR13_STS_Pos                (8UL)                     /*!< TM41 TMR13: STS (Bit 8)                               */
#define TM41_TMR13_STS_Msk                (0x700UL)                 /*!< TM41 TMR13: STS (Bitfield-Mask: 0x07)                 */
#define TM41_TMR13_SPLIT_Pos              (11UL)                    /*!< TM41 TMR13: SPLIT (Bit 11)                            */
#define TM41_TMR13_SPLIT_Msk              (0x800UL)                 /*!< TM41 TMR13: SPLIT (Bitfield-Mask: 0x01)               */
#define TM41_TMR13_CCS_Pos                (12UL)                    /*!< TM41 TMR13: CCS (Bit 12)                              */
#define TM41_TMR13_CCS_Msk                (0x1000UL)                /*!< TM41 TMR13: CCS (Bitfield-Mask: 0x01)                 */
#define TM41_TMR13_CKS_Pos                (14UL)                    /*!< TM41 TMR13: CKS (Bit 14)                              */
#define TM41_TMR13_CKS_Msk                (0xc000UL)                /*!< TM41 TMR13: CKS (Bitfield-Mask: 0x03)                 */
/* =========================================================  TSR10  ========================================================= */
#define TM41_TSR10_OVF_Pos                (0UL)                     /*!< TM41 TSR10: OVF (Bit 0)                               */
#define TM41_TSR10_OVF_Msk                (0x1UL)                   /*!< TM41 TSR10: OVF (Bitfield-Mask: 0x01)                 */
/* =========================================================  TSR11  ========================================================= */
#define TM41_TSR11_OVF_Pos                (0UL)                     /*!< TM41 TSR11: OVF (Bit 0)                               */
#define TM41_TSR11_OVF_Msk                (0x1UL)                   /*!< TM41 TSR11: OVF (Bitfield-Mask: 0x01)                 */
/* =========================================================  TSR12  ========================================================= */
#define TM41_TSR12_OVF_Pos                (0UL)                     /*!< TM41 TSR12: OVF (Bit 0)                               */
#define TM41_TSR12_OVF_Msk                (0x1UL)                   /*!< TM41 TSR12: OVF (Bitfield-Mask: 0x01)                 */
/* =========================================================  TSR13  ========================================================= */
#define TM41_TSR13_OVF_Pos                (0UL)                     /*!< TM41 TSR13: OVF (Bit 0)                               */
#define TM41_TSR13_OVF_Msk                (0x1UL)                   /*!< TM41 TSR13: OVF (Bitfield-Mask: 0x01)                 */
/* ==========================================================  TE1  ========================================================== */
#define TM41_TE1_TE10_Pos                 (0UL)                     /*!< TM41 TE1: TE10 (Bit 0)                                */
#define TM41_TE1_TE10_Msk                 (0x1UL)                   /*!< TM41 TE1: TE10 (Bitfield-Mask: 0x01)                  */
#define TM41_TE1_TE11_Pos                 (1UL)                     /*!< TM41 TE1: TE11 (Bit 1)                                */
#define TM41_TE1_TE11_Msk                 (0x2UL)                   /*!< TM41 TE1: TE11 (Bitfield-Mask: 0x01)                  */
#define TM41_TE1_TE12_Pos                 (2UL)                     /*!< TM41 TE1: TE12 (Bit 2)                                */
#define TM41_TE1_TE12_Msk                 (0x4UL)                   /*!< TM41 TE1: TE12 (Bitfield-Mask: 0x01)                  */
#define TM41_TE1_TE13_Pos                 (3UL)                     /*!< TM41 TE1: TE13 (Bit 3)                                */
#define TM41_TE1_TE13_Msk                 (0x8UL)                   /*!< TM41 TE1: TE13 (Bitfield-Mask: 0x01)                  */
#define TM41_TE1_TEH11_Pos                (9UL)                     /*!< TM41 TE1: TEH11 (Bit 9)                               */
#define TM41_TE1_TEH11_Msk                (0x200UL)                 /*!< TM41 TE1: TEH11 (Bitfield-Mask: 0x01)                 */
#define TM41_TE1_TEH13_Pos                (11UL)                    /*!< TM41 TE1: TEH13 (Bit 11)                              */
#define TM41_TE1_TEH13_Msk                (0x800UL)                 /*!< TM41 TE1: TEH13 (Bitfield-Mask: 0x01)                 */
/* ==========================================================  TS1  ========================================================== */
#define TM41_TS1_TS10_Pos                 (0UL)                     /*!< TM41 TS1: TS10 (Bit 0)                                */
#define TM41_TS1_TS10_Msk                 (0x1UL)                   /*!< TM41 TS1: TS10 (Bitfield-Mask: 0x01)                  */
#define TM41_TS1_TS11_Pos                 (1UL)                     /*!< TM41 TS1: TS11 (Bit 1)                                */
#define TM41_TS1_TS11_Msk                 (0x2UL)                   /*!< TM41 TS1: TS11 (Bitfield-Mask: 0x01)                  */
#define TM41_TS1_TS12_Pos                 (2UL)                     /*!< TM41 TS1: TS12 (Bit 2)                                */
#define TM41_TS1_TS12_Msk                 (0x4UL)                   /*!< TM41 TS1: TS12 (Bitfield-Mask: 0x01)                  */
#define TM41_TS1_TS13_Pos                 (3UL)                     /*!< TM41 TS1: TS13 (Bit 3)                                */
#define TM41_TS1_TS13_Msk                 (0x8UL)                   /*!< TM41 TS1: TS13 (Bitfield-Mask: 0x01)                  */
#define TM41_TS1_TSH11_Pos                (9UL)                     /*!< TM41 TS1: TSH11 (Bit 9)                               */
#define TM41_TS1_TSH11_Msk                (0x200UL)                 /*!< TM41 TS1: TSH11 (Bitfield-Mask: 0x01)                 */
#define TM41_TS1_TSH13_Pos                (11UL)                    /*!< TM41 TS1: TSH13 (Bit 11)                              */
#define TM41_TS1_TSH13_Msk                (0x800UL)                 /*!< TM41 TS1: TSH13 (Bitfield-Mask: 0x01)                 */
/* ==========================================================  TT1  ========================================================== */
#define TM41_TT1_TT10_Pos                 (0UL)                     /*!< TM41 TT1: TT10 (Bit 0)                                */
#define TM41_TT1_TT10_Msk                 (0x1UL)                   /*!< TM41 TT1: TT10 (Bitfield-Mask: 0x01)                  */
#define TM41_TT1_TT11_Pos                 (1UL)                     /*!< TM41 TT1: TT11 (Bit 1)                                */
#define TM41_TT1_TT11_Msk                 (0x2UL)                   /*!< TM41 TT1: TT11 (Bitfield-Mask: 0x01)                  */
#define TM41_TT1_TT12_Pos                 (2UL)                     /*!< TM41 TT1: TT12 (Bit 2)                                */
#define TM41_TT1_TT12_Msk                 (0x4UL)                   /*!< TM41 TT1: TT12 (Bitfield-Mask: 0x01)                  */
#define TM41_TT1_TT13_Pos                 (3UL)                     /*!< TM41 TT1: TT13 (Bit 3)                                */
#define TM41_TT1_TT13_Msk                 (0x8UL)                   /*!< TM41 TT1: TT13 (Bitfield-Mask: 0x01)                  */
#define TM41_TT1_TTH11_Pos                (9UL)                     /*!< TM41 TT1: TTH11 (Bit 9)                               */
#define TM41_TT1_TTH11_Msk                (0x200UL)                 /*!< TM41 TT1: TTH11 (Bitfield-Mask: 0x01)                 */
#define TM41_TT1_TTH13_Pos                (11UL)                    /*!< TM41 TT1: TTH13 (Bit 11)                              */
#define TM41_TT1_TTH13_Msk                (0x800UL)                 /*!< TM41 TT1: TTH13 (Bitfield-Mask: 0x01)                 */
/* =========================================================  TPS1  ========================================================== */
#define TM41_TPS1_PRS10_Pos               (0UL)                     /*!< TM41 TPS1: PRS10 (Bit 0)                              */
#define TM41_TPS1_PRS10_Msk               (0xfUL)                   /*!< TM41 TPS1: PRS10 (Bitfield-Mask: 0x0f)                */
#define TM41_TPS1_PRS11_Pos               (4UL)                     /*!< TM41 TPS1: PRS11 (Bit 4)                              */
#define TM41_TPS1_PRS11_Msk               (0xf0UL)                  /*!< TM41 TPS1: PRS11 (Bitfield-Mask: 0x0f)                */
#define TM41_TPS1_PRS12_Pos               (8UL)                     /*!< TM41 TPS1: PRS12 (Bit 8)                              */
#define TM41_TPS1_PRS12_Msk               (0x300UL)                 /*!< TM41 TPS1: PRS12 (Bitfield-Mask: 0x03)                */
#define TM41_TPS1_PRS13_Pos               (12UL)                    /*!< TM41 TPS1: PRS13 (Bit 12)                             */
#define TM41_TPS1_PRS13_Msk               (0x3000UL)                /*!< TM41 TPS1: PRS13 (Bitfield-Mask: 0x03)                */
/* ==========================================================  TO1  ========================================================== */
#define TM41_TO1_TO10_Pos                 (0UL)                     /*!< TM41 TO1: TO10 (Bit 0)                                */
#define TM41_TO1_TO10_Msk                 (0x1UL)                   /*!< TM41 TO1: TO10 (Bitfield-Mask: 0x01)                  */
#define TM41_TO1_TO11_Pos                 (1UL)                     /*!< TM41 TO1: TO11 (Bit 1)                                */
#define TM41_TO1_TO11_Msk                 (0x2UL)                   /*!< TM41 TO1: TO11 (Bitfield-Mask: 0x01)                  */
#define TM41_TO1_TO12_Pos                 (2UL)                     /*!< TM41 TO1: TO12 (Bit 2)                                */
#define TM41_TO1_TO12_Msk                 (0x4UL)                   /*!< TM41 TO1: TO12 (Bitfield-Mask: 0x01)                  */
#define TM41_TO1_TO13_Pos                 (3UL)                     /*!< TM41 TO1: TO13 (Bit 3)                                */
#define TM41_TO1_TO13_Msk                 (0x8UL)                   /*!< TM41 TO1: TO13 (Bitfield-Mask: 0x01)                  */
/* =========================================================  TOE1  ========================================================== */
#define TM41_TOE1_TOE10_Pos               (0UL)                     /*!< TM41 TOE1: TOE10 (Bit 0)                              */
#define TM41_TOE1_TOE10_Msk               (0x1UL)                   /*!< TM41 TOE1: TOE10 (Bitfield-Mask: 0x01)                */
#define TM41_TOE1_TOE11_Pos               (1UL)                     /*!< TM41 TOE1: TOE11 (Bit 1)                              */
#define TM41_TOE1_TOE11_Msk               (0x2UL)                   /*!< TM41 TOE1: TOE11 (Bitfield-Mask: 0x01)                */
#define TM41_TOE1_TOE12_Pos               (2UL)                     /*!< TM41 TOE1: TOE12 (Bit 2)                              */
#define TM41_TOE1_TOE12_Msk               (0x4UL)                   /*!< TM41 TOE1: TOE12 (Bitfield-Mask: 0x01)                */
#define TM41_TOE1_TOE13_Pos               (3UL)                     /*!< TM41 TOE1: TOE13 (Bit 3)                              */
#define TM41_TOE1_TOE13_Msk               (0x8UL)                   /*!< TM41 TOE1: TOE13 (Bitfield-Mask: 0x01)                */
/* =========================================================  TOL1  ========================================================== */
#define TM41_TOL1_TOL11_Pos               (1UL)                     /*!< TM41 TOL1: TOL11 (Bit 1)                              */
#define TM41_TOL1_TOL11_Msk               (0x2UL)                   /*!< TM41 TOL1: TOL11 (Bitfield-Mask: 0x01)                */
#define TM41_TOL1_TOL12_Pos               (2UL)                     /*!< TM41 TOL1: TOL12 (Bit 2)                              */
#define TM41_TOL1_TOL12_Msk               (0x4UL)                   /*!< TM41 TOL1: TOL12 (Bitfield-Mask: 0x01)                */
#define TM41_TOL1_TOL13_Pos               (3UL)                     /*!< TM41 TOL1: TOL13 (Bit 3)                              */
#define TM41_TOL1_TOL13_Msk               (0x8UL)                   /*!< TM41 TOL1: TOL13 (Bitfield-Mask: 0x01)                */
/* =========================================================  TOM1  ========================================================== */
#define TM41_TOM1_TOM11_Pos               (1UL)                     /*!< TM41 TOM1: TOM11 (Bit 1)                              */
#define TM41_TOM1_TOM11_Msk               (0x2UL)                   /*!< TM41 TOM1: TOM11 (Bitfield-Mask: 0x01)                */
#define TM41_TOM1_TOM12_Pos               (2UL)                     /*!< TM41 TOM1: TOM12 (Bit 2)                              */
#define TM41_TOM1_TOM12_Msk               (0x4UL)                   /*!< TM41 TOM1: TOM12 (Bitfield-Mask: 0x01)                */
#define TM41_TOM1_TOM13_Pos               (3UL)                     /*!< TM41 TOM1: TOM13 (Bit 3)                              */
#define TM41_TOM1_TOM13_Msk               (0x8UL)                   /*!< TM41 TOM1: TOM13 (Bitfield-Mask: 0x01)                */
/* =========================================================  TDR1  ========================================================== */
/* =========================================================  TDR1  ========================================================== */
/* ========================================================  TDR11L  ========================================================= */
/* ========================================================  TDR11H  ========================================================= */
/* ========================================================  TDR13L  ========================================================= */
/* ========================================================  TDR13H  ========================================================= */


/* =========================================================================================================================== */
/* ================                                           EPWM                                            ================ */
/* =========================================================================================================================== */

/* ========================================================  EPWMSRC  ======================================================== */
#define EPWM_EPWMSRC_SRC0_Pos             (0UL)                     /*!< EPWM EPWMSRC: SRC0 (Bit 0)                            */
#define EPWM_EPWMSRC_SRC0_Msk             (0x1UL)                   /*!< EPWM EPWMSRC: SRC0 (Bitfield-Mask: 0x01)              */
/* ========================================================  EPWMCTL  ======================================================== */
#define EPWM_EPWMCTL_OE0_Pos              (0UL)                     /*!< EPWM EPWMCTL: OE0 (Bit 0)                             */
#define EPWM_EPWMCTL_OE0_Msk              (0x1UL)                   /*!< EPWM EPWMCTL: OE0 (Bitfield-Mask: 0x01)               */
#define EPWM_EPWMCTL_IE0_Pos              (8UL)                     /*!< EPWM EPWMCTL: IE0 (Bit 8)                             */
#define EPWM_EPWMCTL_IE0_Msk              (0x100UL)                 /*!< EPWM EPWMCTL: IE0 (Bitfield-Mask: 0x01)               */
/* ========================================================  EPWMSTL  ======================================================== */
#define EPWM_EPWMSTL_IO0_Pos              (0UL)                     /*!< EPWM EPWMSTL: IO0 (Bit 0)                             */
#define EPWM_EPWMSTL_IO0_Msk              (0x1UL)                   /*!< EPWM EPWMSTL: IO0 (Bitfield-Mask: 0x01)               */
#define EPWM_EPWMSTL_IO1_Pos              (2UL)                     /*!< EPWM EPWMSTL: IO1 (Bit 2)                             */
#define EPWM_EPWMSTL_IO1_Msk              (0x4UL)                   /*!< EPWM EPWMSTL: IO1 (Bitfield-Mask: 0x01)               */
#define EPWM_EPWMSTL_IO2_Pos              (4UL)                     /*!< EPWM EPWMSTL: IO2 (Bit 4)                             */
#define EPWM_EPWMSTL_IO2_Msk              (0x10UL)                  /*!< EPWM EPWMSTL: IO2 (Bitfield-Mask: 0x01)               */
#define EPWM_EPWMSTL_IO3_Pos              (6UL)                     /*!< EPWM EPWMSTL: IO3 (Bit 6)                             */
#define EPWM_EPWMSTL_IO3_Msk              (0x40UL)                  /*!< EPWM EPWMSTL: IO3 (Bitfield-Mask: 0x01)               */
#define EPWM_EPWMSTL_IO4_Pos              (8UL)                     /*!< EPWM EPWMSTL: IO4 (Bit 8)                             */
#define EPWM_EPWMSTL_IO4_Msk              (0x100UL)                 /*!< EPWM EPWMSTL: IO4 (Bitfield-Mask: 0x01)               */
#define EPWM_EPWMSTL_IO5_Pos              (10UL)                    /*!< EPWM EPWMSTL: IO5 (Bit 10)                            */
#define EPWM_EPWMSTL_IO5_Msk              (0x400UL)                 /*!< EPWM EPWMSTL: IO5 (Bitfield-Mask: 0x01)               */
#define EPWM_EPWMSTL_IO6_Pos              (12UL)                    /*!< EPWM EPWMSTL: IO6 (Bit 12)                            */
#define EPWM_EPWMSTL_IO6_Msk              (0x1000UL)                /*!< EPWM EPWMSTL: IO6 (Bitfield-Mask: 0x01)               */
#define EPWM_EPWMSTL_IO7_Pos              (14UL)                    /*!< EPWM EPWMSTL: IO7 (Bit 14)                            */
#define EPWM_EPWMSTL_IO7_Msk              (0x4000UL)                /*!< EPWM EPWMSTL: IO7 (Bitfield-Mask: 0x01)               */
/* ========================================================  EPWMSTC  ======================================================== */
#define EPWM_EPWMSTC_SC_SEL_Pos           (0UL)                     /*!< EPWM EPWMSTC: SC_SEL (Bit 0)                          */
#define EPWM_EPWMSTC_SC_SEL_Msk           (0x1UL)                   /*!< EPWM EPWMSTC: SC_SEL (Bitfield-Mask: 0x01)            */
#define EPWM_EPWMSTC_IN_EG_Pos            (2UL)                     /*!< EPWM EPWMSTC: IN_EG (Bit 2)                           */
#define EPWM_EPWMSTC_IN_EG_Msk            (0x4UL)                   /*!< EPWM EPWMSTC: IN_EG (Bitfield-Mask: 0x01)             */
#define EPWM_EPWMSTC_HS_SEL_Pos           (3UL)                     /*!< EPWM EPWMSTC: HS_SEL (Bit 3)                          */
#define EPWM_EPWMSTC_HS_SEL_Msk           (0x8UL)                   /*!< EPWM EPWMSTC: HS_SEL (Bitfield-Mask: 0x01)            */
#define EPWM_EPWMSTC_REL_SEL_Pos          (4UL)                     /*!< EPWM EPWMSTC: REL_SEL (Bit 4)                         */
#define EPWM_EPWMSTC_REL_SEL_Msk          (0x10UL)                  /*!< EPWM EPWMSTC: REL_SEL (Bitfield-Mask: 0x01)           */
/* ========================================================  EPWMSTR  ======================================================== */
#define EPWM_EPWMSTR_HZCLR_Pos            (0UL)                     /*!< EPWM EPWMSTR: HZCLR (Bit 0)                           */
#define EPWM_EPWMSTR_HZCLR_Msk            (0x1UL)                   /*!< EPWM EPWMSTR: HZCLR (Bitfield-Mask: 0x01)             */
#define EPWM_EPWMSTR_SHTFLG_Pos           (1UL)                     /*!< EPWM EPWMSTR: SHTFLG (Bit 1)                          */
#define EPWM_EPWMSTR_SHTFLG_Msk           (0x2UL)                   /*!< EPWM EPWMSTR: SHTFLG (Bitfield-Mask: 0x01)            */


/* =========================================================================================================================== */
/* ================                                            RTC                                            ================ */
/* =========================================================================================================================== */

/* ========================================================  SUBCUD  ========================================================= */
#define RTC_SUBCUD_F_Pos                  (0UL)                     /*!< RTC SUBCUD: F (Bit 0)                                 */
#define RTC_SUBCUD_F_Msk                  (0x1fffUL)                /*!< RTC SUBCUD: F (Bitfield-Mask: 0x1fff)                 */
#define RTC_SUBCUD_DEV_Pos                (15UL)                    /*!< RTC SUBCUD: DEV (Bit 15)                              */
#define RTC_SUBCUD_DEV_Msk                (0x8000UL)                /*!< RTC SUBCUD: DEV (Bitfield-Mask: 0x01)                 */
/* =========================================================  ITMC  ========================================================== */
#define RTC_ITMC_ITCMP_Pos                (0UL)                     /*!< RTC ITMC: ITCMP (Bit 0)                               */
#define RTC_ITMC_ITCMP_Msk                (0x7fffUL)                /*!< RTC ITMC: ITCMP (Bitfield-Mask: 0x7fff)               */
#define RTC_ITMC_RINTE_Pos                (15UL)                    /*!< RTC ITMC: RINTE (Bit 15)                              */
#define RTC_ITMC_RINTE_Msk                (0x8000UL)                /*!< RTC ITMC: RINTE (Bitfield-Mask: 0x01)                 */
/* ==========================================================  SEC  ========================================================== */
/* ==========================================================  MIN  ========================================================== */
/* =========================================================  HOUR  ========================================================== */
/* =========================================================  WEEK  ========================================================== */
/* ==========================================================  DAY  ========================================================== */
/* =========================================================  MONTH  ========================================================= */
/* =========================================================  YEAR  ========================================================== */
/* ========================================================  ALARMWM  ======================================================== */
/* ========================================================  ALARMWH  ======================================================== */
/* ========================================================  ALARMWW  ======================================================== */
/* =========================================================  RTCC0  ========================================================= */
#define RTC_RTCC0_CT_Pos                  (0UL)                     /*!< RTC RTCC0: CT (Bit 0)                                 */
#define RTC_RTCC0_CT_Msk                  (0x7UL)                   /*!< RTC RTCC0: CT (Bitfield-Mask: 0x07)                   */
#define RTC_RTCC0_AMPM_Pos                (3UL)                     /*!< RTC RTCC0: AMPM (Bit 3)                               */
#define RTC_RTCC0_AMPM_Msk                (0x8UL)                   /*!< RTC RTCC0: AMPM (Bitfield-Mask: 0x01)                 */
#define RTC_RTCC0_RCLOE_Pos               (5UL)                     /*!< RTC RTCC0: RCLOE (Bit 5)                              */
#define RTC_RTCC0_RCLOE_Msk               (0x20UL)                  /*!< RTC RTCC0: RCLOE (Bitfield-Mask: 0x01)                */
#define RTC_RTCC0_RTCE_Pos                (7UL)                     /*!< RTC RTCC0: RTCE (Bit 7)                               */
#define RTC_RTCC0_RTCE_Msk                (0x80UL)                  /*!< RTC RTCC0: RTCE (Bitfield-Mask: 0x01)                 */
/* =========================================================  RTCC1  ========================================================= */
#define RTC_RTCC1_RWAIT_Pos               (0UL)                     /*!< RTC RTCC1: RWAIT (Bit 0)                              */
#define RTC_RTCC1_RWAIT_Msk               (0x1UL)                   /*!< RTC RTCC1: RWAIT (Bitfield-Mask: 0x01)                */
#define RTC_RTCC1_RWST_Pos                (1UL)                     /*!< RTC RTCC1: RWST (Bit 1)                               */
#define RTC_RTCC1_RWST_Msk                (0x2UL)                   /*!< RTC RTCC1: RWST (Bitfield-Mask: 0x01)                 */
#define RTC_RTCC1_RIFG_Pos                (3UL)                     /*!< RTC RTCC1: RIFG (Bit 3)                               */
#define RTC_RTCC1_RIFG_Msk                (0x8UL)                   /*!< RTC RTCC1: RIFG (Bitfield-Mask: 0x01)                 */
#define RTC_RTCC1_WAFG_Pos                (4UL)                     /*!< RTC RTCC1: WAFG (Bit 4)                               */
#define RTC_RTCC1_WAFG_Msk                (0x10UL)                  /*!< RTC RTCC1: WAFG (Bitfield-Mask: 0x01)                 */
#define RTC_RTCC1_WALIE_Pos               (6UL)                     /*!< RTC RTCC1: WALIE (Bit 6)                              */
#define RTC_RTCC1_WALIE_Msk               (0x40UL)                  /*!< RTC RTCC1: WALIE (Bitfield-Mask: 0x01)                */
#define RTC_RTCC1_WALE_Pos                (7UL)                     /*!< RTC RTCC1: WALE (Bit 7)                               */
#define RTC_RTCC1_WALE_Msk                (0x80UL)                  /*!< RTC RTCC1: WALE (Bitfield-Mask: 0x01)                 */


/* =========================================================================================================================== */
/* ================                                           PCBZ                                            ================ */
/* =========================================================================================================================== */

/* =========================================================  CKS0  ========================================================== */
#define PCBZ_CKS0_CCS_Pos                 (0UL)                     /*!< PCBZ CKS0: CCS (Bit 0)                                */
#define PCBZ_CKS0_CCS_Msk                 (0x7UL)                   /*!< PCBZ CKS0: CCS (Bitfield-Mask: 0x07)                  */
#define PCBZ_CKS0_CSEL_Pos                (3UL)                     /*!< PCBZ CKS0: CSEL (Bit 3)                               */
#define PCBZ_CKS0_CSEL_Msk                (0x8UL)                   /*!< PCBZ CKS0: CSEL (Bitfield-Mask: 0x01)                 */
#define PCBZ_CKS0_PCLOE_Pos               (7UL)                     /*!< PCBZ CKS0: PCLOE (Bit 7)                              */
#define PCBZ_CKS0_PCLOE_Msk               (0x80UL)                  /*!< PCBZ CKS0: PCLOE (Bitfield-Mask: 0x01)                */
/* =========================================================  CKS1  ========================================================== */
#define PCBZ_CKS1_CCS_Pos                 (0UL)                     /*!< PCBZ CKS1: CCS (Bit 0)                                */
#define PCBZ_CKS1_CCS_Msk                 (0x7UL)                   /*!< PCBZ CKS1: CCS (Bitfield-Mask: 0x07)                  */
#define PCBZ_CKS1_CSEL_Pos                (3UL)                     /*!< PCBZ CKS1: CSEL (Bit 3)                               */
#define PCBZ_CKS1_CSEL_Msk                (0x8UL)                   /*!< PCBZ CKS1: CSEL (Bitfield-Mask: 0x01)                 */
#define PCBZ_CKS1_PCLOE_Pos               (7UL)                     /*!< PCBZ CKS1: PCLOE (Bit 7)                              */
#define PCBZ_CKS1_PCLOE_Msk               (0x80UL)                  /*!< PCBZ CKS1: PCLOE (Bitfield-Mask: 0x01)                */


/* =========================================================================================================================== */
/* ================                                            WDT                                            ================ */
/* =========================================================================================================================== */

/* ========================================================  LOCKCTL  ======================================================== */
/* =========================================================  PRCR  ========================================================== */
/* =========================================================  WDTE  ========================================================== */


/* =========================================================================================================================== */
/* ================                                            ADC                                            ================ */
/* =========================================================================================================================== */

/* =========================================================  ADM0  ========================================================== */
#define ADC_ADM0_ADCE_Pos                 (0UL)                     /*!< ADC ADM0: ADCE (Bit 0)                                */
#define ADC_ADM0_ADCE_Msk                 (0x1UL)                   /*!< ADC ADM0: ADCE (Bitfield-Mask: 0x01)                  */
#define ADC_ADM0_FR_Pos                   (3UL)                     /*!< ADC ADM0: FR (Bit 3)                                  */
#define ADC_ADM0_FR_Msk                   (0x38UL)                  /*!< ADC ADM0: FR (Bitfield-Mask: 0x07)                    */
#define ADC_ADM0_ADCS_Pos                 (7UL)                     /*!< ADC ADM0: ADCS (Bit 7)                                */
#define ADC_ADM0_ADCS_Msk                 (0x80UL)                  /*!< ADC ADM0: ADCS (Bitfield-Mask: 0x01)                  */
/* =========================================================  ADM1  ========================================================== */
#define ADC_ADM1_ADSCM_Pos                (3UL)                     /*!< ADC ADM1: ADSCM (Bit 3)                               */
#define ADC_ADM1_ADSCM_Msk                (0x8UL)                   /*!< ADC ADM1: ADSCM (Bitfield-Mask: 0x01)                 */
#define ADC_ADM1_ADMD_Pos                 (7UL)                     /*!< ADC ADM1: ADMD (Bit 7)                                */
#define ADC_ADM1_ADMD_Msk                 (0x80UL)                  /*!< ADC ADM1: ADMD (Bitfield-Mask: 0x01)                  */
/* =========================================================  ADM2  ========================================================== */
#define ADC_ADM2_CHRDE_Pos                (1UL)                     /*!< ADC ADM2: CHRDE (Bit 1)                               */
#define ADC_ADM2_CHRDE_Msk                (0x2UL)                   /*!< ADC ADM2: CHRDE (Bitfield-Mask: 0x01)                 */
#define ADC_ADM2_ADRCK_Pos                (3UL)                     /*!< ADC ADM2: ADRCK (Bit 3)                               */
#define ADC_ADM2_ADRCK_Msk                (0x8UL)                   /*!< ADC ADM2: ADRCK (Bitfield-Mask: 0x01)                 */
#define ADC_ADM2_ADREFP_Pos               (6UL)                     /*!< ADC ADM2: ADREFP (Bit 6)                              */
#define ADC_ADM2_ADREFP_Msk               (0xc0UL)                  /*!< ADC ADM2: ADREFP (Bitfield-Mask: 0x03)                */
/* =========================================================  ADTRG  ========================================================= */
#define ADC_ADTRG_ADTMD_Pos               (6UL)                     /*!< ADC ADTRG: ADTMD (Bit 6)                              */
#define ADC_ADTRG_ADTMD_Msk               (0xc0UL)                  /*!< ADC ADTRG: ADTMD (Bitfield-Mask: 0x03)                */
#define ADC_ADTRG_ADTRS_Pos               (0UL)                     /*!< ADC ADTRG: ADTRS (Bit 0)                              */
#define ADC_ADTRG_ADTRS_Msk               (0x3UL)                   /*!< ADC ADTRG: ADTRS (Bitfield-Mask: 0x03)                */
/* ==========================================================  ADS  ========================================================== */
/* =========================================================  ADCR  ========================================================== */
/* =========================================================  ADCRH  ========================================================= */
/* =========================================================  ADUL  ========================================================== */
/* =========================================================  ADLL  ========================================================== */
/* =======================================================  ADSMPWAIT  ======================================================= */


/* =========================================================================================================================== */
/* ================                                           SCI0                                            ================ */
/* =========================================================================================================================== */

/* =========================================================  SSR00  ========================================================= */
#define SCI0_SSR00_OVF_Pos                (0UL)                     /*!< SCI0 SSR00: OVF (Bit 0)                               */
#define SCI0_SSR00_OVF_Msk                (0x1UL)                   /*!< SCI0 SSR00: OVF (Bitfield-Mask: 0x01)                 */
#define SCI0_SSR00_PEF_Pos                (1UL)                     /*!< SCI0 SSR00: PEF (Bit 1)                               */
#define SCI0_SSR00_PEF_Msk                (0x2UL)                   /*!< SCI0 SSR00: PEF (Bitfield-Mask: 0x01)                 */
#define SCI0_SSR00_FEF_Pos                (2UL)                     /*!< SCI0 SSR00: FEF (Bit 2)                               */
#define SCI0_SSR00_FEF_Msk                (0x4UL)                   /*!< SCI0 SSR00: FEF (Bitfield-Mask: 0x01)                 */
#define SCI0_SSR00_BFF_Pos                (5UL)                     /*!< SCI0 SSR00: BFF (Bit 5)                               */
#define SCI0_SSR00_BFF_Msk                (0x20UL)                  /*!< SCI0 SSR00: BFF (Bitfield-Mask: 0x01)                 */
#define SCI0_SSR00_TSF_Pos                (6UL)                     /*!< SCI0 SSR00: TSF (Bit 6)                               */
#define SCI0_SSR00_TSF_Msk                (0x40UL)                  /*!< SCI0 SSR00: TSF (Bitfield-Mask: 0x01)                 */
/* =========================================================  SSR01  ========================================================= */
#define SCI0_SSR01_OVF_Pos                (0UL)                     /*!< SCI0 SSR01: OVF (Bit 0)                               */
#define SCI0_SSR01_OVF_Msk                (0x1UL)                   /*!< SCI0 SSR01: OVF (Bitfield-Mask: 0x01)                 */
#define SCI0_SSR01_PEF_Pos                (1UL)                     /*!< SCI0 SSR01: PEF (Bit 1)                               */
#define SCI0_SSR01_PEF_Msk                (0x2UL)                   /*!< SCI0 SSR01: PEF (Bitfield-Mask: 0x01)                 */
#define SCI0_SSR01_FEF_Pos                (2UL)                     /*!< SCI0 SSR01: FEF (Bit 2)                               */
#define SCI0_SSR01_FEF_Msk                (0x4UL)                   /*!< SCI0 SSR01: FEF (Bitfield-Mask: 0x01)                 */
#define SCI0_SSR01_BFF_Pos                (5UL)                     /*!< SCI0 SSR01: BFF (Bit 5)                               */
#define SCI0_SSR01_BFF_Msk                (0x20UL)                  /*!< SCI0 SSR01: BFF (Bitfield-Mask: 0x01)                 */
#define SCI0_SSR01_TSF_Pos                (6UL)                     /*!< SCI0 SSR01: TSF (Bit 6)                               */
#define SCI0_SSR01_TSF_Msk                (0x40UL)                  /*!< SCI0 SSR01: TSF (Bitfield-Mask: 0x01)                 */
/* =========================================================  SSR02  ========================================================= */
#define SCI0_SSR02_OVF_Pos                (0UL)                     /*!< SCI0 SSR02: OVF (Bit 0)                               */
#define SCI0_SSR02_OVF_Msk                (0x1UL)                   /*!< SCI0 SSR02: OVF (Bitfield-Mask: 0x01)                 */
#define SCI0_SSR02_PEF_Pos                (1UL)                     /*!< SCI0 SSR02: PEF (Bit 1)                               */
#define SCI0_SSR02_PEF_Msk                (0x2UL)                   /*!< SCI0 SSR02: PEF (Bitfield-Mask: 0x01)                 */
#define SCI0_SSR02_FEF_Pos                (2UL)                     /*!< SCI0 SSR02: FEF (Bit 2)                               */
#define SCI0_SSR02_FEF_Msk                (0x4UL)                   /*!< SCI0 SSR02: FEF (Bitfield-Mask: 0x01)                 */
#define SCI0_SSR02_BFF_Pos                (5UL)                     /*!< SCI0 SSR02: BFF (Bit 5)                               */
#define SCI0_SSR02_BFF_Msk                (0x20UL)                  /*!< SCI0 SSR02: BFF (Bitfield-Mask: 0x01)                 */
#define SCI0_SSR02_TSF_Pos                (6UL)                     /*!< SCI0 SSR02: TSF (Bit 6)                               */
#define SCI0_SSR02_TSF_Msk                (0x40UL)                  /*!< SCI0 SSR02: TSF (Bitfield-Mask: 0x01)                 */
/* =========================================================  SSR03  ========================================================= */
#define SCI0_SSR03_OVF_Pos                (0UL)                     /*!< SCI0 SSR03: OVF (Bit 0)                               */
#define SCI0_SSR03_OVF_Msk                (0x1UL)                   /*!< SCI0 SSR03: OVF (Bitfield-Mask: 0x01)                 */
#define SCI0_SSR03_PEF_Pos                (1UL)                     /*!< SCI0 SSR03: PEF (Bit 1)                               */
#define SCI0_SSR03_PEF_Msk                (0x2UL)                   /*!< SCI0 SSR03: PEF (Bitfield-Mask: 0x01)                 */
#define SCI0_SSR03_FEF_Pos                (2UL)                     /*!< SCI0 SSR03: FEF (Bit 2)                               */
#define SCI0_SSR03_FEF_Msk                (0x4UL)                   /*!< SCI0 SSR03: FEF (Bitfield-Mask: 0x01)                 */
#define SCI0_SSR03_BFF_Pos                (5UL)                     /*!< SCI0 SSR03: BFF (Bit 5)                               */
#define SCI0_SSR03_BFF_Msk                (0x20UL)                  /*!< SCI0 SSR03: BFF (Bitfield-Mask: 0x01)                 */
#define SCI0_SSR03_TSF_Pos                (6UL)                     /*!< SCI0 SSR03: TSF (Bit 6)                               */
#define SCI0_SSR03_TSF_Msk                (0x40UL)                  /*!< SCI0 SSR03: TSF (Bitfield-Mask: 0x01)                 */
/* =========================================================  SIR00  ========================================================= */
#define SCI0_SIR00_OVCT_Pos               (0UL)                     /*!< SCI0 SIR00: OVCT (Bit 0)                              */
#define SCI0_SIR00_OVCT_Msk               (0x1UL)                   /*!< SCI0 SIR00: OVCT (Bitfield-Mask: 0x01)                */
#define SCI0_SIR00_PECT_Pos               (1UL)                     /*!< SCI0 SIR00: PECT (Bit 1)                              */
#define SCI0_SIR00_PECT_Msk               (0x2UL)                   /*!< SCI0 SIR00: PECT (Bitfield-Mask: 0x01)                */
#define SCI0_SIR00_FECT_Pos               (2UL)                     /*!< SCI0 SIR00: FECT (Bit 2)                              */
#define SCI0_SIR00_FECT_Msk               (0x4UL)                   /*!< SCI0 SIR00: FECT (Bitfield-Mask: 0x01)                */
/* =========================================================  SIR01  ========================================================= */
#define SCI0_SIR01_OVCT_Pos               (0UL)                     /*!< SCI0 SIR01: OVCT (Bit 0)                              */
#define SCI0_SIR01_OVCT_Msk               (0x1UL)                   /*!< SCI0 SIR01: OVCT (Bitfield-Mask: 0x01)                */
#define SCI0_SIR01_PECT_Pos               (1UL)                     /*!< SCI0 SIR01: PECT (Bit 1)                              */
#define SCI0_SIR01_PECT_Msk               (0x2UL)                   /*!< SCI0 SIR01: PECT (Bitfield-Mask: 0x01)                */
#define SCI0_SIR01_FECT_Pos               (2UL)                     /*!< SCI0 SIR01: FECT (Bit 2)                              */
#define SCI0_SIR01_FECT_Msk               (0x4UL)                   /*!< SCI0 SIR01: FECT (Bitfield-Mask: 0x01)                */
/* =========================================================  SIR02  ========================================================= */
#define SCI0_SIR02_OVCT_Pos               (0UL)                     /*!< SCI0 SIR02: OVCT (Bit 0)                              */
#define SCI0_SIR02_OVCT_Msk               (0x1UL)                   /*!< SCI0 SIR02: OVCT (Bitfield-Mask: 0x01)                */
#define SCI0_SIR02_PECT_Pos               (1UL)                     /*!< SCI0 SIR02: PECT (Bit 1)                              */
#define SCI0_SIR02_PECT_Msk               (0x2UL)                   /*!< SCI0 SIR02: PECT (Bitfield-Mask: 0x01)                */
#define SCI0_SIR02_FECT_Pos               (2UL)                     /*!< SCI0 SIR02: FECT (Bit 2)                              */
#define SCI0_SIR02_FECT_Msk               (0x4UL)                   /*!< SCI0 SIR02: FECT (Bitfield-Mask: 0x01)                */
/* =========================================================  SIR03  ========================================================= */
#define SCI0_SIR03_OVCT_Pos               (0UL)                     /*!< SCI0 SIR03: OVCT (Bit 0)                              */
#define SCI0_SIR03_OVCT_Msk               (0x1UL)                   /*!< SCI0 SIR03: OVCT (Bitfield-Mask: 0x01)                */
#define SCI0_SIR03_PECT_Pos               (1UL)                     /*!< SCI0 SIR03: PECT (Bit 1)                              */
#define SCI0_SIR03_PECT_Msk               (0x2UL)                   /*!< SCI0 SIR03: PECT (Bitfield-Mask: 0x01)                */
#define SCI0_SIR03_FECT_Pos               (2UL)                     /*!< SCI0 SIR03: FECT (Bit 2)                              */
#define SCI0_SIR03_FECT_Msk               (0x4UL)                   /*!< SCI0 SIR03: FECT (Bitfield-Mask: 0x01)                */
/* =========================================================  SMR00  ========================================================= */
#define SCI0_SMR00_MD_Pos                 (0UL)                     /*!< SCI0 SMR00: MD (Bit 0)                                */
#define SCI0_SMR00_MD_Msk                 (0xfUL)                   /*!< SCI0 SMR00: MD (Bitfield-Mask: 0x0f)                  */
#define SCI0_SMR00_SIS_Pos                (6UL)                     /*!< SCI0 SMR00: SIS (Bit 6)                               */
#define SCI0_SMR00_SIS_Msk                (0x40UL)                  /*!< SCI0 SMR00: SIS (Bitfield-Mask: 0x01)                 */
#define SCI0_SMR00_STS_Pos                (8UL)                     /*!< SCI0 SMR00: STS (Bit 8)                               */
#define SCI0_SMR00_STS_Msk                (0x100UL)                 /*!< SCI0 SMR00: STS (Bitfield-Mask: 0x01)                 */
#define SCI0_SMR00_CCS_Pos                (14UL)                    /*!< SCI0 SMR00: CCS (Bit 14)                              */
#define SCI0_SMR00_CCS_Msk                (0x4000UL)                /*!< SCI0 SMR00: CCS (Bitfield-Mask: 0x01)                 */
#define SCI0_SMR00_CKS_Pos                (15UL)                    /*!< SCI0 SMR00: CKS (Bit 15)                              */
#define SCI0_SMR00_CKS_Msk                (0x8000UL)                /*!< SCI0 SMR00: CKS (Bitfield-Mask: 0x01)                 */
/* =========================================================  SMR01  ========================================================= */
#define SCI0_SMR01_MD_Pos                 (0UL)                     /*!< SCI0 SMR01: MD (Bit 0)                                */
#define SCI0_SMR01_MD_Msk                 (0xfUL)                   /*!< SCI0 SMR01: MD (Bitfield-Mask: 0x0f)                  */
#define SCI0_SMR01_SIS_Pos                (6UL)                     /*!< SCI0 SMR01: SIS (Bit 6)                               */
#define SCI0_SMR01_SIS_Msk                (0x40UL)                  /*!< SCI0 SMR01: SIS (Bitfield-Mask: 0x01)                 */
#define SCI0_SMR01_STS_Pos                (8UL)                     /*!< SCI0 SMR01: STS (Bit 8)                               */
#define SCI0_SMR01_STS_Msk                (0x100UL)                 /*!< SCI0 SMR01: STS (Bitfield-Mask: 0x01)                 */
#define SCI0_SMR01_CCS_Pos                (14UL)                    /*!< SCI0 SMR01: CCS (Bit 14)                              */
#define SCI0_SMR01_CCS_Msk                (0x4000UL)                /*!< SCI0 SMR01: CCS (Bitfield-Mask: 0x01)                 */
#define SCI0_SMR01_CKS_Pos                (15UL)                    /*!< SCI0 SMR01: CKS (Bit 15)                              */
#define SCI0_SMR01_CKS_Msk                (0x8000UL)                /*!< SCI0 SMR01: CKS (Bitfield-Mask: 0x01)                 */
/* =========================================================  SMR02  ========================================================= */
#define SCI0_SMR02_MD_Pos                 (0UL)                     /*!< SCI0 SMR02: MD (Bit 0)                                */
#define SCI0_SMR02_MD_Msk                 (0xfUL)                   /*!< SCI0 SMR02: MD (Bitfield-Mask: 0x0f)                  */
#define SCI0_SMR02_SIS_Pos                (6UL)                     /*!< SCI0 SMR02: SIS (Bit 6)                               */
#define SCI0_SMR02_SIS_Msk                (0x40UL)                  /*!< SCI0 SMR02: SIS (Bitfield-Mask: 0x01)                 */
#define SCI0_SMR02_STS_Pos                (8UL)                     /*!< SCI0 SMR02: STS (Bit 8)                               */
#define SCI0_SMR02_STS_Msk                (0x100UL)                 /*!< SCI0 SMR02: STS (Bitfield-Mask: 0x01)                 */
#define SCI0_SMR02_CCS_Pos                (14UL)                    /*!< SCI0 SMR02: CCS (Bit 14)                              */
#define SCI0_SMR02_CCS_Msk                (0x4000UL)                /*!< SCI0 SMR02: CCS (Bitfield-Mask: 0x01)                 */
#define SCI0_SMR02_CKS_Pos                (15UL)                    /*!< SCI0 SMR02: CKS (Bit 15)                              */
#define SCI0_SMR02_CKS_Msk                (0x8000UL)                /*!< SCI0 SMR02: CKS (Bitfield-Mask: 0x01)                 */
/* =========================================================  SMR03  ========================================================= */
#define SCI0_SMR03_MD_Pos                 (0UL)                     /*!< SCI0 SMR03: MD (Bit 0)                                */
#define SCI0_SMR03_MD_Msk                 (0xfUL)                   /*!< SCI0 SMR03: MD (Bitfield-Mask: 0x0f)                  */
#define SCI0_SMR03_SIS_Pos                (6UL)                     /*!< SCI0 SMR03: SIS (Bit 6)                               */
#define SCI0_SMR03_SIS_Msk                (0x40UL)                  /*!< SCI0 SMR03: SIS (Bitfield-Mask: 0x01)                 */
#define SCI0_SMR03_STS_Pos                (8UL)                     /*!< SCI0 SMR03: STS (Bit 8)                               */
#define SCI0_SMR03_STS_Msk                (0x100UL)                 /*!< SCI0 SMR03: STS (Bitfield-Mask: 0x01)                 */
#define SCI0_SMR03_CCS_Pos                (14UL)                    /*!< SCI0 SMR03: CCS (Bit 14)                              */
#define SCI0_SMR03_CCS_Msk                (0x4000UL)                /*!< SCI0 SMR03: CCS (Bitfield-Mask: 0x01)                 */
#define SCI0_SMR03_CKS_Pos                (15UL)                    /*!< SCI0 SMR03: CKS (Bit 15)                              */
#define SCI0_SMR03_CKS_Msk                (0x8000UL)                /*!< SCI0 SMR03: CKS (Bitfield-Mask: 0x01)                 */
/* =========================================================  SCR00  ========================================================= */
#define SCI0_SCR00_DLS_Pos                (0UL)                     /*!< SCI0 SCR00: DLS (Bit 0)                               */
#define SCI0_SCR00_DLS_Msk                (0x3UL)                   /*!< SCI0 SCR00: DLS (Bitfield-Mask: 0x03)                 */
#define SCI0_SCR00_SLC_Pos                (4UL)                     /*!< SCI0 SCR00: SLC (Bit 4)                               */
#define SCI0_SCR00_SLC_Msk                (0x30UL)                  /*!< SCI0 SCR00: SLC (Bitfield-Mask: 0x03)                 */
#define SCI0_SCR00_DIR_Pos                (7UL)                     /*!< SCI0 SCR00: DIR (Bit 7)                               */
#define SCI0_SCR00_DIR_Msk                (0x80UL)                  /*!< SCI0 SCR00: DIR (Bitfield-Mask: 0x01)                 */
#define SCI0_SCR00_PTC_Pos                (8UL)                     /*!< SCI0 SCR00: PTC (Bit 8)                               */
#define SCI0_SCR00_PTC_Msk                (0x300UL)                 /*!< SCI0 SCR00: PTC (Bitfield-Mask: 0x03)                 */
#define SCI0_SCR00_EOC_Pos                (10UL)                    /*!< SCI0 SCR00: EOC (Bit 10)                              */
#define SCI0_SCR00_EOC_Msk                (0x400UL)                 /*!< SCI0 SCR00: EOC (Bitfield-Mask: 0x01)                 */
#define SCI0_SCR00_CKP_Pos                (12UL)                    /*!< SCI0 SCR00: CKP (Bit 12)                              */
#define SCI0_SCR00_CKP_Msk                (0x1000UL)                /*!< SCI0 SCR00: CKP (Bitfield-Mask: 0x01)                 */
#define SCI0_SCR00_DAP_Pos                (13UL)                    /*!< SCI0 SCR00: DAP (Bit 13)                              */
#define SCI0_SCR00_DAP_Msk                (0x2000UL)                /*!< SCI0 SCR00: DAP (Bitfield-Mask: 0x01)                 */
#define SCI0_SCR00_RXE_Pos                (14UL)                    /*!< SCI0 SCR00: RXE (Bit 14)                              */
#define SCI0_SCR00_RXE_Msk                (0x4000UL)                /*!< SCI0 SCR00: RXE (Bitfield-Mask: 0x01)                 */
#define SCI0_SCR00_TXE_Pos                (15UL)                    /*!< SCI0 SCR00: TXE (Bit 15)                              */
#define SCI0_SCR00_TXE_Msk                (0x8000UL)                /*!< SCI0 SCR00: TXE (Bitfield-Mask: 0x01)                 */
/* =========================================================  SCR01  ========================================================= */
#define SCI0_SCR01_DLS_Pos                (0UL)                     /*!< SCI0 SCR01: DLS (Bit 0)                               */
#define SCI0_SCR01_DLS_Msk                (0x3UL)                   /*!< SCI0 SCR01: DLS (Bitfield-Mask: 0x03)                 */
#define SCI0_SCR01_SLC_Pos                (4UL)                     /*!< SCI0 SCR01: SLC (Bit 4)                               */
#define SCI0_SCR01_SLC_Msk                (0x30UL)                  /*!< SCI0 SCR01: SLC (Bitfield-Mask: 0x03)                 */
#define SCI0_SCR01_DIR_Pos                (7UL)                     /*!< SCI0 SCR01: DIR (Bit 7)                               */
#define SCI0_SCR01_DIR_Msk                (0x80UL)                  /*!< SCI0 SCR01: DIR (Bitfield-Mask: 0x01)                 */
#define SCI0_SCR01_PTC_Pos                (8UL)                     /*!< SCI0 SCR01: PTC (Bit 8)                               */
#define SCI0_SCR01_PTC_Msk                (0x300UL)                 /*!< SCI0 SCR01: PTC (Bitfield-Mask: 0x03)                 */
#define SCI0_SCR01_EOC_Pos                (10UL)                    /*!< SCI0 SCR01: EOC (Bit 10)                              */
#define SCI0_SCR01_EOC_Msk                (0x400UL)                 /*!< SCI0 SCR01: EOC (Bitfield-Mask: 0x01)                 */
#define SCI0_SCR01_CKP_Pos                (12UL)                    /*!< SCI0 SCR01: CKP (Bit 12)                              */
#define SCI0_SCR01_CKP_Msk                (0x1000UL)                /*!< SCI0 SCR01: CKP (Bitfield-Mask: 0x01)                 */
#define SCI0_SCR01_DAP_Pos                (13UL)                    /*!< SCI0 SCR01: DAP (Bit 13)                              */
#define SCI0_SCR01_DAP_Msk                (0x2000UL)                /*!< SCI0 SCR01: DAP (Bitfield-Mask: 0x01)                 */
#define SCI0_SCR01_RXE_Pos                (14UL)                    /*!< SCI0 SCR01: RXE (Bit 14)                              */
#define SCI0_SCR01_RXE_Msk                (0x4000UL)                /*!< SCI0 SCR01: RXE (Bitfield-Mask: 0x01)                 */
#define SCI0_SCR01_TXE_Pos                (15UL)                    /*!< SCI0 SCR01: TXE (Bit 15)                              */
#define SCI0_SCR01_TXE_Msk                (0x8000UL)                /*!< SCI0 SCR01: TXE (Bitfield-Mask: 0x01)                 */
/* =========================================================  SCR02  ========================================================= */
#define SCI0_SCR02_DLS_Pos                (0UL)                     /*!< SCI0 SCR02: DLS (Bit 0)                               */
#define SCI0_SCR02_DLS_Msk                (0x3UL)                   /*!< SCI0 SCR02: DLS (Bitfield-Mask: 0x03)                 */
#define SCI0_SCR02_SLC_Pos                (4UL)                     /*!< SCI0 SCR02: SLC (Bit 4)                               */
#define SCI0_SCR02_SLC_Msk                (0x30UL)                  /*!< SCI0 SCR02: SLC (Bitfield-Mask: 0x03)                 */
#define SCI0_SCR02_DIR_Pos                (7UL)                     /*!< SCI0 SCR02: DIR (Bit 7)                               */
#define SCI0_SCR02_DIR_Msk                (0x80UL)                  /*!< SCI0 SCR02: DIR (Bitfield-Mask: 0x01)                 */
#define SCI0_SCR02_PTC_Pos                (8UL)                     /*!< SCI0 SCR02: PTC (Bit 8)                               */
#define SCI0_SCR02_PTC_Msk                (0x300UL)                 /*!< SCI0 SCR02: PTC (Bitfield-Mask: 0x03)                 */
#define SCI0_SCR02_EOC_Pos                (10UL)                    /*!< SCI0 SCR02: EOC (Bit 10)                              */
#define SCI0_SCR02_EOC_Msk                (0x400UL)                 /*!< SCI0 SCR02: EOC (Bitfield-Mask: 0x01)                 */
#define SCI0_SCR02_CKP_Pos                (12UL)                    /*!< SCI0 SCR02: CKP (Bit 12)                              */
#define SCI0_SCR02_CKP_Msk                (0x1000UL)                /*!< SCI0 SCR02: CKP (Bitfield-Mask: 0x01)                 */
#define SCI0_SCR02_DAP_Pos                (13UL)                    /*!< SCI0 SCR02: DAP (Bit 13)                              */
#define SCI0_SCR02_DAP_Msk                (0x2000UL)                /*!< SCI0 SCR02: DAP (Bitfield-Mask: 0x01)                 */
#define SCI0_SCR02_RXE_Pos                (14UL)                    /*!< SCI0 SCR02: RXE (Bit 14)                              */
#define SCI0_SCR02_RXE_Msk                (0x4000UL)                /*!< SCI0 SCR02: RXE (Bitfield-Mask: 0x01)                 */
#define SCI0_SCR02_TXE_Pos                (15UL)                    /*!< SCI0 SCR02: TXE (Bit 15)                              */
#define SCI0_SCR02_TXE_Msk                (0x8000UL)                /*!< SCI0 SCR02: TXE (Bitfield-Mask: 0x01)                 */
/* =========================================================  SCR03  ========================================================= */
#define SCI0_SCR03_DLS_Pos                (0UL)                     /*!< SCI0 SCR03: DLS (Bit 0)                               */
#define SCI0_SCR03_DLS_Msk                (0x3UL)                   /*!< SCI0 SCR03: DLS (Bitfield-Mask: 0x03)                 */
#define SCI0_SCR03_SLC_Pos                (4UL)                     /*!< SCI0 SCR03: SLC (Bit 4)                               */
#define SCI0_SCR03_SLC_Msk                (0x30UL)                  /*!< SCI0 SCR03: SLC (Bitfield-Mask: 0x03)                 */
#define SCI0_SCR03_DIR_Pos                (7UL)                     /*!< SCI0 SCR03: DIR (Bit 7)                               */
#define SCI0_SCR03_DIR_Msk                (0x80UL)                  /*!< SCI0 SCR03: DIR (Bitfield-Mask: 0x01)                 */
#define SCI0_SCR03_PTC_Pos                (8UL)                     /*!< SCI0 SCR03: PTC (Bit 8)                               */
#define SCI0_SCR03_PTC_Msk                (0x300UL)                 /*!< SCI0 SCR03: PTC (Bitfield-Mask: 0x03)                 */
#define SCI0_SCR03_EOC_Pos                (10UL)                    /*!< SCI0 SCR03: EOC (Bit 10)                              */
#define SCI0_SCR03_EOC_Msk                (0x400UL)                 /*!< SCI0 SCR03: EOC (Bitfield-Mask: 0x01)                 */
#define SCI0_SCR03_CKP_Pos                (12UL)                    /*!< SCI0 SCR03: CKP (Bit 12)                              */
#define SCI0_SCR03_CKP_Msk                (0x1000UL)                /*!< SCI0 SCR03: CKP (Bitfield-Mask: 0x01)                 */
#define SCI0_SCR03_DAP_Pos                (13UL)                    /*!< SCI0 SCR03: DAP (Bit 13)                              */
#define SCI0_SCR03_DAP_Msk                (0x2000UL)                /*!< SCI0 SCR03: DAP (Bitfield-Mask: 0x01)                 */
#define SCI0_SCR03_RXE_Pos                (14UL)                    /*!< SCI0 SCR03: RXE (Bit 14)                              */
#define SCI0_SCR03_RXE_Msk                (0x4000UL)                /*!< SCI0 SCR03: RXE (Bitfield-Mask: 0x01)                 */
#define SCI0_SCR03_TXE_Pos                (15UL)                    /*!< SCI0 SCR03: TXE (Bit 15)                              */
#define SCI0_SCR03_TXE_Msk                (0x8000UL)                /*!< SCI0 SCR03: TXE (Bitfield-Mask: 0x01)                 */
/* ==========================================================  SE0  ========================================================== */
#define SCI0_SE0_SE00_Pos                 (0UL)                     /*!< SCI0 SE0: SE00 (Bit 0)                                */
#define SCI0_SE0_SE00_Msk                 (0x1UL)                   /*!< SCI0 SE0: SE00 (Bitfield-Mask: 0x01)                  */
#define SCI0_SE0_SE01_Pos                 (1UL)                     /*!< SCI0 SE0: SE01 (Bit 1)                                */
#define SCI0_SE0_SE01_Msk                 (0x2UL)                   /*!< SCI0 SE0: SE01 (Bitfield-Mask: 0x01)                  */
#define SCI0_SE0_SE02_Pos                 (2UL)                     /*!< SCI0 SE0: SE02 (Bit 2)                                */
#define SCI0_SE0_SE02_Msk                 (0x4UL)                   /*!< SCI0 SE0: SE02 (Bitfield-Mask: 0x01)                  */
#define SCI0_SE0_SE03_Pos                 (3UL)                     /*!< SCI0 SE0: SE03 (Bit 3)                                */
#define SCI0_SE0_SE03_Msk                 (0x8UL)                   /*!< SCI0 SE0: SE03 (Bitfield-Mask: 0x01)                  */
/* ==========================================================  SS0  ========================================================== */
#define SCI0_SS0_SS00_Pos                 (0UL)                     /*!< SCI0 SS0: SS00 (Bit 0)                                */
#define SCI0_SS0_SS00_Msk                 (0x1UL)                   /*!< SCI0 SS0: SS00 (Bitfield-Mask: 0x01)                  */
#define SCI0_SS0_SS01_Pos                 (1UL)                     /*!< SCI0 SS0: SS01 (Bit 1)                                */
#define SCI0_SS0_SS01_Msk                 (0x2UL)                   /*!< SCI0 SS0: SS01 (Bitfield-Mask: 0x01)                  */
#define SCI0_SS0_SS02_Pos                 (2UL)                     /*!< SCI0 SS0: SS02 (Bit 2)                                */
#define SCI0_SS0_SS02_Msk                 (0x4UL)                   /*!< SCI0 SS0: SS02 (Bitfield-Mask: 0x01)                  */
#define SCI0_SS0_SS03_Pos                 (3UL)                     /*!< SCI0 SS0: SS03 (Bit 3)                                */
#define SCI0_SS0_SS03_Msk                 (0x8UL)                   /*!< SCI0 SS0: SS03 (Bitfield-Mask: 0x01)                  */
/* ==========================================================  ST0  ========================================================== */
#define SCI0_ST0_ST00_Pos                 (0UL)                     /*!< SCI0 ST0: ST00 (Bit 0)                                */
#define SCI0_ST0_ST00_Msk                 (0x1UL)                   /*!< SCI0 ST0: ST00 (Bitfield-Mask: 0x01)                  */
#define SCI0_ST0_ST01_Pos                 (1UL)                     /*!< SCI0 ST0: ST01 (Bit 1)                                */
#define SCI0_ST0_ST01_Msk                 (0x2UL)                   /*!< SCI0 ST0: ST01 (Bitfield-Mask: 0x01)                  */
#define SCI0_ST0_ST02_Pos                 (2UL)                     /*!< SCI0 ST0: ST02 (Bit 2)                                */
#define SCI0_ST0_ST02_Msk                 (0x4UL)                   /*!< SCI0 ST0: ST02 (Bitfield-Mask: 0x01)                  */
#define SCI0_ST0_ST03_Pos                 (3UL)                     /*!< SCI0 ST0: ST03 (Bit 3)                                */
#define SCI0_ST0_ST03_Msk                 (0x8UL)                   /*!< SCI0 ST0: ST03 (Bitfield-Mask: 0x01)                  */
/* =========================================================  SPS0  ========================================================== */
#define SCI0_SPS0_PRS00_Pos               (0UL)                     /*!< SCI0 SPS0: PRS00 (Bit 0)                              */
#define SCI0_SPS0_PRS00_Msk               (0xfUL)                   /*!< SCI0 SPS0: PRS00 (Bitfield-Mask: 0x0f)                */
#define SCI0_SPS0_PRS01_Pos               (4UL)                     /*!< SCI0 SPS0: PRS01 (Bit 4)                              */
#define SCI0_SPS0_PRS01_Msk               (0xf0UL)                  /*!< SCI0 SPS0: PRS01 (Bitfield-Mask: 0x0f)                */
/* ==========================================================  SO0  ========================================================== */
#define SCI0_SO0_SO00_Pos                 (0UL)                     /*!< SCI0 SO0: SO00 (Bit 0)                                */
#define SCI0_SO0_SO00_Msk                 (0x1UL)                   /*!< SCI0 SO0: SO00 (Bitfield-Mask: 0x01)                  */
#define SCI0_SO0_SO01_Pos                 (1UL)                     /*!< SCI0 SO0: SO01 (Bit 1)                                */
#define SCI0_SO0_SO01_Msk                 (0x2UL)                   /*!< SCI0 SO0: SO01 (Bitfield-Mask: 0x01)                  */
#define SCI0_SO0_SO02_Pos                 (2UL)                     /*!< SCI0 SO0: SO02 (Bit 2)                                */
#define SCI0_SO0_SO02_Msk                 (0x4UL)                   /*!< SCI0 SO0: SO02 (Bitfield-Mask: 0x01)                  */
#define SCI0_SO0_SO03_Pos                 (3UL)                     /*!< SCI0 SO0: SO03 (Bit 3)                                */
#define SCI0_SO0_SO03_Msk                 (0x8UL)                   /*!< SCI0 SO0: SO03 (Bitfield-Mask: 0x01)                  */
#define SCI0_SO0_CKO00_Pos                (8UL)                     /*!< SCI0 SO0: CKO00 (Bit 8)                               */
#define SCI0_SO0_CKO00_Msk                (0x100UL)                 /*!< SCI0 SO0: CKO00 (Bitfield-Mask: 0x01)                 */
#define SCI0_SO0_CKO01_Pos                (9UL)                     /*!< SCI0 SO0: CKO01 (Bit 9)                               */
#define SCI0_SO0_CKO01_Msk                (0x200UL)                 /*!< SCI0 SO0: CKO01 (Bitfield-Mask: 0x01)                 */
#define SCI0_SO0_CKO02_Pos                (10UL)                    /*!< SCI0 SO0: CKO02 (Bit 10)                              */
#define SCI0_SO0_CKO02_Msk                (0x400UL)                 /*!< SCI0 SO0: CKO02 (Bitfield-Mask: 0x01)                 */
#define SCI0_SO0_CKO03_Pos                (11UL)                    /*!< SCI0 SO0: CKO03 (Bit 11)                              */
#define SCI0_SO0_CKO03_Msk                (0x800UL)                 /*!< SCI0 SO0: CKO03 (Bitfield-Mask: 0x01)                 */
/* =========================================================  SOE0  ========================================================== */
#define SCI0_SOE0_SOE00_Pos               (0UL)                     /*!< SCI0 SOE0: SOE00 (Bit 0)                              */
#define SCI0_SOE0_SOE00_Msk               (0x1UL)                   /*!< SCI0 SOE0: SOE00 (Bitfield-Mask: 0x01)                */
#define SCI0_SOE0_SOE01_Pos               (1UL)                     /*!< SCI0 SOE0: SOE01 (Bit 1)                              */
#define SCI0_SOE0_SOE01_Msk               (0x2UL)                   /*!< SCI0 SOE0: SOE01 (Bitfield-Mask: 0x01)                */
#define SCI0_SOE0_SOE02_Pos               (2UL)                     /*!< SCI0 SOE0: SOE02 (Bit 2)                              */
#define SCI0_SOE0_SOE02_Msk               (0x4UL)                   /*!< SCI0 SOE0: SOE02 (Bitfield-Mask: 0x01)                */
#define SCI0_SOE0_SOE03_Pos               (3UL)                     /*!< SCI0 SOE0: SOE03 (Bit 3)                              */
#define SCI0_SOE0_SOE03_Msk               (0x8UL)                   /*!< SCI0 SOE0: SOE03 (Bitfield-Mask: 0x01)                */
/* =========================================================  SOL0  ========================================================== */
#define SCI0_SOL0_SOL00_Pos               (0UL)                     /*!< SCI0 SOL0: SOL00 (Bit 0)                              */
#define SCI0_SOL0_SOL00_Msk               (0x1UL)                   /*!< SCI0 SOL0: SOL00 (Bitfield-Mask: 0x01)                */
#define SCI0_SOL0_SOL02_Pos               (2UL)                     /*!< SCI0 SOL0: SOL02 (Bit 2)                              */
#define SCI0_SOL0_SOL02_Msk               (0x4UL)                   /*!< SCI0 SOL0: SOL02 (Bitfield-Mask: 0x01)                */
/* =========================================================  SDR0  ========================================================== */
/* =========================================================  SDR0  ========================================================== */
/* =========================================================  SIO00  ========================================================= */
/* =========================================================  SIO01  ========================================================= */
/* =========================================================  SIO10  ========================================================= */
/* =========================================================  SIO11  ========================================================= */
/* =========================================================  TXD0  ========================================================== */
/* =========================================================  RXD0  ========================================================== */
/* =========================================================  TXD1  ========================================================== */
/* =========================================================  RXD1  ========================================================== */


/* =========================================================================================================================== */
/* ================                                           SCI1                                            ================ */
/* =========================================================================================================================== */

/* =========================================================  SSR10  ========================================================= */
#define SCI1_SSR10_OVF_Pos                (0UL)                     /*!< SCI1 SSR10: OVF (Bit 0)                               */
#define SCI1_SSR10_OVF_Msk                (0x1UL)                   /*!< SCI1 SSR10: OVF (Bitfield-Mask: 0x01)                 */
#define SCI1_SSR10_PEF_Pos                (1UL)                     /*!< SCI1 SSR10: PEF (Bit 1)                               */
#define SCI1_SSR10_PEF_Msk                (0x2UL)                   /*!< SCI1 SSR10: PEF (Bitfield-Mask: 0x01)                 */
#define SCI1_SSR10_FEF_Pos                (2UL)                     /*!< SCI1 SSR10: FEF (Bit 2)                               */
#define SCI1_SSR10_FEF_Msk                (0x4UL)                   /*!< SCI1 SSR10: FEF (Bitfield-Mask: 0x01)                 */
#define SCI1_SSR10_BFF_Pos                (5UL)                     /*!< SCI1 SSR10: BFF (Bit 5)                               */
#define SCI1_SSR10_BFF_Msk                (0x20UL)                  /*!< SCI1 SSR10: BFF (Bitfield-Mask: 0x01)                 */
#define SCI1_SSR10_TSF_Pos                (6UL)                     /*!< SCI1 SSR10: TSF (Bit 6)                               */
#define SCI1_SSR10_TSF_Msk                (0x40UL)                  /*!< SCI1 SSR10: TSF (Bitfield-Mask: 0x01)                 */
/* =========================================================  SSR11  ========================================================= */
#define SCI1_SSR11_OVF_Pos                (0UL)                     /*!< SCI1 SSR11: OVF (Bit 0)                               */
#define SCI1_SSR11_OVF_Msk                (0x1UL)                   /*!< SCI1 SSR11: OVF (Bitfield-Mask: 0x01)                 */
#define SCI1_SSR11_PEF_Pos                (1UL)                     /*!< SCI1 SSR11: PEF (Bit 1)                               */
#define SCI1_SSR11_PEF_Msk                (0x2UL)                   /*!< SCI1 SSR11: PEF (Bitfield-Mask: 0x01)                 */
#define SCI1_SSR11_FEF_Pos                (2UL)                     /*!< SCI1 SSR11: FEF (Bit 2)                               */
#define SCI1_SSR11_FEF_Msk                (0x4UL)                   /*!< SCI1 SSR11: FEF (Bitfield-Mask: 0x01)                 */
#define SCI1_SSR11_BFF_Pos                (5UL)                     /*!< SCI1 SSR11: BFF (Bit 5)                               */
#define SCI1_SSR11_BFF_Msk                (0x20UL)                  /*!< SCI1 SSR11: BFF (Bitfield-Mask: 0x01)                 */
#define SCI1_SSR11_TSF_Pos                (6UL)                     /*!< SCI1 SSR11: TSF (Bit 6)                               */
#define SCI1_SSR11_TSF_Msk                (0x40UL)                  /*!< SCI1 SSR11: TSF (Bitfield-Mask: 0x01)                 */
/* =========================================================  SIR10  ========================================================= */
#define SCI1_SIR10_OVCT_Pos               (0UL)                     /*!< SCI1 SIR10: OVCT (Bit 0)                              */
#define SCI1_SIR10_OVCT_Msk               (0x1UL)                   /*!< SCI1 SIR10: OVCT (Bitfield-Mask: 0x01)                */
#define SCI1_SIR10_PECT_Pos               (1UL)                     /*!< SCI1 SIR10: PECT (Bit 1)                              */
#define SCI1_SIR10_PECT_Msk               (0x2UL)                   /*!< SCI1 SIR10: PECT (Bitfield-Mask: 0x01)                */
#define SCI1_SIR10_FECT_Pos               (2UL)                     /*!< SCI1 SIR10: FECT (Bit 2)                              */
#define SCI1_SIR10_FECT_Msk               (0x4UL)                   /*!< SCI1 SIR10: FECT (Bitfield-Mask: 0x01)                */
/* =========================================================  SIR11  ========================================================= */
#define SCI1_SIR11_OVCT_Pos               (0UL)                     /*!< SCI1 SIR11: OVCT (Bit 0)                              */
#define SCI1_SIR11_OVCT_Msk               (0x1UL)                   /*!< SCI1 SIR11: OVCT (Bitfield-Mask: 0x01)                */
#define SCI1_SIR11_PECT_Pos               (1UL)                     /*!< SCI1 SIR11: PECT (Bit 1)                              */
#define SCI1_SIR11_PECT_Msk               (0x2UL)                   /*!< SCI1 SIR11: PECT (Bitfield-Mask: 0x01)                */
#define SCI1_SIR11_FECT_Pos               (2UL)                     /*!< SCI1 SIR11: FECT (Bit 2)                              */
#define SCI1_SIR11_FECT_Msk               (0x4UL)                   /*!< SCI1 SIR11: FECT (Bitfield-Mask: 0x01)                */
/* =========================================================  SMR10  ========================================================= */
#define SCI1_SMR10_MD_Pos                 (0UL)                     /*!< SCI1 SMR10: MD (Bit 0)                                */
#define SCI1_SMR10_MD_Msk                 (0xfUL)                   /*!< SCI1 SMR10: MD (Bitfield-Mask: 0x0f)                  */
#define SCI1_SMR10_SIS_Pos                (6UL)                     /*!< SCI1 SMR10: SIS (Bit 6)                               */
#define SCI1_SMR10_SIS_Msk                (0x40UL)                  /*!< SCI1 SMR10: SIS (Bitfield-Mask: 0x01)                 */
#define SCI1_SMR10_STS_Pos                (8UL)                     /*!< SCI1 SMR10: STS (Bit 8)                               */
#define SCI1_SMR10_STS_Msk                (0x100UL)                 /*!< SCI1 SMR10: STS (Bitfield-Mask: 0x01)                 */
#define SCI1_SMR10_CCS_Pos                (14UL)                    /*!< SCI1 SMR10: CCS (Bit 14)                              */
#define SCI1_SMR10_CCS_Msk                (0x4000UL)                /*!< SCI1 SMR10: CCS (Bitfield-Mask: 0x01)                 */
#define SCI1_SMR10_CKS_Pos                (15UL)                    /*!< SCI1 SMR10: CKS (Bit 15)                              */
#define SCI1_SMR10_CKS_Msk                (0x8000UL)                /*!< SCI1 SMR10: CKS (Bitfield-Mask: 0x01)                 */
/* =========================================================  SMR11  ========================================================= */
#define SCI1_SMR11_MD_Pos                 (0UL)                     /*!< SCI1 SMR11: MD (Bit 0)                                */
#define SCI1_SMR11_MD_Msk                 (0xfUL)                   /*!< SCI1 SMR11: MD (Bitfield-Mask: 0x0f)                  */
#define SCI1_SMR11_SIS_Pos                (6UL)                     /*!< SCI1 SMR11: SIS (Bit 6)                               */
#define SCI1_SMR11_SIS_Msk                (0x40UL)                  /*!< SCI1 SMR11: SIS (Bitfield-Mask: 0x01)                 */
#define SCI1_SMR11_STS_Pos                (8UL)                     /*!< SCI1 SMR11: STS (Bit 8)                               */
#define SCI1_SMR11_STS_Msk                (0x100UL)                 /*!< SCI1 SMR11: STS (Bitfield-Mask: 0x01)                 */
#define SCI1_SMR11_CCS_Pos                (14UL)                    /*!< SCI1 SMR11: CCS (Bit 14)                              */
#define SCI1_SMR11_CCS_Msk                (0x4000UL)                /*!< SCI1 SMR11: CCS (Bitfield-Mask: 0x01)                 */
#define SCI1_SMR11_CKS_Pos                (15UL)                    /*!< SCI1 SMR11: CKS (Bit 15)                              */
#define SCI1_SMR11_CKS_Msk                (0x8000UL)                /*!< SCI1 SMR11: CKS (Bitfield-Mask: 0x01)                 */
/* =========================================================  SCR10  ========================================================= */
#define SCI1_SCR10_DLS_Pos                (0UL)                     /*!< SCI1 SCR10: DLS (Bit 0)                               */
#define SCI1_SCR10_DLS_Msk                (0x3UL)                   /*!< SCI1 SCR10: DLS (Bitfield-Mask: 0x03)                 */
#define SCI1_SCR10_SLC_Pos                (4UL)                     /*!< SCI1 SCR10: SLC (Bit 4)                               */
#define SCI1_SCR10_SLC_Msk                (0x30UL)                  /*!< SCI1 SCR10: SLC (Bitfield-Mask: 0x03)                 */
#define SCI1_SCR10_DIR_Pos                (7UL)                     /*!< SCI1 SCR10: DIR (Bit 7)                               */
#define SCI1_SCR10_DIR_Msk                (0x80UL)                  /*!< SCI1 SCR10: DIR (Bitfield-Mask: 0x01)                 */
#define SCI1_SCR10_PTC_Pos                (8UL)                     /*!< SCI1 SCR10: PTC (Bit 8)                               */
#define SCI1_SCR10_PTC_Msk                (0x300UL)                 /*!< SCI1 SCR10: PTC (Bitfield-Mask: 0x03)                 */
#define SCI1_SCR10_EOC_Pos                (10UL)                    /*!< SCI1 SCR10: EOC (Bit 10)                              */
#define SCI1_SCR10_EOC_Msk                (0x400UL)                 /*!< SCI1 SCR10: EOC (Bitfield-Mask: 0x01)                 */
#define SCI1_SCR10_CKP_Pos                (12UL)                    /*!< SCI1 SCR10: CKP (Bit 12)                              */
#define SCI1_SCR10_CKP_Msk                (0x1000UL)                /*!< SCI1 SCR10: CKP (Bitfield-Mask: 0x01)                 */
#define SCI1_SCR10_DAP_Pos                (13UL)                    /*!< SCI1 SCR10: DAP (Bit 13)                              */
#define SCI1_SCR10_DAP_Msk                (0x2000UL)                /*!< SCI1 SCR10: DAP (Bitfield-Mask: 0x01)                 */
#define SCI1_SCR10_RXE_Pos                (14UL)                    /*!< SCI1 SCR10: RXE (Bit 14)                              */
#define SCI1_SCR10_RXE_Msk                (0x4000UL)                /*!< SCI1 SCR10: RXE (Bitfield-Mask: 0x01)                 */
#define SCI1_SCR10_TXE_Pos                (15UL)                    /*!< SCI1 SCR10: TXE (Bit 15)                              */
#define SCI1_SCR10_TXE_Msk                (0x8000UL)                /*!< SCI1 SCR10: TXE (Bitfield-Mask: 0x01)                 */
/* =========================================================  SCR11  ========================================================= */
#define SCI1_SCR11_DLS_Pos                (0UL)                     /*!< SCI1 SCR11: DLS (Bit 0)                               */
#define SCI1_SCR11_DLS_Msk                (0x3UL)                   /*!< SCI1 SCR11: DLS (Bitfield-Mask: 0x03)                 */
#define SCI1_SCR11_SLC_Pos                (4UL)                     /*!< SCI1 SCR11: SLC (Bit 4)                               */
#define SCI1_SCR11_SLC_Msk                (0x30UL)                  /*!< SCI1 SCR11: SLC (Bitfield-Mask: 0x03)                 */
#define SCI1_SCR11_DIR_Pos                (7UL)                     /*!< SCI1 SCR11: DIR (Bit 7)                               */
#define SCI1_SCR11_DIR_Msk                (0x80UL)                  /*!< SCI1 SCR11: DIR (Bitfield-Mask: 0x01)                 */
#define SCI1_SCR11_PTC_Pos                (8UL)                     /*!< SCI1 SCR11: PTC (Bit 8)                               */
#define SCI1_SCR11_PTC_Msk                (0x300UL)                 /*!< SCI1 SCR11: PTC (Bitfield-Mask: 0x03)                 */
#define SCI1_SCR11_EOC_Pos                (10UL)                    /*!< SCI1 SCR11: EOC (Bit 10)                              */
#define SCI1_SCR11_EOC_Msk                (0x400UL)                 /*!< SCI1 SCR11: EOC (Bitfield-Mask: 0x01)                 */
#define SCI1_SCR11_CKP_Pos                (12UL)                    /*!< SCI1 SCR11: CKP (Bit 12)                              */
#define SCI1_SCR11_CKP_Msk                (0x1000UL)                /*!< SCI1 SCR11: CKP (Bitfield-Mask: 0x01)                 */
#define SCI1_SCR11_DAP_Pos                (13UL)                    /*!< SCI1 SCR11: DAP (Bit 13)                              */
#define SCI1_SCR11_DAP_Msk                (0x2000UL)                /*!< SCI1 SCR11: DAP (Bitfield-Mask: 0x01)                 */
#define SCI1_SCR11_RXE_Pos                (14UL)                    /*!< SCI1 SCR11: RXE (Bit 14)                              */
#define SCI1_SCR11_RXE_Msk                (0x4000UL)                /*!< SCI1 SCR11: RXE (Bitfield-Mask: 0x01)                 */
#define SCI1_SCR11_TXE_Pos                (15UL)                    /*!< SCI1 SCR11: TXE (Bit 15)                              */
#define SCI1_SCR11_TXE_Msk                (0x8000UL)                /*!< SCI1 SCR11: TXE (Bitfield-Mask: 0x01)                 */
/* ==========================================================  SE1  ========================================================== */
#define SCI1_SE1_SE10_Pos                 (0UL)                     /*!< SCI1 SE1: SE10 (Bit 0)                                */
#define SCI1_SE1_SE10_Msk                 (0x1UL)                   /*!< SCI1 SE1: SE10 (Bitfield-Mask: 0x01)                  */
#define SCI1_SE1_SE11_Pos                 (1UL)                     /*!< SCI1 SE1: SE11 (Bit 1)                                */
#define SCI1_SE1_SE11_Msk                 (0x2UL)                   /*!< SCI1 SE1: SE11 (Bitfield-Mask: 0x01)                  */
/* ==========================================================  SS1  ========================================================== */
#define SCI1_SS1_SS10_Pos                 (0UL)                     /*!< SCI1 SS1: SS10 (Bit 0)                                */
#define SCI1_SS1_SS10_Msk                 (0x1UL)                   /*!< SCI1 SS1: SS10 (Bitfield-Mask: 0x01)                  */
#define SCI1_SS1_SS11_Pos                 (1UL)                     /*!< SCI1 SS1: SS11 (Bit 1)                                */
#define SCI1_SS1_SS11_Msk                 (0x2UL)                   /*!< SCI1 SS1: SS11 (Bitfield-Mask: 0x01)                  */
/* ==========================================================  ST1  ========================================================== */
#define SCI1_ST1_ST10_Pos                 (0UL)                     /*!< SCI1 ST1: ST10 (Bit 0)                                */
#define SCI1_ST1_ST10_Msk                 (0x1UL)                   /*!< SCI1 ST1: ST10 (Bitfield-Mask: 0x01)                  */
#define SCI1_ST1_ST11_Pos                 (1UL)                     /*!< SCI1 ST1: ST11 (Bit 1)                                */
#define SCI1_ST1_ST11_Msk                 (0x2UL)                   /*!< SCI1 ST1: ST11 (Bitfield-Mask: 0x01)                  */
/* =========================================================  SPS1  ========================================================== */
#define SCI1_SPS1_PRS10_Pos               (0UL)                     /*!< SCI1 SPS1: PRS10 (Bit 0)                              */
#define SCI1_SPS1_PRS10_Msk               (0xfUL)                   /*!< SCI1 SPS1: PRS10 (Bitfield-Mask: 0x0f)                */
#define SCI1_SPS1_PRS11_Pos               (4UL)                     /*!< SCI1 SPS1: PRS11 (Bit 4)                              */
#define SCI1_SPS1_PRS11_Msk               (0xf0UL)                  /*!< SCI1 SPS1: PRS11 (Bitfield-Mask: 0x0f)                */
/* ==========================================================  SO1  ========================================================== */
#define SCI1_SO1_SO10_Pos                 (0UL)                     /*!< SCI1 SO1: SO10 (Bit 0)                                */
#define SCI1_SO1_SO10_Msk                 (0x1UL)                   /*!< SCI1 SO1: SO10 (Bitfield-Mask: 0x01)                  */
#define SCI1_SO1_SO11_Pos                 (1UL)                     /*!< SCI1 SO1: SO11 (Bit 1)                                */
#define SCI1_SO1_SO11_Msk                 (0x2UL)                   /*!< SCI1 SO1: SO11 (Bitfield-Mask: 0x01)                  */
#define SCI1_SO1_CKO10_Pos                (8UL)                     /*!< SCI1 SO1: CKO10 (Bit 8)                               */
#define SCI1_SO1_CKO10_Msk                (0x100UL)                 /*!< SCI1 SO1: CKO10 (Bitfield-Mask: 0x01)                 */
#define SCI1_SO1_CKO11_Pos                (9UL)                     /*!< SCI1 SO1: CKO11 (Bit 9)                               */
#define SCI1_SO1_CKO11_Msk                (0x200UL)                 /*!< SCI1 SO1: CKO11 (Bitfield-Mask: 0x01)                 */
/* =========================================================  SOE1  ========================================================== */
#define SCI1_SOE1_SOE10_Pos               (0UL)                     /*!< SCI1 SOE1: SOE10 (Bit 0)                              */
#define SCI1_SOE1_SOE10_Msk               (0x1UL)                   /*!< SCI1 SOE1: SOE10 (Bitfield-Mask: 0x01)                */
#define SCI1_SOE1_SOE11_Pos               (1UL)                     /*!< SCI1 SOE1: SOE11 (Bit 1)                              */
#define SCI1_SOE1_SOE11_Msk               (0x2UL)                   /*!< SCI1 SOE1: SOE11 (Bitfield-Mask: 0x01)                */
/* =========================================================  SOL1  ========================================================== */
#define SCI1_SOL1_SOL10_Pos               (0UL)                     /*!< SCI1 SOL1: SOL10 (Bit 0)                              */
#define SCI1_SOL1_SOL10_Msk               (0x1UL)                   /*!< SCI1 SOL1: SOL10 (Bitfield-Mask: 0x01)                */
/* =========================================================  SDR1  ========================================================== */
/* =========================================================  SIO20  ========================================================= */
/* =========================================================  SIO21  ========================================================= */
/* =========================================================  TXD2  ========================================================== */
/* =========================================================  RXD2  ========================================================== */


/* =========================================================================================================================== */
/* ================                                            SPI                                            ================ */
/* =========================================================================================================================== */

/* =========================================================  SPIM  ========================================================== */
#define SPI_SPIM_SPTF_Pos                 (0UL)                     /*!< SPI SPIM: SPTF (Bit 0)                                */
#define SPI_SPIM_SPTF_Msk                 (0x1UL)                   /*!< SPI SPIM: SPTF (Bitfield-Mask: 0x01)                  */
#define SPI_SPIM_SDRIF_Pos                (1UL)                     /*!< SPI SPIM: SDRIF (Bit 1)                               */
#define SPI_SPIM_SDRIF_Msk                (0x2UL)                   /*!< SPI SPIM: SDRIF (Bitfield-Mask: 0x01)                 */
#define SPI_SPIM_DLS_Pos                  (2UL)                     /*!< SPI SPIM: DLS (Bit 2)                                 */
#define SPI_SPIM_DLS_Msk                  (0x4UL)                   /*!< SPI SPIM: DLS (Bitfield-Mask: 0x01)                   */
#define SPI_SPIM_INTMD_Pos                (3UL)                     /*!< SPI SPIM: INTMD (Bit 3)                               */
#define SPI_SPIM_INTMD_Msk                (0x8UL)                   /*!< SPI SPIM: INTMD (Bitfield-Mask: 0x01)                 */
#define SPI_SPIM_DIR_Pos                  (4UL)                     /*!< SPI SPIM: DIR (Bit 4)                                 */
#define SPI_SPIM_DIR_Msk                  (0x10UL)                  /*!< SPI SPIM: DIR (Bitfield-Mask: 0x01)                   */
#define SPI_SPIM_NSSE_Pos                 (5UL)                     /*!< SPI SPIM: NSSE (Bit 5)                                */
#define SPI_SPIM_NSSE_Msk                 (0x20UL)                  /*!< SPI SPIM: NSSE (Bitfield-Mask: 0x01)                  */
#define SPI_SPIM_TRMD_Pos                 (6UL)                     /*!< SPI SPIM: TRMD (Bit 6)                                */
#define SPI_SPIM_TRMD_Msk                 (0x40UL)                  /*!< SPI SPIM: TRMD (Bitfield-Mask: 0x01)                  */
#define SPI_SPIM_SPIE_Pos                 (7UL)                     /*!< SPI SPIM: SPIE (Bit 7)                                */
#define SPI_SPIM_SPIE_Msk                 (0x80UL)                  /*!< SPI SPIM: SPIE (Bitfield-Mask: 0x01)                  */
/* =========================================================  SPIC  ========================================================== */
#define SPI_SPIC_CKS_Pos                  (0UL)                     /*!< SPI SPIC: CKS (Bit 0)                                 */
#define SPI_SPIC_CKS_Msk                  (0x7UL)                   /*!< SPI SPIC: CKS (Bitfield-Mask: 0x07)                   */
#define SPI_SPIC_DAP_Pos                  (3UL)                     /*!< SPI SPIC: DAP (Bit 3)                                 */
#define SPI_SPIC_DAP_Msk                  (0x8UL)                   /*!< SPI SPIC: DAP (Bitfield-Mask: 0x01)                   */
#define SPI_SPIC_CKP_Pos                  (4UL)                     /*!< SPI SPIC: CKP (Bit 4)                                 */
#define SPI_SPIC_CKP_Msk                  (0x10UL)                  /*!< SPI SPIC: CKP (Bitfield-Mask: 0x01)                   */
/* =========================================================  SDRO  ========================================================== */
/* =========================================================  SDRI  ========================================================== */


/* =========================================================================================================================== */
/* ================                                           IICA                                            ================ */
/* =========================================================================================================================== */

/* =======================================================  IICCTL00  ======================================================== */
#define IICA_IICCTL00_SPT_Pos             (0UL)                     /*!< IICA IICCTL00: SPT (Bit 0)                            */
#define IICA_IICCTL00_SPT_Msk             (0x1UL)                   /*!< IICA IICCTL00: SPT (Bitfield-Mask: 0x01)              */
#define IICA_IICCTL00_STT_Pos             (1UL)                     /*!< IICA IICCTL00: STT (Bit 1)                            */
#define IICA_IICCTL00_STT_Msk             (0x2UL)                   /*!< IICA IICCTL00: STT (Bitfield-Mask: 0x01)              */
#define IICA_IICCTL00_ACKE_Pos            (2UL)                     /*!< IICA IICCTL00: ACKE (Bit 2)                           */
#define IICA_IICCTL00_ACKE_Msk            (0x4UL)                   /*!< IICA IICCTL00: ACKE (Bitfield-Mask: 0x01)             */
#define IICA_IICCTL00_WTIM_Pos            (3UL)                     /*!< IICA IICCTL00: WTIM (Bit 3)                           */
#define IICA_IICCTL00_WTIM_Msk            (0x8UL)                   /*!< IICA IICCTL00: WTIM (Bitfield-Mask: 0x01)             */
#define IICA_IICCTL00_SPIE_Pos            (4UL)                     /*!< IICA IICCTL00: SPIE (Bit 4)                           */
#define IICA_IICCTL00_SPIE_Msk            (0x10UL)                  /*!< IICA IICCTL00: SPIE (Bitfield-Mask: 0x01)             */
#define IICA_IICCTL00_WREL_Pos            (5UL)                     /*!< IICA IICCTL00: WREL (Bit 5)                           */
#define IICA_IICCTL00_WREL_Msk            (0x20UL)                  /*!< IICA IICCTL00: WREL (Bitfield-Mask: 0x01)             */
#define IICA_IICCTL00_LREL_Pos            (6UL)                     /*!< IICA IICCTL00: LREL (Bit 6)                           */
#define IICA_IICCTL00_LREL_Msk            (0x40UL)                  /*!< IICA IICCTL00: LREL (Bitfield-Mask: 0x01)             */
#define IICA_IICCTL00_IICE_Pos            (7UL)                     /*!< IICA IICCTL00: IICE (Bit 7)                           */
#define IICA_IICCTL00_IICE_Msk            (0x80UL)                  /*!< IICA IICCTL00: IICE (Bitfield-Mask: 0x01)             */
/* =======================================================  IICCTL01  ======================================================== */
#define IICA_IICCTL01_PRS_Pos             (0UL)                     /*!< IICA IICCTL01: PRS (Bit 0)                            */
#define IICA_IICCTL01_PRS_Msk             (0x1UL)                   /*!< IICA IICCTL01: PRS (Bitfield-Mask: 0x01)              */
#define IICA_IICCTL01_DFC_Pos             (2UL)                     /*!< IICA IICCTL01: DFC (Bit 2)                            */
#define IICA_IICCTL01_DFC_Msk             (0x4UL)                   /*!< IICA IICCTL01: DFC (Bitfield-Mask: 0x01)              */
#define IICA_IICCTL01_SMC_Pos             (3UL)                     /*!< IICA IICCTL01: SMC (Bit 3)                            */
#define IICA_IICCTL01_SMC_Msk             (0x8UL)                   /*!< IICA IICCTL01: SMC (Bitfield-Mask: 0x01)              */
#define IICA_IICCTL01_DAD_Pos             (4UL)                     /*!< IICA IICCTL01: DAD (Bit 4)                            */
#define IICA_IICCTL01_DAD_Msk             (0x10UL)                  /*!< IICA IICCTL01: DAD (Bitfield-Mask: 0x01)              */
#define IICA_IICCTL01_CLD_Pos             (5UL)                     /*!< IICA IICCTL01: CLD (Bit 5)                            */
#define IICA_IICCTL01_CLD_Msk             (0x20UL)                  /*!< IICA IICCTL01: CLD (Bitfield-Mask: 0x01)              */
#define IICA_IICCTL01_WUP_Pos             (7UL)                     /*!< IICA IICCTL01: WUP (Bit 7)                            */
#define IICA_IICCTL01_WUP_Msk             (0x80UL)                  /*!< IICA IICCTL01: WUP (Bitfield-Mask: 0x01)              */
/* ========================================================  IICWL0  ========================================================= */
/* ========================================================  IICWH0  ========================================================= */
/* =========================================================  SVA0  ========================================================== */
/* =========================================================  IICA0  ========================================================= */
/* =========================================================  IICS0  ========================================================= */
#define IICA_IICS0_MSTS_Pos               (7UL)                     /*!< IICA IICS0: MSTS (Bit 7)                              */
#define IICA_IICS0_MSTS_Msk               (0x80UL)                  /*!< IICA IICS0: MSTS (Bitfield-Mask: 0x01)                */
#define IICA_IICS0_ALD_Pos                (6UL)                     /*!< IICA IICS0: ALD (Bit 6)                               */
#define IICA_IICS0_ALD_Msk                (0x40UL)                  /*!< IICA IICS0: ALD (Bitfield-Mask: 0x01)                 */
#define IICA_IICS0_EXC_Pos                (5UL)                     /*!< IICA IICS0: EXC (Bit 5)                               */
#define IICA_IICS0_EXC_Msk                (0x20UL)                  /*!< IICA IICS0: EXC (Bitfield-Mask: 0x01)                 */
#define IICA_IICS0_COI_Pos                (4UL)                     /*!< IICA IICS0: COI (Bit 4)                               */
#define IICA_IICS0_COI_Msk                (0x10UL)                  /*!< IICA IICS0: COI (Bitfield-Mask: 0x01)                 */
#define IICA_IICS0_TRC_Pos                (3UL)                     /*!< IICA IICS0: TRC (Bit 3)                               */
#define IICA_IICS0_TRC_Msk                (0x8UL)                   /*!< IICA IICS0: TRC (Bitfield-Mask: 0x01)                 */
#define IICA_IICS0_ACKD_Pos               (2UL)                     /*!< IICA IICS0: ACKD (Bit 2)                              */
#define IICA_IICS0_ACKD_Msk               (0x4UL)                   /*!< IICA IICS0: ACKD (Bitfield-Mask: 0x01)                */
#define IICA_IICS0_STD_Pos                (1UL)                     /*!< IICA IICS0: STD (Bit 1)                               */
#define IICA_IICS0_STD_Msk                (0x2UL)                   /*!< IICA IICS0: STD (Bitfield-Mask: 0x01)                 */
#define IICA_IICS0_SPD_Pos                (0UL)                     /*!< IICA IICS0: SPD (Bit 0)                               */
#define IICA_IICS0_SPD_Msk                (0x1UL)                   /*!< IICA IICS0: SPD (Bitfield-Mask: 0x01)                 */
/* =========================================================  IICF0  ========================================================= */
#define IICA_IICF0_STCF_Pos               (7UL)                     /*!< IICA IICF0: STCF (Bit 7)                              */
#define IICA_IICF0_STCF_Msk               (0x80UL)                  /*!< IICA IICF0: STCF (Bitfield-Mask: 0x01)                */
#define IICA_IICF0_IICBSY_Pos             (6UL)                     /*!< IICA IICF0: IICBSY (Bit 6)                            */
#define IICA_IICF0_IICBSY_Msk             (0x40UL)                  /*!< IICA IICF0: IICBSY (Bitfield-Mask: 0x01)              */
#define IICA_IICF0_STCEN_Pos              (1UL)                     /*!< IICA IICF0: STCEN (Bit 1)                             */
#define IICA_IICF0_STCEN_Msk              (0x2UL)                   /*!< IICA IICF0: STCEN (Bitfield-Mask: 0x01)               */
#define IICA_IICF0_IICRSV_Pos             (0UL)                     /*!< IICA IICF0: IICRSV (Bit 0)                            */
#define IICA_IICF0_IICRSV_Msk             (0x1UL)                   /*!< IICA IICF0: IICRSV (Bitfield-Mask: 0x01)              */


/* =========================================================================================================================== */
/* ================                                           IRDA                                            ================ */
/* =========================================================================================================================== */

/* =========================================================  IRCR  ========================================================== */
#define IRDA_IRCR_IRRXINV_Pos             (2UL)                     /*!< IRDA IRCR: IRRXINV (Bit 2)                            */
#define IRDA_IRCR_IRRXINV_Msk             (0x4UL)                   /*!< IRDA IRCR: IRRXINV (Bitfield-Mask: 0x01)              */
#define IRDA_IRCR_IRTXINV_Pos             (3UL)                     /*!< IRDA IRCR: IRTXINV (Bit 3)                            */
#define IRDA_IRCR_IRTXINV_Msk             (0x8UL)                   /*!< IRDA IRCR: IRTXINV (Bitfield-Mask: 0x01)              */
#define IRDA_IRCR_IRCKS_Pos               (4UL)                     /*!< IRDA IRCR: IRCKS (Bit 4)                              */
#define IRDA_IRCR_IRCKS_Msk               (0x70UL)                  /*!< IRDA IRCR: IRCKS (Bitfield-Mask: 0x07)                */
#define IRDA_IRCR_IRE_Pos                 (7UL)                     /*!< IRDA IRCR: IRE (Bit 7)                                */
#define IRDA_IRCR_IRE_Msk                 (0x80UL)                  /*!< IRDA IRCR: IRE (Bitfield-Mask: 0x01)                  */


/* =========================================================================================================================== */
/* ================                                            DMA                                            ================ */
/* =========================================================================================================================== */

/* =========================================================  DMAEN  ========================================================= */
/* ========================================================  DMABAR  ========================================================= */
/* ========================================================  IFPRCR  ========================================================= */
/* =========================================================  DMAIF  ========================================================= */


/* =========================================================================================================================== */
/* ================                                          DMAVEC                                           ================ */
/* =========================================================================================================================== */

/* ==========================================================  VEC  ========================================================== */


/* =========================================================================================================================== */
/* ================                                            ELC                                            ================ */
/* =========================================================================================================================== */

/* =======================================================  ELSELR00  ======================================================== */
/* =======================================================  ELSELR01  ======================================================== */
/* =======================================================  ELSELR02  ======================================================== */
/* =======================================================  ELSELR03  ======================================================== */
/* =======================================================  ELSELR04  ======================================================== */
/* =======================================================  ELSELR05  ======================================================== */
/* =======================================================  ELSELR06  ======================================================== */
/* =======================================================  ELSELR07  ======================================================== */
/* =======================================================  ELSELR08  ======================================================== */
/* =======================================================  ELSELR09  ======================================================== */
/* =======================================================  ELSELR10  ======================================================== */
/* =======================================================  ELSELR11  ======================================================== */
/* =======================================================  ELSELR12  ======================================================== */
/* =======================================================  ELSELR13  ======================================================== */
/* =======================================================  ELSELR14  ======================================================== */


/* =========================================================================================================================== */
/* ================                                            INT                                            ================ */
/* =========================================================================================================================== */



/* =========================================================================================================================== */
/* ================                                           INTM                                            ================ */
/* =========================================================================================================================== */

/* =========================================================  EGP0  ========================================================== */
#define INTM_EGP0_EGP0_Pos                (0UL)                     /*!< INTM EGP0: EGP0 (Bit 0)                               */
#define INTM_EGP0_EGP0_Msk                (0x1UL)                   /*!< INTM EGP0: EGP0 (Bitfield-Mask: 0x01)                 */
#define INTM_EGP0_EGP1_Pos                (1UL)                     /*!< INTM EGP0: EGP1 (Bit 1)                               */
#define INTM_EGP0_EGP1_Msk                (0x2UL)                   /*!< INTM EGP0: EGP1 (Bitfield-Mask: 0x01)                 */
#define INTM_EGP0_EGP2_Pos                (2UL)                     /*!< INTM EGP0: EGP2 (Bit 2)                               */
#define INTM_EGP0_EGP2_Msk                (0x4UL)                   /*!< INTM EGP0: EGP2 (Bitfield-Mask: 0x01)                 */
#define INTM_EGP0_EGP3_Pos                (3UL)                     /*!< INTM EGP0: EGP3 (Bit 3)                               */
#define INTM_EGP0_EGP3_Msk                (0x8UL)                   /*!< INTM EGP0: EGP3 (Bitfield-Mask: 0x01)                 */
/* =========================================================  EGN0  ========================================================== */
#define INTM_EGN0_EGN0_Pos                (0UL)                     /*!< INTM EGN0: EGN0 (Bit 0)                               */
#define INTM_EGN0_EGN0_Msk                (0x1UL)                   /*!< INTM EGN0: EGN0 (Bitfield-Mask: 0x01)                 */
#define INTM_EGN0_EGN1_Pos                (1UL)                     /*!< INTM EGN0: EGN1 (Bit 1)                               */
#define INTM_EGN0_EGN1_Msk                (0x2UL)                   /*!< INTM EGN0: EGN1 (Bitfield-Mask: 0x01)                 */
#define INTM_EGN0_EGN2_Pos                (2UL)                     /*!< INTM EGN0: EGN2 (Bit 2)                               */
#define INTM_EGN0_EGN2_Msk                (0x4UL)                   /*!< INTM EGN0: EGN2 (Bitfield-Mask: 0x01)                 */
#define INTM_EGN0_EGN3_Pos                (3UL)                     /*!< INTM EGN0: EGN3 (Bit 3)                               */
#define INTM_EGN0_EGN3_Msk                (0x8UL)                   /*!< INTM EGN0: EGN3 (Bitfield-Mask: 0x01)                 */


/* =========================================================================================================================== */
/* ================                                            KEY                                            ================ */
/* =========================================================================================================================== */

/* ==========================================================  KRM  ========================================================== */


/* =========================================================================================================================== */
/* ================                                           MISC                                            ================ */
/* =========================================================================================================================== */

/* =========================================================  NFEN0  ========================================================= */
#define MISC_NFEN0_SNFEN00_Pos            (0UL)                     /*!< MISC NFEN0: SNFEN00 (Bit 0)                           */
#define MISC_NFEN0_SNFEN00_Msk            (0x1UL)                   /*!< MISC NFEN0: SNFEN00 (Bitfield-Mask: 0x01)             */
#define MISC_NFEN0_SNFEN10_Pos            (2UL)                     /*!< MISC NFEN0: SNFEN10 (Bit 2)                           */
#define MISC_NFEN0_SNFEN10_Msk            (0x4UL)                   /*!< MISC NFEN0: SNFEN10 (Bitfield-Mask: 0x01)             */
#define MISC_NFEN0_SNFEN20_Pos            (4UL)                     /*!< MISC NFEN0: SNFEN20 (Bit 4)                           */
#define MISC_NFEN0_SNFEN20_Msk            (0x10UL)                  /*!< MISC NFEN0: SNFEN20 (Bitfield-Mask: 0x01)             */
/* =========================================================  NFEN1  ========================================================= */
#define MISC_NFEN1_TNFEN00_Pos            (0UL)                     /*!< MISC NFEN1: TNFEN00 (Bit 0)                           */
#define MISC_NFEN1_TNFEN00_Msk            (0x1UL)                   /*!< MISC NFEN1: TNFEN00 (Bitfield-Mask: 0x01)             */
#define MISC_NFEN1_TNFEN01_Pos            (1UL)                     /*!< MISC NFEN1: TNFEN01 (Bit 1)                           */
#define MISC_NFEN1_TNFEN01_Msk            (0x2UL)                   /*!< MISC NFEN1: TNFEN01 (Bitfield-Mask: 0x01)             */
#define MISC_NFEN1_TNFEN02_Pos            (2UL)                     /*!< MISC NFEN1: TNFEN02 (Bit 2)                           */
#define MISC_NFEN1_TNFEN02_Msk            (0x4UL)                   /*!< MISC NFEN1: TNFEN02 (Bitfield-Mask: 0x01)             */
#define MISC_NFEN1_TNFEN03_Pos            (3UL)                     /*!< MISC NFEN1: TNFEN03 (Bit 3)                           */
#define MISC_NFEN1_TNFEN03_Msk            (0x8UL)                   /*!< MISC NFEN1: TNFEN03 (Bitfield-Mask: 0x01)             */
/* =========================================================  NFEN2  ========================================================= */
#define MISC_NFEN2_TNFEN10_Pos            (0UL)                     /*!< MISC NFEN2: TNFEN10 (Bit 0)                           */
#define MISC_NFEN2_TNFEN10_Msk            (0x1UL)                   /*!< MISC NFEN2: TNFEN10 (Bitfield-Mask: 0x01)             */
#define MISC_NFEN2_TNFEN11_Pos            (1UL)                     /*!< MISC NFEN2: TNFEN11 (Bit 1)                           */
#define MISC_NFEN2_TNFEN11_Msk            (0x2UL)                   /*!< MISC NFEN2: TNFEN11 (Bitfield-Mask: 0x01)             */
#define MISC_NFEN2_TNFEN12_Pos            (2UL)                     /*!< MISC NFEN2: TNFEN12 (Bit 2)                           */
#define MISC_NFEN2_TNFEN12_Msk            (0x4UL)                   /*!< MISC NFEN2: TNFEN12 (Bitfield-Mask: 0x01)             */
#define MISC_NFEN2_TNFEN13_Pos            (3UL)                     /*!< MISC NFEN2: TNFEN13 (Bit 3)                           */
#define MISC_NFEN2_TNFEN13_Msk            (0x8UL)                   /*!< MISC NFEN2: TNFEN13 (Bitfield-Mask: 0x01)             */
/* ==========================================================  ISC  ========================================================== */
#define MISC_ISC_SSIE00_Pos               (7UL)                     /*!< MISC ISC: SSIE00 (Bit 7)                              */
#define MISC_ISC_SSIE00_Msk               (0x80UL)                  /*!< MISC ISC: SSIE00 (Bitfield-Mask: 0x01)                */
/* =========================================================  TIOS0  ========================================================= */
/* =========================================================  TIOS1  ========================================================= */
/* =========================================================  RTCCL  ========================================================= */


/* =========================================================================================================================== */
/* ================                                            FMC                                            ================ */
/* =========================================================================================================================== */

/* =========================================================  FLSTS  ========================================================= */
#define FMC_FLSTS_OVF_Pos                 (0UL)                     /*!< FMC FLSTS: OVF (Bit 0)                                */
#define FMC_FLSTS_OVF_Msk                 (0x1UL)                   /*!< FMC FLSTS: OVF (Bitfield-Mask: 0x01)                  */
#define FMC_FLSTS_EVF_Pos                 (2UL)                     /*!< FMC FLSTS: EVF (Bit 2)                                */
#define FMC_FLSTS_EVF_Msk                 (0x4UL)                   /*!< FMC FLSTS: EVF (Bitfield-Mask: 0x01)                  */
/* ========================================================  FLOPMD1  ======================================================== */
/* ========================================================  FLOPMD2  ======================================================== */
/* ========================================================  FLERMD  ========================================================= */
/* =======================================================  FLCERCNT  ======================================================== */
/* =======================================================  FLSERCNT  ======================================================== */
/* =======================================================  FLNVSCNT  ======================================================== */
/* =======================================================  FLPROCNT  ======================================================== */
/* ========================================================  FLPROT  ========================================================= */
/* =======================================================  FLPRVCNT  ======================================================== */
/* =======================================================  FLERVCNT  ======================================================== */


/* =========================================================================================================================== */
/* ================                                            SAF                                            ================ */
/* =========================================================================================================================== */

/* ========================================================  CRC0CTL  ======================================================== */
#define SAF_CRC0CTL_CRC0EN_Pos            (7UL)                     /*!< SAF CRC0CTL: CRC0EN (Bit 7)                           */
#define SAF_CRC0CTL_CRC0EN_Msk            (0x80UL)                  /*!< SAF CRC0CTL: CRC0EN (Bitfield-Mask: 0x01)             */
#define SAF_CRC0CTL_FEA_Pos               (0UL)                     /*!< SAF CRC0CTL: FEA (Bit 0)                              */
#define SAF_CRC0CTL_FEA_Msk               (0x7fUL)                  /*!< SAF CRC0CTL: FEA (Bitfield-Mask: 0x7f)                */
/* ========================================================  PGCRCL  ========================================================= */
/* =========================================================  CRCIN  ========================================================= */
/* =========================================================  CRCD  ========================================================== */
/* ========================================================  RPECTL  ========================================================= */
#define SAF_RPECTL_RPEF_Pos               (0UL)                     /*!< SAF RPECTL: RPEF (Bit 0)                              */
#define SAF_RPECTL_RPEF_Msk               (0x1UL)                   /*!< SAF RPECTL: RPEF (Bitfield-Mask: 0x01)                */
#define SAF_RPECTL_RPERDIS_Pos            (7UL)                     /*!< SAF RPECTL: RPERDIS (Bit 7)                           */
#define SAF_RPECTL_RPERDIS_Msk            (0x80UL)                  /*!< SAF RPECTL: RPERDIS (Bitfield-Mask: 0x01)             */
/* =========================================================  SFRGD  ========================================================= */


/* =========================================================================================================================== */
/* ================                                            CRC                                            ================ */
/* =========================================================================================================================== */

/* =========================================================  CRCD  ========================================================== */
/* =========================================================  CRCIN  ========================================================= */


/* =========================================================================================================================== */
/* ================                                            DBG                                            ================ */
/* =========================================================================================================================== */

/* ========================================================  DBGSTR  ========================================================= */
#define DBG_DBGSTR_CDBGPWRUPACK_Pos       (29UL)                    /*!< DBG DBGSTR: CDBGPWRUPACK (Bit 29)                     */
#define DBG_DBGSTR_CDBGPWRUPACK_Msk       (0x20000000UL)            /*!< DBG DBGSTR: CDBGPWRUPACK (Bitfield-Mask: 0x01)        */
#define DBG_DBGSTR_CDBGPWRUPREQ_Pos       (28UL)                    /*!< DBG DBGSTR: CDBGPWRUPREQ (Bit 28)                     */
#define DBG_DBGSTR_CDBGPWRUPREQ_Msk       (0x10000000UL)            /*!< DBG DBGSTR: CDBGPWRUPREQ (Bitfield-Mask: 0x01)        */
/* =======================================================  DBGSTOPCR  ======================================================= */
#define DBG_DBGSTOPCR_SWDIS_Pos           (24UL)                    /*!< DBG DBGSTOPCR: SWDIS (Bit 24)                         */
#define DBG_DBGSTOPCR_SWDIS_Msk           (0x1000000UL)             /*!< DBG DBGSTOPCR: SWDIS (Bitfield-Mask: 0x01)            */
#define DBG_DBGSTOPCR_RPERMSK_Pos         (16UL)                    /*!< DBG DBGSTOPCR: RPERMSK (Bit 16)                       */
#define DBG_DBGSTOPCR_RPERMSK_Msk         (0x10000UL)               /*!< DBG DBGSTOPCR: RPERMSK (Bitfield-Mask: 0x01)          */
#define DBG_DBGSTOPCR_RESMSK_Pos          (2UL)                     /*!< DBG DBGSTOPCR: RESMSK (Bit 2)                         */
#define DBG_DBGSTOPCR_RESMSK_Msk          (0x4UL)                   /*!< DBG DBGSTOPCR: RESMSK (Bitfield-Mask: 0x01)           */
#define DBG_DBGSTOPCR_FRZEN1_Pos          (1UL)                     /*!< DBG DBGSTOPCR: FRZEN1 (Bit 1)                         */
#define DBG_DBGSTOPCR_FRZEN1_Msk          (0x2UL)                   /*!< DBG DBGSTOPCR: FRZEN1 (Bitfield-Mask: 0x01)           */
#define DBG_DBGSTOPCR_FRZEN0_Pos          (0UL)                     /*!< DBG DBGSTOPCR: FRZEN0 (Bit 0)                         */
#define DBG_DBGSTOPCR_FRZEN0_Msk          (0x1UL)                   /*!< DBG DBGSTOPCR: FRZEN0 (Bitfield-Mask: 0x01)           */


/* =========================================================================================================================== */
/* ================                                            BGR                                            ================ */
/* =========================================================================================================================== */

/* =========================================================  VBG85  ========================================================= */
/* =========================================================  VBG25  ========================================================= */


/* =========================================================================================================================== */
/* ================                                            TSN                                            ================ */
/* =========================================================================================================================== */

/* =========================================================  TSN85  ========================================================= */
/* =========================================================  TSN25  ========================================================= */


/* =========================================================================================================================== */
/* ================                                            UID                                            ================ */
/* =========================================================================================================================== */

/* ==========================================================  UID  ========================================================== */

/** @} */ /* End of group PosMask_peripherals */


#ifdef __cplusplus
}
#endif

#endif /* CMS32L051_H */


/** @} */ /* End of group CMS32L051 */

/** @} */ /* End of group CMS */
