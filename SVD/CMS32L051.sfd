/*
 * ARM Limited (ARM) is supplying this software for use with Cortex-M
 * processor based microcontroller, but can be equally used for other
 * suitable processor architectures. This file can be freely distributed.
 * Modifications to this file shall be clearly marked.
 * 
 * THIS SOFTWARE IS PROVIDED "AS IS". NO WARRANTIES, WHETHER EXPRESS, IMPLIED
 * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
 * ARM SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL, OR
 * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
 *
 * @file     CMS32L051.sfd
 * @brief    CMSIS-SVD SFD File
 * @version  1.2
 * @date     06. June 2022
 * @note     Generated by SVDConv V3.3.39 on Monday, 06.06.2022 16:08:25
 *           from File 'CMS32L051.svd',
 *           last modified on Tuesday, 25.01.2022 05:27:10
 */




// -----------------------------  Register Item Address: CGC_CMC  ---------------------------------
// SVD Line: 99

unsigned char CGC_CMC __AT (0x40020400);



// --------------------------------  Field Item: CGC_CMC_AMPH  ------------------------------------
// SVD Line: 110

//  <item> SFDITEM_FIELD__CGC_CMC_AMPH
//    <name> AMPH </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40020400) Control of X1 clock oscillation frequency </i>
//    <check> 
//      <loc> ( (unsigned char) CGC_CMC ) </loc>
//      <o.0..0> AMPH
//    </check>
//  </item>
//  


// --------------------------------  Field Item: CGC_CMC_AMPHS  -----------------------------------
// SVD Line: 118

//  <item> SFDITEM_FIELD__CGC_CMC_AMPHS
//    <name> AMPHS </name>
//    <rw> 
//    <i> [Bits 2..1] RW (@ 0x40020400) Control of XT1 clock oscillation frequency </i>
//    <edit> 
//      <loc> ( (unsigned char)((CGC_CMC >> 1) & 0x3), ((CGC_CMC = (CGC_CMC & ~(0x3UL << 1 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 1 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: CGC_CMC_OSCSELS  ----------------------------------
// SVD Line: 126

//  <item> SFDITEM_FIELD__CGC_CMC_OSCSELS
//    <name> OSCSELS </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40020400) Sub OSC Select </i>
//    <check> 
//      <loc> ( (unsigned char) CGC_CMC ) </loc>
//      <o.4..4> OSCSELS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: CGC_CMC_EXCLKS  -----------------------------------
// SVD Line: 134

//  <item> SFDITEM_FIELD__CGC_CMC_EXCLKS
//    <name> EXCLKS </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40020400) External Clock input mode </i>
//    <check> 
//      <loc> ( (unsigned char) CGC_CMC ) </loc>
//      <o.5..5> EXCLKS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: CGC_CMC_OSCSEL  -----------------------------------
// SVD Line: 142

//  <item> SFDITEM_FIELD__CGC_CMC_OSCSEL
//    <name> OSCSEL </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40020400) Main OSC Select </i>
//    <check> 
//      <loc> ( (unsigned char) CGC_CMC ) </loc>
//      <o.6..6> OSCSEL
//    </check>
//  </item>
//  


// --------------------------------  Field Item: CGC_CMC_EXCLK  -----------------------------------
// SVD Line: 150

//  <item> SFDITEM_FIELD__CGC_CMC_EXCLK
//    <name> EXCLK </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40020400) External Clock input mode </i>
//    <check> 
//      <loc> ( (unsigned char) CGC_CMC ) </loc>
//      <o.7..7> EXCLK
//    </check>
//  </item>
//  


// ---------------------------------  Register RTree: CGC_CMC  ------------------------------------
// SVD Line: 99

//  <rtree> SFDITEM_REG__CGC_CMC
//    <name> CMC </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40020400) Clock operaton Mode Control Register </i>
//    <loc> ( (unsigned char)((CGC_CMC >> 0) & 0xFF), ((CGC_CMC = (CGC_CMC & ~(0xF7UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF7) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CGC_CMC_AMPH </item>
//    <item> SFDITEM_FIELD__CGC_CMC_AMPHS </item>
//    <item> SFDITEM_FIELD__CGC_CMC_OSCSELS </item>
//    <item> SFDITEM_FIELD__CGC_CMC_EXCLKS </item>
//    <item> SFDITEM_FIELD__CGC_CMC_OSCSEL </item>
//    <item> SFDITEM_FIELD__CGC_CMC_EXCLK </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: CGC_CSC  ---------------------------------
// SVD Line: 161

unsigned char CGC_CSC __AT (0x40020401);



// -------------------------------  Field Item: CGC_CSC_HIOSTOP  ----------------------------------
// SVD Line: 172

//  <item> SFDITEM_FIELD__CGC_CSC_HIOSTOP
//    <name> HIOSTOP </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40020401) \nHigh-speed on-chip oscillator clock operation control\n0 : START = High-speed on-chip oscillator operating\n1 : STOP = High-speed on-chip oscillator stopped </i>
//    <combo> 
//      <loc> ( (unsigned char) CGC_CSC ) </loc>
//      <o.0..0> HIOSTOP
//        <0=> 0: START = High-speed on-chip oscillator operating
//        <1=> 1: STOP = High-speed on-chip oscillator stopped
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: CGC_CSC_XTSTOP  -----------------------------------
// SVD Line: 192

//  <item> SFDITEM_FIELD__CGC_CSC_XTSTOP
//    <name> XTSTOP </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40020401) \nSubsystem clock operation control\n0 : START = XT1 oscillator operating or External clock from EXCLKS pin is valid\n1 : STOP = XT1 oscillator stop or External clock from EXCLKS pin is invalid </i>
//    <combo> 
//      <loc> ( (unsigned char) CGC_CSC ) </loc>
//      <o.6..6> XTSTOP
//        <0=> 0: START = XT1 oscillator operating or External clock from EXCLKS pin is valid
//        <1=> 1: STOP = XT1 oscillator stop or External clock from EXCLKS pin is invalid
//    </combo>
//  </item>
//  


// --------------------------------  Field Item: CGC_CSC_MSTOP  -----------------------------------
// SVD Line: 212

//  <item> SFDITEM_FIELD__CGC_CSC_MSTOP
//    <name> MSTOP </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40020401) \nHigh-speed system clock operation control\n0 : START = X1 oscillator operating or External clock from EXCLK pin is valid\n1 : STOP = X1 oscillator stop or External clock from EXCLK pin is invalid </i>
//    <combo> 
//      <loc> ( (unsigned char) CGC_CSC ) </loc>
//      <o.7..7> MSTOP
//        <0=> 0: START = X1 oscillator operating or External clock from EXCLK pin is valid
//        <1=> 1: STOP = X1 oscillator stop or External clock from EXCLK pin is invalid
//    </combo>
//  </item>
//  


// ---------------------------------  Register RTree: CGC_CSC  ------------------------------------
// SVD Line: 161

//  <rtree> SFDITEM_REG__CGC_CSC
//    <name> CSC </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40020401) Clock operation Status Register </i>
//    <loc> ( (unsigned char)((CGC_CSC >> 0) & 0xFF), ((CGC_CSC = (CGC_CSC & ~(0xC1UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xC1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CGC_CSC_HIOSTOP </item>
//    <item> SFDITEM_FIELD__CGC_CSC_XTSTOP </item>
//    <item> SFDITEM_FIELD__CGC_CSC_MSTOP </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: CGC_OSTC  --------------------------------
// SVD Line: 235

unsigned char CGC_OSTC __AT (0x40020402);



// ---------------------------------  Register Item: CGC_OSTC  ------------------------------------
// SVD Line: 235

//  <item> SFDITEM_REG__CGC_OSTC
//    <name> OSTC </name>
//    <i> [Bits 7..0] RO (@ 0x40020402) Oscillation stabilization time counter status </i>
//    <edit> 
//      <loc> ( (unsigned char)((CGC_OSTC >> 0) & 0xFFFFFFFF), ((CGC_OSTC = (CGC_OSTC & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register Item Address: CGC_OSTS  --------------------------------
// SVD Line: 246

unsigned char CGC_OSTS __AT (0x40020403);



// ---------------------------------  Register Item: CGC_OSTS  ------------------------------------
// SVD Line: 246

//  <item> SFDITEM_REG__CGC_OSTS
//    <name> OSTS </name>
//    <i> [Bits 7..0] RW (@ 0x40020403) Oscillation stabilization time select register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CGC_OSTS >> 0) & 0xFFFFFFFF), ((CGC_OSTS = (CGC_OSTS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register Item Address: CGC_CKC  ---------------------------------
// SVD Line: 257

unsigned char CGC_CKC __AT (0x40020404);



// --------------------------------  Field Item: CGC_CKC_MCM0  ------------------------------------
// SVD Line: 268

//  <item> SFDITEM_FIELD__CGC_CKC_MCM0
//    <name> MCM0 </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40020404) \nMain system clock (fMAIN) operation control\n0 : fIH = Select the high-speed on-chip oscillator clock (fIH) as the main system clock (fMAIN)\n1 : fMX = Select the high-speed system clock (fMX) as the main system clock (fMAIN) </i>
//    <combo> 
//      <loc> ( (unsigned char) CGC_CKC ) </loc>
//      <o.4..4> MCM0
//        <0=> 0: fIH = Select the high-speed on-chip oscillator clock (fIH) as the main system clock (fMAIN)
//        <1=> 1: fMX = Select the high-speed system clock (fMX) as the main system clock (fMAIN)
//    </combo>
//  </item>
//  


// ---------------------------------  Field Item: CGC_CKC_MCS  ------------------------------------
// SVD Line: 288

//  <item> SFDITEM_FIELD__CGC_CKC_MCS
//    <name> MCS </name>
//    <r> 
//    <i> [Bit 5] RO (@ 0x40020404) \nStatus of Main system clock (fMAIN)\n0 : fIH = High-speed on-chip oscillator clock (fIH)\n1 : fMX = High-speed system clock (fMX) </i>
//    <combo> 
//      <loc> ( (unsigned char) CGC_CKC ) </loc>
//      <o.5..5> MCS
//        <0=> 0: fIH = High-speed on-chip oscillator clock (fIH)
//        <1=> 1: fMX = High-speed system clock (fMX)
//    </combo>
//  </item>
//  


// ---------------------------------  Field Item: CGC_CKC_CSS  ------------------------------------
// SVD Line: 308

//  <item> SFDITEM_FIELD__CGC_CKC_CSS
//    <name> CSS </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40020404) \nSelection of CPU/peripheral hardware clock (fCLK)\n0 : fMAIN = Main system clock (fMAIN)\n1 : fSUB = Subsystem clock (fSUB) </i>
//    <combo> 
//      <loc> ( (unsigned char) CGC_CKC ) </loc>
//      <o.6..6> CSS
//        <0=> 0: fMAIN = Main system clock (fMAIN)
//        <1=> 1: fSUB = Subsystem clock (fSUB)
//    </combo>
//  </item>
//  


// ---------------------------------  Field Item: CGC_CKC_CLS  ------------------------------------
// SVD Line: 328

//  <item> SFDITEM_FIELD__CGC_CKC_CLS
//    <name> CLS </name>
//    <r> 
//    <i> [Bit 7] RO (@ 0x40020404) \nStatus of CPU/peripheral hardware clock (fCLK)\n0 : fMAIN = Main system clock (fMAIN)\n1 : fSUB = Subsystem clock (fSUB) </i>
//    <combo> 
//      <loc> ( (unsigned char) CGC_CKC ) </loc>
//      <o.7..7> CLS
//        <0=> 0: fMAIN = Main system clock (fMAIN)
//        <1=> 1: fSUB = Subsystem clock (fSUB)
//    </combo>
//  </item>
//  


// ---------------------------------  Register RTree: CGC_CKC  ------------------------------------
// SVD Line: 257

//  <rtree> SFDITEM_REG__CGC_CKC
//    <name> CKC </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40020404) System clock control register </i>
//    <loc> ( (unsigned char)((CGC_CKC >> 0) & 0xFF), ((CGC_CKC = (CGC_CKC & ~(0x50UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x50) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CGC_CKC_MCM0 </item>
//    <item> SFDITEM_FIELD__CGC_CKC_MCS </item>
//    <item> SFDITEM_FIELD__CGC_CKC_CSS </item>
//    <item> SFDITEM_FIELD__CGC_CKC_CLS </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: CGC_PER0  --------------------------------
// SVD Line: 351

unsigned char CGC_PER0 __AT (0x40020420);



// -------------------------------  Field Item: CGC_PER0_TM40EN  ----------------------------------
// SVD Line: 362

//  <item> SFDITEM_FIELD__CGC_PER0_TM40EN
//    <name> TM40EN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40020420) \nControl of the TM40 input clock\n0 : Disabled = Disables input clock supply\n1 : Enable = Enables input clock supply </i>
//    <combo> 
//      <loc> ( (unsigned char) CGC_PER0 ) </loc>
//      <o.0..0> TM40EN
//        <0=> 0: Disabled = Disables input clock supply
//        <1=> 1: Enable = Enables input clock supply
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: CGC_PER0_TM41EN  ----------------------------------
// SVD Line: 381

//  <item> SFDITEM_FIELD__CGC_PER0_TM41EN
//    <name> TM41EN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40020420) \nControl of the TM41 input clock\n0 : Disabled = Disables input clock supply\n1 : Enable = Enables input clock supply </i>
//    <combo> 
//      <loc> ( (unsigned char) CGC_PER0 ) </loc>
//      <o.1..1> TM41EN
//        <0=> 0: Disabled = Disables input clock supply
//        <1=> 1: Enable = Enables input clock supply
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: CGC_PER0_SCI0EN  ----------------------------------
// SVD Line: 400

//  <item> SFDITEM_FIELD__CGC_PER0_SCI0EN
//    <name> SCI0EN </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40020420) \nControl of the SCI0 input clock\n0 : Disabled = Disables input clock supply\n1 : Enable = Enables input clock supply </i>
//    <combo> 
//      <loc> ( (unsigned char) CGC_PER0 ) </loc>
//      <o.2..2> SCI0EN
//        <0=> 0: Disabled = Disables input clock supply
//        <1=> 1: Enable = Enables input clock supply
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: CGC_PER0_SCI1EN  ----------------------------------
// SVD Line: 419

//  <item> SFDITEM_FIELD__CGC_PER0_SCI1EN
//    <name> SCI1EN </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40020420) \nControl of the SCI1 input clock\n0 : Disabled = Disables input clock supply\n1 : Enable = Enables input clock supply </i>
//    <combo> 
//      <loc> ( (unsigned char) CGC_PER0 ) </loc>
//      <o.3..3> SCI1EN
//        <0=> 0: Disabled = Disables input clock supply
//        <1=> 1: Enable = Enables input clock supply
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: CGC_PER0_IICA0EN  ----------------------------------
// SVD Line: 438

//  <item> SFDITEM_FIELD__CGC_PER0_IICA0EN
//    <name> IICA0EN </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40020420) \nControl of the IICA0 input clock\n0 : Disabled = Disables input clock supply\n1 : Enable = Enables input clock supply </i>
//    <combo> 
//      <loc> ( (unsigned char) CGC_PER0 ) </loc>
//      <o.4..4> IICA0EN
//        <0=> 0: Disabled = Disables input clock supply
//        <1=> 1: Enable = Enables input clock supply
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: CGC_PER0_ADCEN  -----------------------------------
// SVD Line: 457

//  <item> SFDITEM_FIELD__CGC_PER0_ADCEN
//    <name> ADCEN </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40020420) \nControl of the ADC input clock\n0 : Disabled = Disables input clock supply\n1 : Enable = Enables input clock supply </i>
//    <combo> 
//      <loc> ( (unsigned char) CGC_PER0 ) </loc>
//      <o.5..5> ADCEN
//        <0=> 0: Disabled = Disables input clock supply
//        <1=> 1: Enable = Enables input clock supply
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: CGC_PER0_IRDAEN  ----------------------------------
// SVD Line: 476

//  <item> SFDITEM_FIELD__CGC_PER0_IRDAEN
//    <name> IRDAEN </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40020420) \nControl of the IRDA input clock\n0 : Disabled = Disables input clock supply\n1 : Enable = Enables input clock supply </i>
//    <combo> 
//      <loc> ( (unsigned char) CGC_PER0 ) </loc>
//      <o.6..6> IRDAEN
//        <0=> 0: Disabled = Disables input clock supply
//        <1=> 1: Enable = Enables input clock supply
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: CGC_PER0_RTCEN  -----------------------------------
// SVD Line: 495

//  <item> SFDITEM_FIELD__CGC_PER0_RTCEN
//    <name> RTCEN </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40020420) \nControl of the RTC input clock\n0 : Disabled = Disables input clock supply\n1 : Enable = Enables input clock supply </i>
//    <combo> 
//      <loc> ( (unsigned char) CGC_PER0 ) </loc>
//      <o.7..7> RTCEN
//        <0=> 0: Disabled = Disables input clock supply
//        <1=> 1: Enable = Enables input clock supply
//    </combo>
//  </item>
//  


// --------------------------------  Register RTree: CGC_PER0  ------------------------------------
// SVD Line: 351

//  <rtree> SFDITEM_REG__CGC_PER0
//    <name> PER0 </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40020420) Peripheral enable register 0 </i>
//    <loc> ( (unsigned char)((CGC_PER0 >> 0) & 0xFF), ((CGC_PER0 = (CGC_PER0 & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CGC_PER0_TM40EN </item>
//    <item> SFDITEM_FIELD__CGC_PER0_TM41EN </item>
//    <item> SFDITEM_FIELD__CGC_PER0_SCI0EN </item>
//    <item> SFDITEM_FIELD__CGC_PER0_SCI1EN </item>
//    <item> SFDITEM_FIELD__CGC_PER0_IICA0EN </item>
//    <item> SFDITEM_FIELD__CGC_PER0_ADCEN </item>
//    <item> SFDITEM_FIELD__CGC_PER0_IRDAEN </item>
//    <item> SFDITEM_FIELD__CGC_PER0_RTCEN </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: CGC_PER1  --------------------------------
// SVD Line: 517

unsigned char CGC_PER1 __AT (0x4002081A);



// -------------------------------  Field Item: CGC_PER1_EPWMEN  ----------------------------------
// SVD Line: 529

//  <item> SFDITEM_FIELD__CGC_PER1_EPWMEN
//    <name> EPWMEN </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4002081A) \nControl of the EPWM input clock\n0 : Disabled = Disables input clock supply\n1 : Enable = Enables input clock supply </i>
//    <combo> 
//      <loc> ( (unsigned char) CGC_PER1 ) </loc>
//      <o.2..2> EPWMEN
//        <0=> 0: Disabled = Disables input clock supply
//        <1=> 1: Enable = Enables input clock supply
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: CGC_PER1_DMAEN  -----------------------------------
// SVD Line: 548

//  <item> SFDITEM_FIELD__CGC_PER1_DMAEN
//    <name> DMAEN </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4002081A) \nControl of the DMA input clock\n0 : Disabled = Disables input clock supply\n1 : Enable = Enables input clock supply </i>
//    <combo> 
//      <loc> ( (unsigned char) CGC_PER1 ) </loc>
//      <o.3..3> DMAEN
//        <0=> 0: Disabled = Disables input clock supply
//        <1=> 1: Enable = Enables input clock supply
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: CGC_PER1_PGACMPEN  ---------------------------------
// SVD Line: 567

//  <item> SFDITEM_FIELD__CGC_PER1_PGACMPEN
//    <name> PGACMPEN </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4002081A) \nControl of the PGACMP input clock\n0 : Disabled = Disables input clock supply\n1 : Enable = Enables input clock supply </i>
//    <combo> 
//      <loc> ( (unsigned char) CGC_PER1 ) </loc>
//      <o.5..5> PGACMPEN
//        <0=> 0: Disabled = Disables input clock supply
//        <1=> 1: Enable = Enables input clock supply
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: CGC_PER1_SPIEN  -----------------------------------
// SVD Line: 586

//  <item> SFDITEM_FIELD__CGC_PER1_SPIEN
//    <name> SPIEN </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4002081A) \nControl of the SPI input clock\n0 : Disabled = Disables input clock supply\n1 : Enable = Enables input clock supply </i>
//    <combo> 
//      <loc> ( (unsigned char) CGC_PER1 ) </loc>
//      <o.7..7> SPIEN
//        <0=> 0: Disabled = Disables input clock supply
//        <1=> 1: Enable = Enables input clock supply
//    </combo>
//  </item>
//  


// --------------------------------  Register RTree: CGC_PER1  ------------------------------------
// SVD Line: 517

//  <rtree> SFDITEM_REG__CGC_PER1
//    <name> PER1 </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4002081A) Peripheral enable register 1 </i>
//    <loc> ( (unsigned char)((CGC_PER1 >> 0) & 0xFF), ((CGC_PER1 = (CGC_PER1 & ~(0xACUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xAC) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CGC_PER1_EPWMEN </item>
//    <item> SFDITEM_FIELD__CGC_PER1_DMAEN </item>
//    <item> SFDITEM_FIELD__CGC_PER1_PGACMPEN </item>
//    <item> SFDITEM_FIELD__CGC_PER1_SPIEN </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: CGC_OSMC  --------------------------------
// SVD Line: 608

unsigned char CGC_OSMC __AT (0x40020423);



// ------------------------------  Field Item: CGC_OSMC_WUTMMCK0  ---------------------------------
// SVD Line: 619

//  <item> SFDITEM_FIELD__CGC_OSMC_WUTMMCK0
//    <name> WUTMMCK0 </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40020423) \nSelection of operation clock for real-time clock, 15-bit interval timer\n0 : fSUB = The subsystem clock is selected as the operation clock for the real-time clock and the 15-bit interval timer.  The low-speed on-chip oscillator cannot be selected as the count source for timer A.\n1 : fIL = The low-speed on-chip oscillator clock is selected as the operation clock for the real-time clock and the 15-bit interval timer.  Either the low-speed on-chip oscillator or the subsystem clock can be selected as the count source for timer A. </i>
//    <combo> 
//      <loc> ( (unsigned char) CGC_OSMC ) </loc>
//      <o.4..4> WUTMMCK0
//        <0=> 0: fSUB = The subsystem clock is selected as the operation clock for the real-time clock and the 15-bit interval timer.  The low-speed on-chip oscillator cannot be selected as the count source for timer A.
//        <1=> 1: fIL = The low-speed on-chip oscillator clock is selected as the operation clock for the real-time clock and the 15-bit interval timer.  Either the low-speed on-chip oscillator or the subsystem clock can be selected as the count source for timer A.
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: CGC_OSMC_RTCLPC  ----------------------------------
// SVD Line: 645

//  <item> SFDITEM_FIELD__CGC_OSMC_RTCLPC
//    <name> RTCLPC </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40020423) \nSetting in DEEPSLEEP mode or SLEEP mode while subsystem clock is selected as CPU clock\n0 : Enable = Enables supply of subsystem clock to peripheral function\n1 : Disable = Stops supply of subsystem clock to peripheral functions other than real-time clock and 15-bit interval timer. </i>
//    <combo> 
//      <loc> ( (unsigned char) CGC_OSMC ) </loc>
//      <o.7..7> RTCLPC
//        <0=> 0: Enable = Enables supply of subsystem clock to peripheral function
//        <1=> 1: Disable = Stops supply of subsystem clock to peripheral functions other than real-time clock and 15-bit interval timer.
//    </combo>
//  </item>
//  


// --------------------------------  Register RTree: CGC_OSMC  ------------------------------------
// SVD Line: 608

//  <rtree> SFDITEM_REG__CGC_OSMC
//    <name> OSMC </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40020423) Subsystem clock supply mode control register </i>
//    <loc> ( (unsigned char)((CGC_OSMC >> 0) & 0xFF), ((CGC_OSMC = (CGC_OSMC & ~(0x90UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x90) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CGC_OSMC_WUTMMCK0 </item>
//    <item> SFDITEM_FIELD__CGC_OSMC_RTCLPC </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: CGC_LOSCSEL  -------------------------------
// SVD Line: 668

unsigned char CGC_LOSCSEL __AT (0x40020405);



// -----------------------------  Field Item: CGC_LOSCSEL_LOSCSEL  --------------------------------
// SVD Line: 680

//  <item> SFDITEM_FIELD__CGC_LOSCSEL_LOSCSEL
//    <name> LOSCSEL </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40020405) \nLOCO Frequency Select\n0 : Disabled = LOCO's Frequency is 15K\n1 : Enable = LOCO's Frequency is 30K </i>
//    <combo> 
//      <loc> ( (unsigned char) CGC_LOSCSEL ) </loc>
//      <o.0..0> LOSCSEL
//        <0=> 0: Disabled = LOCO's Frequency is 15K
//        <1=> 1: Enable = LOCO's Frequency is 30K
//    </combo>
//  </item>
//  


// -------------------------------  Register RTree: CGC_LOSCSEL  ----------------------------------
// SVD Line: 668

//  <rtree> SFDITEM_REG__CGC_LOSCSEL
//    <name> LOSCSEL </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40020405) LOCO Frequency Select register </i>
//    <loc> ( (unsigned char)((CGC_LOSCSEL >> 0) & 0xFF), ((CGC_LOSCSEL = (CGC_LOSCSEL & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CGC_LOSCSEL_LOSCSEL </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: CGC_PRCR  --------------------------------
// SVD Line: 702

unsigned char CGC_PRCR __AT (0x40020406);



// ---------------------------------  Register Item: CGC_PRCR  ------------------------------------
// SVD Line: 702

//  <item> SFDITEM_REG__CGC_PRCR
//    <name> PRCR </name>
//    <i> [Bits 7..0] RW (@ 0x40020406) LOSCSEL's Protect register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CGC_PRCR >> 0) & 0xFFFFFFFF), ((CGC_PRCR = (CGC_PRCR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: CGC_SUBCKSEL  ------------------------------
// SVD Line: 714

unsigned char CGC_SUBCKSEL __AT (0x40020407);



// ----------------------------  Field Item: CGC_SUBCKSEL_SELLOSC  --------------------------------
// SVD Line: 723

//  <item> SFDITEM_FIELD__CGC_SUBCKSEL_SELLOSC
//    <name> SELLOSC </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40020407) \nSelect LOSC or SUBOSC\n0 : SUBOSC = Select SUBOSC as the SubSystem clock\n1 : LOSC = Select LOSC as the SubSystem clock </i>
//    <combo> 
//      <loc> ( (unsigned char) CGC_SUBCKSEL ) </loc>
//      <o.0..0> SELLOSC
//        <0=> 0: SUBOSC = Select SUBOSC as the SubSystem clock
//        <1=> 1: LOSC = Select LOSC as the SubSystem clock
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: CGC_SUBCKSEL  ----------------------------------
// SVD Line: 714

//  <rtree> SFDITEM_REG__CGC_SUBCKSEL
//    <name> SUBCKSEL </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40020407) SubSystem Clock select register </i>
//    <loc> ( (unsigned char)((CGC_SUBCKSEL >> 0) & 0xFF), ((CGC_SUBCKSEL = (CGC_SUBCKSEL & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CGC_SUBCKSEL_SELLOSC </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: CGC_HOCODIV  -------------------------------
// SVD Line: 744

unsigned char CGC_HOCODIV __AT (0x40021C20);



// -------------------------------  Register Item: CGC_HOCODIV  -----------------------------------
// SVD Line: 744

//  <item> SFDITEM_REG__CGC_HOCODIV
//    <name> HOCODIV </name>
//    <i> [Bits 7..0] RW (@ 0x40021C20) High-speed on-chip oscillator frequency select register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CGC_HOCODIV >> 0) & 0xFFFFFFFF), ((CGC_HOCODIV = (CGC_HOCODIV & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: CGC_HIOTRM  -------------------------------
// SVD Line: 755

unsigned char CGC_HIOTRM __AT (0x40021C00);



// --------------------------------  Register Item: CGC_HIOTRM  -----------------------------------
// SVD Line: 755

//  <item> SFDITEM_REG__CGC_HIOTRM
//    <name> HIOTRM </name>
//    <i> [Bits 7..0] RW (@ 0x40021C00) High-speed on-chip oscillator trimming register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CGC_HIOTRM >> 0) & 0xFFFFFFFF), ((CGC_HIOTRM = (CGC_HIOTRM & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: CGC_PMUKEY  -------------------------------
// SVD Line: 766

unsigned short CGC_PMUKEY __AT (0x40020408);



// --------------------------------  Register Item: CGC_PMUKEY  -----------------------------------
// SVD Line: 766

//  <item> SFDITEM_REG__CGC_PMUKEY
//    <name> PMUKEY </name>
//    <i> [Bits 15..0] RW (@ 0x40020408) Power Manager Key Register </i>
//    <edit> 
//      <loc> ( (unsigned short)((CGC_PMUKEY >> 0) & 0xFFFFFFFF), ((CGC_PMUKEY = (CGC_PMUKEY & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: CGC_PMUCTL  -------------------------------
// SVD Line: 775

unsigned char CGC_PMUCTL __AT (0x4002040A);



// --------------------------------  Register Item: CGC_PMUCTL  -----------------------------------
// SVD Line: 775

//  <item> SFDITEM_REG__CGC_PMUCTL
//    <name> PMUCTL </name>
//    <i> [Bits 7..0] RW (@ 0x4002040A) Power Manager Control Register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CGC_PMUCTL >> 0) & 0xFFFFFFFF), ((CGC_PMUCTL = (CGC_PMUCTL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: CGC_WDTCFG0  -------------------------------
// SVD Line: 784

unsigned char CGC_WDTCFG0 __AT (0x4002040C);



// -------------------------------  Register Item: CGC_WDTCFG0  -----------------------------------
// SVD Line: 784

//  <item> SFDITEM_REG__CGC_WDTCFG0
//    <name> WDTCFG0 </name>
//    <i> [Bits 7..0] RW (@ 0x4002040C) WDT Configeration 0 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CGC_WDTCFG0 >> 0) & 0xFFFFFFFF), ((CGC_WDTCFG0 = (CGC_WDTCFG0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: CGC_WDTCFG1  -------------------------------
// SVD Line: 793

unsigned char CGC_WDTCFG1 __AT (0x4002040D);



// -------------------------------  Register Item: CGC_WDTCFG1  -----------------------------------
// SVD Line: 793

//  <item> SFDITEM_REG__CGC_WDTCFG1
//    <name> WDTCFG1 </name>
//    <i> [Bits 7..0] RW (@ 0x4002040D) WDT Configeration 1 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CGC_WDTCFG1 >> 0) & 0xFFFFFFFF), ((CGC_WDTCFG1 = (CGC_WDTCFG1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: CGC_WDTCFG2  -------------------------------
// SVD Line: 802

unsigned char CGC_WDTCFG2 __AT (0x4002040E);



// -------------------------------  Register Item: CGC_WDTCFG2  -----------------------------------
// SVD Line: 802

//  <item> SFDITEM_REG__CGC_WDTCFG2
//    <name> WDTCFG2 </name>
//    <i> [Bits 7..0] RW (@ 0x4002040E) WDT Configeration 2 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CGC_WDTCFG2 >> 0) & 0xFFFFFFFF), ((CGC_WDTCFG2 = (CGC_WDTCFG2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: CGC_WDTCFG3  -------------------------------
// SVD Line: 811

unsigned char CGC_WDTCFG3 __AT (0x4002040F);



// -------------------------------  Register Item: CGC_WDTCFG3  -----------------------------------
// SVD Line: 811

//  <item> SFDITEM_REG__CGC_WDTCFG3
//    <name> WDTCFG3 </name>
//    <i> [Bits 7..0] RW (@ 0x4002040F) WDT Configeration 3 register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CGC_WDTCFG3 >> 0) & 0xFFFFFFFF), ((CGC_WDTCFG3 = (CGC_WDTCFG3 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: CGC_HOCOFC  -------------------------------
// SVD Line: 820

unsigned char CGC_HOCOFC __AT (0x40022400);



// -------------------------------  Field Item: CGC_HOCOFC_FCST  ----------------------------------
// SVD Line: 830

//  <item> SFDITEM_FIELD__CGC_HOCOFC_FCST
//    <name> FCST </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40022400) Oscillator stop detected object selection register </i>
//    <check> 
//      <loc> ( (unsigned char) CGC_HOCOFC ) </loc>
//      <o.0..0> FCST
//    </check>
//  </item>
//  


// -------------------------------  Field Item: CGC_HOCOFC_FCIE  ----------------------------------
// SVD Line: 838

//  <item> SFDITEM_FIELD__CGC_HOCOFC_FCIE
//    <name> FCIE </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40022400) Oscillator stop detected operation selection register </i>
//    <check> 
//      <loc> ( (unsigned char) CGC_HOCOFC ) </loc>
//      <o.6..6> FCIE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: CGC_HOCOFC_FCMD  ----------------------------------
// SVD Line: 846

//  <item> SFDITEM_FIELD__CGC_HOCOFC_FCMD
//    <name> FCMD </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40022400) High-speed on-chip oscillator frequency correction operation mode register </i>
//    <check> 
//      <loc> ( (unsigned char) CGC_HOCOFC ) </loc>
//      <o.7..7> FCMD
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: CGC_HOCOFC  -----------------------------------
// SVD Line: 820

//  <rtree> SFDITEM_REG__CGC_HOCOFC
//    <name> HOCOFC </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40022400) High-speed on-chip oscillator frequency correction register </i>
//    <loc> ( (unsigned char)((CGC_HOCOFC >> 0) & 0xFF), ((CGC_HOCOFC = (CGC_HOCOFC & ~(0xC1UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xC1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CGC_HOCOFC_FCST </item>
//    <item> SFDITEM_FIELD__CGC_HOCOFC_FCIE </item>
//    <item> SFDITEM_FIELD__CGC_HOCOFC_FCMD </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: CGC  --------------------------------------
// SVD Line: 76

//  <view> CGC
//    <name> CGC </name>
//    <item> SFDITEM_REG__CGC_CMC </item>
//    <item> SFDITEM_REG__CGC_CSC </item>
//    <item> SFDITEM_REG__CGC_OSTC </item>
//    <item> SFDITEM_REG__CGC_OSTS </item>
//    <item> SFDITEM_REG__CGC_CKC </item>
//    <item> SFDITEM_REG__CGC_PER0 </item>
//    <item> SFDITEM_REG__CGC_PER1 </item>
//    <item> SFDITEM_REG__CGC_OSMC </item>
//    <item> SFDITEM_REG__CGC_LOSCSEL </item>
//    <item> SFDITEM_REG__CGC_PRCR </item>
//    <item> SFDITEM_REG__CGC_SUBCKSEL </item>
//    <item> SFDITEM_REG__CGC_HOCODIV </item>
//    <item> SFDITEM_REG__CGC_HIOTRM </item>
//    <item> SFDITEM_REG__CGC_PMUKEY </item>
//    <item> SFDITEM_REG__CGC_PMUCTL </item>
//    <item> SFDITEM_REG__CGC_WDTCFG0 </item>
//    <item> SFDITEM_REG__CGC_WDTCFG1 </item>
//    <item> SFDITEM_REG__CGC_WDTCFG2 </item>
//    <item> SFDITEM_REG__CGC_WDTCFG3 </item>
//    <item> SFDITEM_REG__CGC_HOCOFC </item>
//  </view>
//  


// -----------------------------  Register Item Address: RST_RESF  --------------------------------
// SVD Line: 875

unsigned char RST_RESF __AT (0x40020440);



// -------------------------------  Field Item: RST_RESF_LVIRF  -----------------------------------
// SVD Line: 884

//  <item> SFDITEM_FIELD__RST_RESF_LVIRF
//    <name> LVIRF </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x40020440) \nInternal reset request by voltage detector\n0 : NONE = Internal reset request is not generated, or the RESF register is cleared.\n1 : DONE = Internal reset request is generated. </i>
//    <combo> 
//      <loc> ( (unsigned char) RST_RESF ) </loc>
//      <o.0..0> LVIRF
//        <0=> 0: NONE = Internal reset request is not generated, or the RESF register is cleared.
//        <1=> 1: DONE = Internal reset request is generated.
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: RST_RESF_IAWRF  -----------------------------------
// SVD Line: 903

//  <item> SFDITEM_FIELD__RST_RESF_IAWRF
//    <name> IAWRF </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x40020440) \nInternal reset request by illegal-memory access\n0 : NONE = Internal reset request is not generated, or the RESF register is cleared.\n1 : DONE = Internal reset request is generated. </i>
//    <combo> 
//      <loc> ( (unsigned char) RST_RESF ) </loc>
//      <o.1..1> IAWRF
//        <0=> 0: NONE = Internal reset request is not generated, or the RESF register is cleared.
//        <1=> 1: DONE = Internal reset request is generated.
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: RST_RESF_RPERF  -----------------------------------
// SVD Line: 922

//  <item> SFDITEM_FIELD__RST_RESF_RPERF
//    <name> RPERF </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x40020440) \nInternal reset request by RAM parity\n0 : NONE = Internal reset request is not generated, or the RESF register is cleared.\n1 : DONE = Internal reset request is generated. </i>
//    <combo> 
//      <loc> ( (unsigned char) RST_RESF ) </loc>
//      <o.2..2> RPERF
//        <0=> 0: NONE = Internal reset request is not generated, or the RESF register is cleared.
//        <1=> 1: DONE = Internal reset request is generated.
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: RST_RESF_WDTRF  -----------------------------------
// SVD Line: 941

//  <item> SFDITEM_FIELD__RST_RESF_WDTRF
//    <name> WDTRF </name>
//    <r> 
//    <i> [Bit 4] RO (@ 0x40020440) \nInternal reset request by watchdog timer(WDT)\n0 : NONE = Internal reset request is not generated, or the RESF register is cleared.\n1 : DONE = Internal reset request is generated. </i>
//    <combo> 
//      <loc> ( (unsigned char) RST_RESF ) </loc>
//      <o.4..4> WDTRF
//        <0=> 0: NONE = Internal reset request is not generated, or the RESF register is cleared.
//        <1=> 1: DONE = Internal reset request is generated.
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: RST_RESF_SYSRF  -----------------------------------
// SVD Line: 960

//  <item> SFDITEM_FIELD__RST_RESF_SYSRF
//    <name> SYSRF </name>
//    <r> 
//    <i> [Bit 7] RO (@ 0x40020440) \nInternal reset request by system reset request(AIRCR.SYSRESETREQ)\n0 : NONE = Internal reset request is not generated, or the RESF register is cleared.\n1 : DONE = Internal reset request is generated. </i>
//    <combo> 
//      <loc> ( (unsigned char) RST_RESF ) </loc>
//      <o.7..7> SYSRF
//        <0=> 0: NONE = Internal reset request is not generated, or the RESF register is cleared.
//        <1=> 1: DONE = Internal reset request is generated.
//    </combo>
//  </item>
//  


// --------------------------------  Register RTree: RST_RESF  ------------------------------------
// SVD Line: 875

//  <rtree> SFDITEM_REG__RST_RESF
//    <name> RESF </name>
//    <r> 
//    <i> [Bits 7..0] RO (@ 0x40020440) Reset flag register </i>
//    <loc> ( (unsigned char)((RST_RESF >> 0) & 0xFF) ) </loc>
//    <item> SFDITEM_FIELD__RST_RESF_LVIRF </item>
//    <item> SFDITEM_FIELD__RST_RESF_IAWRF </item>
//    <item> SFDITEM_FIELD__RST_RESF_RPERF </item>
//    <item> SFDITEM_FIELD__RST_RESF_WDTRF </item>
//    <item> SFDITEM_FIELD__RST_RESF_SYSRF </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: RST  --------------------------------------
// SVD Line: 858

//  <view> RST
//    <name> RST </name>
//    <item> SFDITEM_REG__RST_RESF </item>
//  </view>
//  


// -----------------------------  Register Item Address: LVD_LVIM  --------------------------------
// SVD Line: 1009

unsigned char LVD_LVIM __AT (0x40020441);



// --------------------------------  Field Item: LVD_LVIM_LVIF  -----------------------------------
// SVD Line: 1020

//  <item> SFDITEM_FIELD__LVD_LVIM_LVIF
//    <name> LVIF </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x40020441) \nVoltage detection flag\n0 : GE = Supply voltage (VDD) greater or equal to detection voltage (VLVD), or when LVD is off\n1 : LT = Supply voltage (VDD) less than detection voltage (VLVD) </i>
//    <combo> 
//      <loc> ( (unsigned char) LVD_LVIM ) </loc>
//      <o.0..0> LVIF
//        <0=> 0: GE = Supply voltage (VDD) greater or equal to detection voltage (VLVD), or when LVD is off
//        <1=> 1: LT = Supply voltage (VDD) less than detection voltage (VLVD)
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: LVD_LVIM_LVIOMSK  ----------------------------------
// SVD Line: 1040

//  <item> SFDITEM_FIELD__LVD_LVIM_LVIOMSK
//    <name> LVIOMSK </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x40020441) \nMask status flag of LVD output\n0 : Invalid = Mask of LVD output is invalid\n1 : Valid = Mask of LVD output is valid </i>
//    <combo> 
//      <loc> ( (unsigned char) LVD_LVIM ) </loc>
//      <o.1..1> LVIOMSK
//        <0=> 0: Invalid = Mask of LVD output is invalid
//        <1=> 1: Valid = Mask of LVD output is valid
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: LVD_LVIM_LVISEN  ----------------------------------
// SVD Line: 1060

//  <item> SFDITEM_FIELD__LVD_LVIM_LVISEN
//    <name> LVISEN </name>
//    <r> 
//    <i> [Bit 7] RO (@ 0x40020441) \nEnable rewritting LVIS register\n0 : Disable = Disabling of rewriting the LVIS register\n1 : Enable = Enabling of rewriting the LVIS register </i>
//    <combo> 
//      <loc> ( (unsigned char) LVD_LVIM ) </loc>
//      <o.7..7> LVISEN
//        <0=> 0: Disable = Disabling of rewriting the LVIS register
//        <1=> 1: Enable = Enabling of rewriting the LVIS register
//    </combo>
//  </item>
//  


// --------------------------------  Register RTree: LVD_LVIM  ------------------------------------
// SVD Line: 1009

//  <rtree> SFDITEM_REG__LVD_LVIM
//    <name> LVIM </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40020441) Voltage detection register </i>
//    <loc> ( (unsigned char)((LVD_LVIM >> 0) & 0xFF) ) </loc>
//    <item> SFDITEM_FIELD__LVD_LVIM_LVIF </item>
//    <item> SFDITEM_FIELD__LVD_LVIM_LVIOMSK </item>
//    <item> SFDITEM_FIELD__LVD_LVIM_LVISEN </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: LVD_LVIS  --------------------------------
// SVD Line: 1083

unsigned char LVD_LVIS __AT (0x40020442);



// -------------------------------  Field Item: LVD_LVIS_LVILV  -----------------------------------
// SVD Line: 1094

//  <item> SFDITEM_FIELD__LVD_LVIS_LVILV
//    <name> LVILV </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40020442) \nLVD detection level\n0 : High = High-voltage detection level (VLVDH)\n1 : Low = Low-voltage detection level (VLVDL or VLVD) </i>
//    <combo> 
//      <loc> ( (unsigned char) LVD_LVIS ) </loc>
//      <o.0..0> LVILV
//        <0=> 0: High = High-voltage detection level (VLVDH)
//        <1=> 1: Low = Low-voltage detection level (VLVDL or VLVD)
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: LVD_LVIS_LVIMD  -----------------------------------
// SVD Line: 1114

//  <item> SFDITEM_FIELD__LVD_LVIS_LVIMD
//    <name> LVIMD </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40020442) \nOperation mode of voltage detection\n0 : IRQ = interrupt mode\n1 : Reset = reset mode </i>
//    <combo> 
//      <loc> ( (unsigned char) LVD_LVIS ) </loc>
//      <o.7..7> LVIMD
//        <0=> 0: IRQ = interrupt mode
//        <1=> 1: Reset = reset mode
//    </combo>
//  </item>
//  


// --------------------------------  Register RTree: LVD_LVIS  ------------------------------------
// SVD Line: 1083

//  <rtree> SFDITEM_REG__LVD_LVIS
//    <name> LVIS </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40020442) Voltage detection level register </i>
//    <loc> ( (unsigned char)((LVD_LVIS >> 0) & 0xFF), ((LVD_LVIS = (LVD_LVIS & ~(0x81UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x81) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LVD_LVIS_LVILV </item>
//    <item> SFDITEM_FIELD__LVD_LVIS_LVIMD </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: LVD  --------------------------------------
// SVD Line: 986

//  <view> LVD
//    <name> LVD </name>
//    <item> SFDITEM_REG__LVD_LVIM </item>
//    <item> SFDITEM_REG__LVD_LVIS </item>
//  </view>
//  


// -----------------------------  Register Item Address: PORT_PM0  --------------------------------
// SVD Line: 1156

unsigned char PORT_PM0 __AT (0x40040020);



// ---------------------------------  Register Item: PORT_PM0  ------------------------------------
// SVD Line: 1156

//  <item> SFDITEM_REG__PORT_PM0
//    <name> PM0 </name>
//    <i> [Bits 7..0] RW (@ 0x40040020) Port mode register 0 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_PM0 >> 0) & 0xFFFFFFFF), ((PORT_PM0 = (PORT_PM0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register Item Address: PORT_PM1  --------------------------------
// SVD Line: 1165

unsigned char PORT_PM1 __AT (0x40040021);



// ---------------------------------  Register Item: PORT_PM1  ------------------------------------
// SVD Line: 1165

//  <item> SFDITEM_REG__PORT_PM1
//    <name> PM1 </name>
//    <i> [Bits 7..0] RW (@ 0x40040021) Port mode register 1 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_PM1 >> 0) & 0xFFFFFFFF), ((PORT_PM1 = (PORT_PM1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register Item Address: PORT_PM2  --------------------------------
// SVD Line: 1174

unsigned char PORT_PM2 __AT (0x40040022);



// ---------------------------------  Register Item: PORT_PM2  ------------------------------------
// SVD Line: 1174

//  <item> SFDITEM_REG__PORT_PM2
//    <name> PM2 </name>
//    <i> [Bits 7..0] RW (@ 0x40040022) Port mode register 2 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_PM2 >> 0) & 0xFFFFFFFF), ((PORT_PM2 = (PORT_PM2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register Item Address: PORT_PM3  --------------------------------
// SVD Line: 1183

unsigned char PORT_PM3 __AT (0x40040023);



// ---------------------------------  Register Item: PORT_PM3  ------------------------------------
// SVD Line: 1183

//  <item> SFDITEM_REG__PORT_PM3
//    <name> PM3 </name>
//    <i> [Bits 7..0] RW (@ 0x40040023) Port mode register 3 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_PM3 >> 0) & 0xFFFFFFFF), ((PORT_PM3 = (PORT_PM3 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register Item Address: PORT_PM4  --------------------------------
// SVD Line: 1192

unsigned char PORT_PM4 __AT (0x40040024);



// ---------------------------------  Register Item: PORT_PM4  ------------------------------------
// SVD Line: 1192

//  <item> SFDITEM_REG__PORT_PM4
//    <name> PM4 </name>
//    <i> [Bits 7..0] RW (@ 0x40040024) Port mode register 4 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_PM4 >> 0) & 0xFFFFFFFF), ((PORT_PM4 = (PORT_PM4 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register Item Address: PORT_PM5  --------------------------------
// SVD Line: 1201

unsigned char PORT_PM5 __AT (0x40040025);



// ---------------------------------  Register Item: PORT_PM5  ------------------------------------
// SVD Line: 1201

//  <item> SFDITEM_REG__PORT_PM5
//    <name> PM5 </name>
//    <i> [Bits 7..0] RW (@ 0x40040025) Port mode register 5 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_PM5 >> 0) & 0xFFFFFFFF), ((PORT_PM5 = (PORT_PM5 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register Item Address: PORT_PM6  --------------------------------
// SVD Line: 1210

unsigned char PORT_PM6 __AT (0x40040026);



// ---------------------------------  Register Item: PORT_PM6  ------------------------------------
// SVD Line: 1210

//  <item> SFDITEM_REG__PORT_PM6
//    <name> PM6 </name>
//    <i> [Bits 7..0] RW (@ 0x40040026) Port mode register 6 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_PM6 >> 0) & 0xFFFFFFFF), ((PORT_PM6 = (PORT_PM6 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register Item Address: PORT_PM7  --------------------------------
// SVD Line: 1219

unsigned char PORT_PM7 __AT (0x40040027);



// ---------------------------------  Register Item: PORT_PM7  ------------------------------------
// SVD Line: 1219

//  <item> SFDITEM_REG__PORT_PM7
//    <name> PM7 </name>
//    <i> [Bits 7..0] RW (@ 0x40040027) Port mode register 7 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_PM7 >> 0) & 0xFFFFFFFF), ((PORT_PM7 = (PORT_PM7 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: PORT_PM12  --------------------------------
// SVD Line: 1228

unsigned char PORT_PM12 __AT (0x4004002C);



// --------------------------------  Register Item: PORT_PM12  ------------------------------------
// SVD Line: 1228

//  <item> SFDITEM_REG__PORT_PM12
//    <name> PM12 </name>
//    <i> [Bits 7..0] RW (@ 0x4004002C) Port mode register 12 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_PM12 >> 0) & 0xFFFFFFFF), ((PORT_PM12 = (PORT_PM12 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: PORT_PM13  --------------------------------
// SVD Line: 1237

unsigned char PORT_PM13 __AT (0x4004002D);



// --------------------------------  Register Item: PORT_PM13  ------------------------------------
// SVD Line: 1237

//  <item> SFDITEM_REG__PORT_PM13
//    <name> PM13 </name>
//    <i> [Bits 7..0] RW (@ 0x4004002D) Port mode register 13 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_PM13 >> 0) & 0xFFFFFFFF), ((PORT_PM13 = (PORT_PM13 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: PORT_PM14  --------------------------------
// SVD Line: 1246

unsigned char PORT_PM14 __AT (0x4004002E);



// --------------------------------  Register Item: PORT_PM14  ------------------------------------
// SVD Line: 1246

//  <item> SFDITEM_REG__PORT_PM14
//    <name> PM14 </name>
//    <i> [Bits 7..0] RW (@ 0x4004002E) Port mode register 14 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_PM14 >> 0) & 0xFFFFFFFF), ((PORT_PM14 = (PORT_PM14 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register Item Address: PORT_P0  ---------------------------------
// SVD Line: 1255

unsigned char PORT_P0 __AT (0x40040000);



// ---------------------------------  Register Item: PORT_P0  -------------------------------------
// SVD Line: 1255

//  <item> SFDITEM_REG__PORT_P0
//    <name> P0 </name>
//    <i> [Bits 7..0] RW (@ 0x40040000) Port register 0 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_P0 >> 0) & 0xFFFFFFFF), ((PORT_P0 = (PORT_P0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register Item Address: PORT_P1  ---------------------------------
// SVD Line: 1264

unsigned char PORT_P1 __AT (0x40040001);



// ---------------------------------  Register Item: PORT_P1  -------------------------------------
// SVD Line: 1264

//  <item> SFDITEM_REG__PORT_P1
//    <name> P1 </name>
//    <i> [Bits 7..0] RW (@ 0x40040001) Port register 1 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_P1 >> 0) & 0xFFFFFFFF), ((PORT_P1 = (PORT_P1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register Item Address: PORT_P2  ---------------------------------
// SVD Line: 1273

unsigned char PORT_P2 __AT (0x40040002);



// ---------------------------------  Register Item: PORT_P2  -------------------------------------
// SVD Line: 1273

//  <item> SFDITEM_REG__PORT_P2
//    <name> P2 </name>
//    <i> [Bits 7..0] RW (@ 0x40040002) Port register 2 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_P2 >> 0) & 0xFFFFFFFF), ((PORT_P2 = (PORT_P2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register Item Address: PORT_P3  ---------------------------------
// SVD Line: 1282

unsigned char PORT_P3 __AT (0x40040003);



// ---------------------------------  Register Item: PORT_P3  -------------------------------------
// SVD Line: 1282

//  <item> SFDITEM_REG__PORT_P3
//    <name> P3 </name>
//    <i> [Bits 7..0] RW (@ 0x40040003) Port register 3 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_P3 >> 0) & 0xFFFFFFFF), ((PORT_P3 = (PORT_P3 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register Item Address: PORT_P4  ---------------------------------
// SVD Line: 1291

unsigned char PORT_P4 __AT (0x40040004);



// ---------------------------------  Register Item: PORT_P4  -------------------------------------
// SVD Line: 1291

//  <item> SFDITEM_REG__PORT_P4
//    <name> P4 </name>
//    <i> [Bits 7..0] RW (@ 0x40040004) Port register 4 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_P4 >> 0) & 0xFFFFFFFF), ((PORT_P4 = (PORT_P4 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register Item Address: PORT_P5  ---------------------------------
// SVD Line: 1300

unsigned char PORT_P5 __AT (0x40040005);



// ---------------------------------  Register Item: PORT_P5  -------------------------------------
// SVD Line: 1300

//  <item> SFDITEM_REG__PORT_P5
//    <name> P5 </name>
//    <i> [Bits 7..0] RW (@ 0x40040005) Port register 5 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_P5 >> 0) & 0xFFFFFFFF), ((PORT_P5 = (PORT_P5 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register Item Address: PORT_P6  ---------------------------------
// SVD Line: 1309

unsigned char PORT_P6 __AT (0x40040006);



// ---------------------------------  Register Item: PORT_P6  -------------------------------------
// SVD Line: 1309

//  <item> SFDITEM_REG__PORT_P6
//    <name> P6 </name>
//    <i> [Bits 7..0] RW (@ 0x40040006) Port register 6 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_P6 >> 0) & 0xFFFFFFFF), ((PORT_P6 = (PORT_P6 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register Item Address: PORT_P7  ---------------------------------
// SVD Line: 1318

unsigned char PORT_P7 __AT (0x40040007);



// ---------------------------------  Register Item: PORT_P7  -------------------------------------
// SVD Line: 1318

//  <item> SFDITEM_REG__PORT_P7
//    <name> P7 </name>
//    <i> [Bits 7..0] RW (@ 0x40040007) Port register 7 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_P7 >> 0) & 0xFFFFFFFF), ((PORT_P7 = (PORT_P7 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register Item Address: PORT_P12  --------------------------------
// SVD Line: 1327

unsigned char PORT_P12 __AT (0x4004000C);



// ---------------------------------  Register Item: PORT_P12  ------------------------------------
// SVD Line: 1327

//  <item> SFDITEM_REG__PORT_P12
//    <name> P12 </name>
//    <i> [Bits 7..0] RW (@ 0x4004000C) Port register 12 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_P12 >> 0) & 0xFFFFFFFF), ((PORT_P12 = (PORT_P12 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register Item Address: PORT_P13  --------------------------------
// SVD Line: 1335

unsigned char PORT_P13 __AT (0x4004000D);



// ---------------------------------  Register Item: PORT_P13  ------------------------------------
// SVD Line: 1335

//  <item> SFDITEM_REG__PORT_P13
//    <name> P13 </name>
//    <i> [Bits 7..0] RW (@ 0x4004000D) Port register 13 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_P13 >> 0) & 0xFFFFFFFF), ((PORT_P13 = (PORT_P13 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register Item Address: PORT_P14  --------------------------------
// SVD Line: 1344

unsigned char PORT_P14 __AT (0x4004000E);



// ---------------------------------  Register Item: PORT_P14  ------------------------------------
// SVD Line: 1344

//  <item> SFDITEM_REG__PORT_P14
//    <name> P14 </name>
//    <i> [Bits 7..0] RW (@ 0x4004000E) Port register 14 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_P14 >> 0) & 0xFFFFFFFF), ((PORT_P14 = (PORT_P14 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register Item Address: PORT_PU0  --------------------------------
// SVD Line: 1353

unsigned char PORT_PU0 __AT (0x40040030);



// ---------------------------------  Register Item: PORT_PU0  ------------------------------------
// SVD Line: 1353

//  <item> SFDITEM_REG__PORT_PU0
//    <name> PU0 </name>
//    <i> [Bits 7..0] RW (@ 0x40040030) Pull-up resistor option register 0 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_PU0 >> 0) & 0xFFFFFFFF), ((PORT_PU0 = (PORT_PU0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register Item Address: PORT_PU1  --------------------------------
// SVD Line: 1362

unsigned char PORT_PU1 __AT (0x40040031);



// ---------------------------------  Register Item: PORT_PU1  ------------------------------------
// SVD Line: 1362

//  <item> SFDITEM_REG__PORT_PU1
//    <name> PU1 </name>
//    <i> [Bits 7..0] RW (@ 0x40040031) Pull-up resistor option register 1 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_PU1 >> 0) & 0xFFFFFFFF), ((PORT_PU1 = (PORT_PU1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register Item Address: PORT_PU2  --------------------------------
// SVD Line: 1371

unsigned char PORT_PU2 __AT (0x40040032);



// ---------------------------------  Register Item: PORT_PU2  ------------------------------------
// SVD Line: 1371

//  <item> SFDITEM_REG__PORT_PU2
//    <name> PU2 </name>
//    <i> [Bits 7..0] RW (@ 0x40040032) Pull-up resistor option register 2 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_PU2 >> 0) & 0xFFFFFFFF), ((PORT_PU2 = (PORT_PU2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register Item Address: PORT_PU3  --------------------------------
// SVD Line: 1380

unsigned char PORT_PU3 __AT (0x40040033);



// ---------------------------------  Register Item: PORT_PU3  ------------------------------------
// SVD Line: 1380

//  <item> SFDITEM_REG__PORT_PU3
//    <name> PU3 </name>
//    <i> [Bits 7..0] RW (@ 0x40040033) Pull-up resistor option register 3 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_PU3 >> 0) & 0xFFFFFFFF), ((PORT_PU3 = (PORT_PU3 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register Item Address: PORT_PU4  --------------------------------
// SVD Line: 1389

unsigned char PORT_PU4 __AT (0x40040034);



// ---------------------------------  Register Item: PORT_PU4  ------------------------------------
// SVD Line: 1389

//  <item> SFDITEM_REG__PORT_PU4
//    <name> PU4 </name>
//    <i> [Bits 7..0] RW (@ 0x40040034) Pull-up resistor option register 4 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_PU4 >> 0) & 0xFFFFFFFF), ((PORT_PU4 = (PORT_PU4 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register Item Address: PORT_PU5  --------------------------------
// SVD Line: 1398

unsigned char PORT_PU5 __AT (0x40040035);



// ---------------------------------  Register Item: PORT_PU5  ------------------------------------
// SVD Line: 1398

//  <item> SFDITEM_REG__PORT_PU5
//    <name> PU5 </name>
//    <i> [Bits 7..0] RW (@ 0x40040035) Pull-up resistor option register 5 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_PU5 >> 0) & 0xFFFFFFFF), ((PORT_PU5 = (PORT_PU5 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register Item Address: PORT_PU6  --------------------------------
// SVD Line: 1407

unsigned char PORT_PU6 __AT (0x40040036);



// ---------------------------------  Register Item: PORT_PU6  ------------------------------------
// SVD Line: 1407

//  <item> SFDITEM_REG__PORT_PU6
//    <name> PU6 </name>
//    <i> [Bits 7..0] RW (@ 0x40040036) Pull-up resistor option register 6 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_PU6 >> 0) & 0xFFFFFFFF), ((PORT_PU6 = (PORT_PU6 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register Item Address: PORT_PU7  --------------------------------
// SVD Line: 1416

unsigned char PORT_PU7 __AT (0x40040037);



// ---------------------------------  Register Item: PORT_PU7  ------------------------------------
// SVD Line: 1416

//  <item> SFDITEM_REG__PORT_PU7
//    <name> PU7 </name>
//    <i> [Bits 7..0] RW (@ 0x40040037) Pull-up resistor option register 7 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_PU7 >> 0) & 0xFFFFFFFF), ((PORT_PU7 = (PORT_PU7 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: PORT_PU12  --------------------------------
// SVD Line: 1425

unsigned char PORT_PU12 __AT (0x4004003C);



// --------------------------------  Register Item: PORT_PU12  ------------------------------------
// SVD Line: 1425

//  <item> SFDITEM_REG__PORT_PU12
//    <name> PU12 </name>
//    <i> [Bits 7..0] RW (@ 0x4004003C) Pull-up resistor option register 12 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_PU12 >> 0) & 0xFFFFFFFF), ((PORT_PU12 = (PORT_PU12 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: PORT_PU13  --------------------------------
// SVD Line: 1434

unsigned char PORT_PU13 __AT (0x4004003D);



// --------------------------------  Register Item: PORT_PU13  ------------------------------------
// SVD Line: 1434

//  <item> SFDITEM_REG__PORT_PU13
//    <name> PU13 </name>
//    <i> [Bits 7..0] RW (@ 0x4004003D) Pull-up resistor option register 13 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_PU13 >> 0) & 0xFFFFFFFF), ((PORT_PU13 = (PORT_PU13 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: PORT_PU14  --------------------------------
// SVD Line: 1443

unsigned char PORT_PU14 __AT (0x4004003E);



// --------------------------------  Register Item: PORT_PU14  ------------------------------------
// SVD Line: 1443

//  <item> SFDITEM_REG__PORT_PU14
//    <name> PU14 </name>
//    <i> [Bits 7..0] RW (@ 0x4004003E) Pull-up resistor option register 14 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_PU14 >> 0) & 0xFFFFFFFF), ((PORT_PU14 = (PORT_PU14 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register Item Address: PORT_PD0  --------------------------------
// SVD Line: 1452

unsigned char PORT_PD0 __AT (0x40040040);



// ---------------------------------  Register Item: PORT_PD0  ------------------------------------
// SVD Line: 1452

//  <item> SFDITEM_REG__PORT_PD0
//    <name> PD0 </name>
//    <i> [Bits 7..0] RW (@ 0x40040040) Pull-down resistor option register 0 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_PD0 >> 0) & 0xFFFFFFFF), ((PORT_PD0 = (PORT_PD0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register Item Address: PORT_PD1  --------------------------------
// SVD Line: 1461

unsigned char PORT_PD1 __AT (0x40040041);



// ---------------------------------  Register Item: PORT_PD1  ------------------------------------
// SVD Line: 1461

//  <item> SFDITEM_REG__PORT_PD1
//    <name> PD1 </name>
//    <i> [Bits 7..0] RW (@ 0x40040041) Pull-down resistor option register 1 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_PD1 >> 0) & 0xFFFFFFFF), ((PORT_PD1 = (PORT_PD1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register Item Address: PORT_PD2  --------------------------------
// SVD Line: 1470

unsigned char PORT_PD2 __AT (0x40040042);



// ---------------------------------  Register Item: PORT_PD2  ------------------------------------
// SVD Line: 1470

//  <item> SFDITEM_REG__PORT_PD2
//    <name> PD2 </name>
//    <i> [Bits 7..0] RW (@ 0x40040042) Pull-down resistor option register 2 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_PD2 >> 0) & 0xFFFFFFFF), ((PORT_PD2 = (PORT_PD2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register Item Address: PORT_PD3  --------------------------------
// SVD Line: 1479

unsigned char PORT_PD3 __AT (0x40040043);



// ---------------------------------  Register Item: PORT_PD3  ------------------------------------
// SVD Line: 1479

//  <item> SFDITEM_REG__PORT_PD3
//    <name> PD3 </name>
//    <i> [Bits 7..0] RW (@ 0x40040043) Pull-down resistor option register 3 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_PD3 >> 0) & 0xFFFFFFFF), ((PORT_PD3 = (PORT_PD3 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register Item Address: PORT_PD5  --------------------------------
// SVD Line: 1488

unsigned char PORT_PD5 __AT (0x40040045);



// ---------------------------------  Register Item: PORT_PD5  ------------------------------------
// SVD Line: 1488

//  <item> SFDITEM_REG__PORT_PD5
//    <name> PD5 </name>
//    <i> [Bits 7..0] RW (@ 0x40040045) Pull-down resistor option register 5 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_PD5 >> 0) & 0xFFFFFFFF), ((PORT_PD5 = (PORT_PD5 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register Item Address: PORT_PD6  --------------------------------
// SVD Line: 1497

unsigned char PORT_PD6 __AT (0x40040046);



// ---------------------------------  Register Item: PORT_PD6  ------------------------------------
// SVD Line: 1497

//  <item> SFDITEM_REG__PORT_PD6
//    <name> PD6 </name>
//    <i> [Bits 7..0] RW (@ 0x40040046) Pull-down resistor option register 6 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_PD6 >> 0) & 0xFFFFFFFF), ((PORT_PD6 = (PORT_PD6 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register Item Address: PORT_PD7  --------------------------------
// SVD Line: 1506

unsigned char PORT_PD7 __AT (0x40040047);



// ---------------------------------  Register Item: PORT_PD7  ------------------------------------
// SVD Line: 1506

//  <item> SFDITEM_REG__PORT_PD7
//    <name> PD7 </name>
//    <i> [Bits 7..0] RW (@ 0x40040047) Pull-down resistor option register 7 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_PD7 >> 0) & 0xFFFFFFFF), ((PORT_PD7 = (PORT_PD7 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: PORT_PD12  --------------------------------
// SVD Line: 1515

unsigned char PORT_PD12 __AT (0x4004004C);



// --------------------------------  Register Item: PORT_PD12  ------------------------------------
// SVD Line: 1515

//  <item> SFDITEM_REG__PORT_PD12
//    <name> PD12 </name>
//    <i> [Bits 7..0] RW (@ 0x4004004C) Pull-down resistor option register 12 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_PD12 >> 0) & 0xFFFFFFFF), ((PORT_PD12 = (PORT_PD12 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: PORT_PD13  --------------------------------
// SVD Line: 1524

unsigned char PORT_PD13 __AT (0x4004004D);



// --------------------------------  Register Item: PORT_PD13  ------------------------------------
// SVD Line: 1524

//  <item> SFDITEM_REG__PORT_PD13
//    <name> PD13 </name>
//    <i> [Bits 7..0] RW (@ 0x4004004D) Pull-down resistor option register 13 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_PD13 >> 0) & 0xFFFFFFFF), ((PORT_PD13 = (PORT_PD13 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: PORT_PD14  --------------------------------
// SVD Line: 1533

unsigned char PORT_PD14 __AT (0x4004004E);



// --------------------------------  Register Item: PORT_PD14  ------------------------------------
// SVD Line: 1533

//  <item> SFDITEM_REG__PORT_PD14
//    <name> PD14 </name>
//    <i> [Bits 7..0] RW (@ 0x4004004E) Pull-down resistor option register 14 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_PD14 >> 0) & 0xFFFFFFFF), ((PORT_PD14 = (PORT_PD14 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: PORT_POM0  --------------------------------
// SVD Line: 1542

unsigned char PORT_POM0 __AT (0x40040050);



// --------------------------------  Register Item: PORT_POM0  ------------------------------------
// SVD Line: 1542

//  <item> SFDITEM_REG__PORT_POM0
//    <name> POM0 </name>
//    <i> [Bits 7..0] RW (@ 0x40040050) Port output mode register 0 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_POM0 >> 0) & 0xFFFFFFFF), ((PORT_POM0 = (PORT_POM0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: PORT_POM1  --------------------------------
// SVD Line: 1551

unsigned char PORT_POM1 __AT (0x40040051);



// --------------------------------  Register Item: PORT_POM1  ------------------------------------
// SVD Line: 1551

//  <item> SFDITEM_REG__PORT_POM1
//    <name> POM1 </name>
//    <i> [Bits 7..0] RW (@ 0x40040051) Port output mode register 1 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_POM1 >> 0) & 0xFFFFFFFF), ((PORT_POM1 = (PORT_POM1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: PORT_POM2  --------------------------------
// SVD Line: 1560

unsigned char PORT_POM2 __AT (0x40040052);



// --------------------------------  Register Item: PORT_POM2  ------------------------------------
// SVD Line: 1560

//  <item> SFDITEM_REG__PORT_POM2
//    <name> POM2 </name>
//    <i> [Bits 7..0] RW (@ 0x40040052) Port output mode register 2 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_POM2 >> 0) & 0xFFFFFFFF), ((PORT_POM2 = (PORT_POM2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: PORT_POM3  --------------------------------
// SVD Line: 1569

unsigned char PORT_POM3 __AT (0x40040053);



// --------------------------------  Register Item: PORT_POM3  ------------------------------------
// SVD Line: 1569

//  <item> SFDITEM_REG__PORT_POM3
//    <name> POM3 </name>
//    <i> [Bits 7..0] RW (@ 0x40040053) Port output mode register 3 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_POM3 >> 0) & 0xFFFFFFFF), ((PORT_POM3 = (PORT_POM3 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: PORT_POM4  --------------------------------
// SVD Line: 1578

unsigned char PORT_POM4 __AT (0x40040054);



// --------------------------------  Register Item: PORT_POM4  ------------------------------------
// SVD Line: 1578

//  <item> SFDITEM_REG__PORT_POM4
//    <name> POM4 </name>
//    <i> [Bits 7..0] RW (@ 0x40040054) Port output mode register 4 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_POM4 >> 0) & 0xFFFFFFFF), ((PORT_POM4 = (PORT_POM4 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: PORT_POM5  --------------------------------
// SVD Line: 1587

unsigned char PORT_POM5 __AT (0x40040055);



// --------------------------------  Register Item: PORT_POM5  ------------------------------------
// SVD Line: 1587

//  <item> SFDITEM_REG__PORT_POM5
//    <name> POM5 </name>
//    <i> [Bits 7..0] RW (@ 0x40040055) Port output mode register 5 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_POM5 >> 0) & 0xFFFFFFFF), ((PORT_POM5 = (PORT_POM5 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: PORT_POM6  --------------------------------
// SVD Line: 1596

unsigned char PORT_POM6 __AT (0x40040056);



// --------------------------------  Register Item: PORT_POM6  ------------------------------------
// SVD Line: 1596

//  <item> SFDITEM_REG__PORT_POM6
//    <name> POM6 </name>
//    <i> [Bits 7..0] RW (@ 0x40040056) Port output mode register 6 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_POM6 >> 0) & 0xFFFFFFFF), ((PORT_POM6 = (PORT_POM6 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: PORT_POM7  --------------------------------
// SVD Line: 1605

unsigned char PORT_POM7 __AT (0x40040057);



// --------------------------------  Register Item: PORT_POM7  ------------------------------------
// SVD Line: 1605

//  <item> SFDITEM_REG__PORT_POM7
//    <name> POM7 </name>
//    <i> [Bits 7..0] RW (@ 0x40040057) Port output mode register 7 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_POM7 >> 0) & 0xFFFFFFFF), ((PORT_POM7 = (PORT_POM7 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: PORT_POM12  -------------------------------
// SVD Line: 1614

unsigned char PORT_POM12 __AT (0x4004005C);



// --------------------------------  Register Item: PORT_POM12  -----------------------------------
// SVD Line: 1614

//  <item> SFDITEM_REG__PORT_POM12
//    <name> POM12 </name>
//    <i> [Bits 7..0] RW (@ 0x4004005C) Port output mode register 12 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_POM12 >> 0) & 0xFFFFFFFF), ((PORT_POM12 = (PORT_POM12 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: PORT_POM13  -------------------------------
// SVD Line: 1623

unsigned char PORT_POM13 __AT (0x4004005D);



// --------------------------------  Register Item: PORT_POM13  -----------------------------------
// SVD Line: 1623

//  <item> SFDITEM_REG__PORT_POM13
//    <name> POM13 </name>
//    <i> [Bits 7..0] RW (@ 0x4004005D) Port output mode register 13 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_POM13 >> 0) & 0xFFFFFFFF), ((PORT_POM13 = (PORT_POM13 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: PORT_POM14  -------------------------------
// SVD Line: 1632

unsigned char PORT_POM14 __AT (0x4004005E);



// --------------------------------  Register Item: PORT_POM14  -----------------------------------
// SVD Line: 1632

//  <item> SFDITEM_REG__PORT_POM14
//    <name> POM14 </name>
//    <i> [Bits 7..0] RW (@ 0x4004005E) Port output mode register 14 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_POM14 >> 0) & 0xFFFFFFFF), ((PORT_POM14 = (PORT_POM14 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: PORT_PMC0  --------------------------------
// SVD Line: 1641

unsigned char PORT_PMC0 __AT (0x40040060);



// --------------------------------  Register Item: PORT_PMC0  ------------------------------------
// SVD Line: 1641

//  <item> SFDITEM_REG__PORT_PMC0
//    <name> PMC0 </name>
//    <i> [Bits 7..0] RW (@ 0x40040060) Port mode control register 0 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_PMC0 >> 0) & 0xFFFFFFFF), ((PORT_PMC0 = (PORT_PMC0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: PORT_PMC1  --------------------------------
// SVD Line: 1650

unsigned char PORT_PMC1 __AT (0x40040061);



// --------------------------------  Register Item: PORT_PMC1  ------------------------------------
// SVD Line: 1650

//  <item> SFDITEM_REG__PORT_PMC1
//    <name> PMC1 </name>
//    <i> [Bits 7..0] RW (@ 0x40040061) Port mode control register 1 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_PMC1 >> 0) & 0xFFFFFFFF), ((PORT_PMC1 = (PORT_PMC1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: PORT_PMC2  --------------------------------
// SVD Line: 1659

unsigned char PORT_PMC2 __AT (0x40040062);



// --------------------------------  Register Item: PORT_PMC2  ------------------------------------
// SVD Line: 1659

//  <item> SFDITEM_REG__PORT_PMC2
//    <name> PMC2 </name>
//    <i> [Bits 7..0] RW (@ 0x40040062) Port mode control register 2 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_PMC2 >> 0) & 0xFFFFFFFF), ((PORT_PMC2 = (PORT_PMC2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: PORT_PMC3  --------------------------------
// SVD Line: 1668

unsigned char PORT_PMC3 __AT (0x40040063);



// --------------------------------  Register Item: PORT_PMC3  ------------------------------------
// SVD Line: 1668

//  <item> SFDITEM_REG__PORT_PMC3
//    <name> PMC3 </name>
//    <i> [Bits 7..0] RW (@ 0x40040063) Port mode control register 3 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_PMC3 >> 0) & 0xFFFFFFFF), ((PORT_PMC3 = (PORT_PMC3 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: PORT_PMC5  --------------------------------
// SVD Line: 1677

unsigned char PORT_PMC5 __AT (0x40040065);



// --------------------------------  Register Item: PORT_PMC5  ------------------------------------
// SVD Line: 1677

//  <item> SFDITEM_REG__PORT_PMC5
//    <name> PMC5 </name>
//    <i> [Bits 7..0] RW (@ 0x40040065) Port mode control register 5 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_PMC5 >> 0) & 0xFFFFFFFF), ((PORT_PMC5 = (PORT_PMC5 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: PORT_PMC6  --------------------------------
// SVD Line: 1686

unsigned char PORT_PMC6 __AT (0x40040066);



// --------------------------------  Register Item: PORT_PMC6  ------------------------------------
// SVD Line: 1686

//  <item> SFDITEM_REG__PORT_PMC6
//    <name> PMC6 </name>
//    <i> [Bits 7..0] RW (@ 0x40040066) Port mode control register 6 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_PMC6 >> 0) & 0xFFFFFFFF), ((PORT_PMC6 = (PORT_PMC6 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: PORT_PMC7  --------------------------------
// SVD Line: 1695

unsigned char PORT_PMC7 __AT (0x40040067);



// --------------------------------  Register Item: PORT_PMC7  ------------------------------------
// SVD Line: 1695

//  <item> SFDITEM_REG__PORT_PMC7
//    <name> PMC7 </name>
//    <i> [Bits 7..0] RW (@ 0x40040067) Port mode control register 7 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_PMC7 >> 0) & 0xFFFFFFFF), ((PORT_PMC7 = (PORT_PMC7 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: PORT_PMC12  -------------------------------
// SVD Line: 1704

unsigned char PORT_PMC12 __AT (0x4004006C);



// --------------------------------  Register Item: PORT_PMC12  -----------------------------------
// SVD Line: 1704

//  <item> SFDITEM_REG__PORT_PMC12
//    <name> PMC12 </name>
//    <i> [Bits 7..0] RW (@ 0x4004006C) Port mode control register 12 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_PMC12 >> 0) & 0xFFFFFFFF), ((PORT_PMC12 = (PORT_PMC12 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: PORT_PMC13  -------------------------------
// SVD Line: 1713

unsigned char PORT_PMC13 __AT (0x4004006D);



// --------------------------------  Register Item: PORT_PMC13  -----------------------------------
// SVD Line: 1713

//  <item> SFDITEM_REG__PORT_PMC13
//    <name> PMC13 </name>
//    <i> [Bits 7..0] RW (@ 0x4004006D) Port mode control register 13 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_PMC13 >> 0) & 0xFFFFFFFF), ((PORT_PMC13 = (PORT_PMC13 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: PORT_PMC14  -------------------------------
// SVD Line: 1722

unsigned char PORT_PMC14 __AT (0x4004006E);



// --------------------------------  Register Item: PORT_PMC14  -----------------------------------
// SVD Line: 1722

//  <item> SFDITEM_REG__PORT_PMC14
//    <name> PMC14 </name>
//    <i> [Bits 7..0] RW (@ 0x4004006E) Port mode control register 14 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_PMC14 >> 0) & 0xFFFFFFFF), ((PORT_PMC14 = (PORT_PMC14 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: PORT_PSET0  -------------------------------
// SVD Line: 1731

unsigned char PORT_PSET0 __AT (0x40040010);



// --------------------------------  Register Item: PORT_PSET0  -----------------------------------
// SVD Line: 1731

//  <item> SFDITEM_REG__PORT_PSET0
//    <name> PSET0 </name>
//    <i> [Bits 7..0] RW (@ 0x40040010) Port set register 0 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_PSET0 >> 0) & 0xFFFFFFFF), ((PORT_PSET0 = (PORT_PSET0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: PORT_PSET1  -------------------------------
// SVD Line: 1740

unsigned char PORT_PSET1 __AT (0x40040011);



// --------------------------------  Register Item: PORT_PSET1  -----------------------------------
// SVD Line: 1740

//  <item> SFDITEM_REG__PORT_PSET1
//    <name> PSET1 </name>
//    <i> [Bits 7..0] RW (@ 0x40040011) Port set register 1 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_PSET1 >> 0) & 0xFFFFFFFF), ((PORT_PSET1 = (PORT_PSET1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: PORT_PSET2  -------------------------------
// SVD Line: 1749

unsigned char PORT_PSET2 __AT (0x40040012);



// --------------------------------  Register Item: PORT_PSET2  -----------------------------------
// SVD Line: 1749

//  <item> SFDITEM_REG__PORT_PSET2
//    <name> PSET2 </name>
//    <i> [Bits 7..0] RW (@ 0x40040012) Port set register 2 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_PSET2 >> 0) & 0xFFFFFFFF), ((PORT_PSET2 = (PORT_PSET2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: PORT_PSET3  -------------------------------
// SVD Line: 1758

unsigned char PORT_PSET3 __AT (0x40040013);



// --------------------------------  Register Item: PORT_PSET3  -----------------------------------
// SVD Line: 1758

//  <item> SFDITEM_REG__PORT_PSET3
//    <name> PSET3 </name>
//    <i> [Bits 7..0] RW (@ 0x40040013) Port set register 3 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_PSET3 >> 0) & 0xFFFFFFFF), ((PORT_PSET3 = (PORT_PSET3 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: PORT_PSET4  -------------------------------
// SVD Line: 1767

unsigned char PORT_PSET4 __AT (0x40040014);



// --------------------------------  Register Item: PORT_PSET4  -----------------------------------
// SVD Line: 1767

//  <item> SFDITEM_REG__PORT_PSET4
//    <name> PSET4 </name>
//    <i> [Bits 7..0] RW (@ 0x40040014) Port set register 4 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_PSET4 >> 0) & 0xFFFFFFFF), ((PORT_PSET4 = (PORT_PSET4 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: PORT_PSET5  -------------------------------
// SVD Line: 1776

unsigned char PORT_PSET5 __AT (0x40040015);



// --------------------------------  Register Item: PORT_PSET5  -----------------------------------
// SVD Line: 1776

//  <item> SFDITEM_REG__PORT_PSET5
//    <name> PSET5 </name>
//    <i> [Bits 7..0] RW (@ 0x40040015) Port set register 5 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_PSET5 >> 0) & 0xFFFFFFFF), ((PORT_PSET5 = (PORT_PSET5 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: PORT_PSET6  -------------------------------
// SVD Line: 1785

unsigned char PORT_PSET6 __AT (0x40040016);



// --------------------------------  Register Item: PORT_PSET6  -----------------------------------
// SVD Line: 1785

//  <item> SFDITEM_REG__PORT_PSET6
//    <name> PSET6 </name>
//    <i> [Bits 7..0] RW (@ 0x40040016) Port set register 6 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_PSET6 >> 0) & 0xFFFFFFFF), ((PORT_PSET6 = (PORT_PSET6 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: PORT_PSET7  -------------------------------
// SVD Line: 1794

unsigned char PORT_PSET7 __AT (0x40040017);



// --------------------------------  Register Item: PORT_PSET7  -----------------------------------
// SVD Line: 1794

//  <item> SFDITEM_REG__PORT_PSET7
//    <name> PSET7 </name>
//    <i> [Bits 7..0] RW (@ 0x40040017) Port set register 7 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_PSET7 >> 0) & 0xFFFFFFFF), ((PORT_PSET7 = (PORT_PSET7 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: PORT_PSET12  -------------------------------
// SVD Line: 1803

unsigned char PORT_PSET12 __AT (0x4004001C);



// -------------------------------  Register Item: PORT_PSET12  -----------------------------------
// SVD Line: 1803

//  <item> SFDITEM_REG__PORT_PSET12
//    <name> PSET12 </name>
//    <i> [Bits 7..0] RW (@ 0x4004001C) Port set register 12 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_PSET12 >> 0) & 0xFFFFFFFF), ((PORT_PSET12 = (PORT_PSET12 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: PORT_PSET13  -------------------------------
// SVD Line: 1812

unsigned char PORT_PSET13 __AT (0x4004001D);



// -------------------------------  Register Item: PORT_PSET13  -----------------------------------
// SVD Line: 1812

//  <item> SFDITEM_REG__PORT_PSET13
//    <name> PSET13 </name>
//    <i> [Bits 7..0] RW (@ 0x4004001D) Port set register 13 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_PSET13 >> 0) & 0xFFFFFFFF), ((PORT_PSET13 = (PORT_PSET13 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: PORT_PSET14  -------------------------------
// SVD Line: 1821

unsigned char PORT_PSET14 __AT (0x4004001E);



// -------------------------------  Register Item: PORT_PSET14  -----------------------------------
// SVD Line: 1821

//  <item> SFDITEM_REG__PORT_PSET14
//    <name> PSET14 </name>
//    <i> [Bits 7..0] RW (@ 0x4004001E) Port set register 14 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_PSET14 >> 0) & 0xFFFFFFFF), ((PORT_PSET14 = (PORT_PSET14 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: PORT_PCLR0  -------------------------------
// SVD Line: 1830

unsigned char PORT_PCLR0 __AT (0x40040070);



// --------------------------------  Register Item: PORT_PCLR0  -----------------------------------
// SVD Line: 1830

//  <item> SFDITEM_REG__PORT_PCLR0
//    <name> PCLR0 </name>
//    <i> [Bits 7..0] RW (@ 0x40040070) Port clear register 0 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_PCLR0 >> 0) & 0xFFFFFFFF), ((PORT_PCLR0 = (PORT_PCLR0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: PORT_PCLR1  -------------------------------
// SVD Line: 1839

unsigned char PORT_PCLR1 __AT (0x40040071);



// --------------------------------  Register Item: PORT_PCLR1  -----------------------------------
// SVD Line: 1839

//  <item> SFDITEM_REG__PORT_PCLR1
//    <name> PCLR1 </name>
//    <i> [Bits 7..0] RW (@ 0x40040071) Port clear register 1 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_PCLR1 >> 0) & 0xFFFFFFFF), ((PORT_PCLR1 = (PORT_PCLR1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: PORT_PCLR2  -------------------------------
// SVD Line: 1848

unsigned char PORT_PCLR2 __AT (0x40040072);



// --------------------------------  Register Item: PORT_PCLR2  -----------------------------------
// SVD Line: 1848

//  <item> SFDITEM_REG__PORT_PCLR2
//    <name> PCLR2 </name>
//    <i> [Bits 7..0] RW (@ 0x40040072) Port clear register 2 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_PCLR2 >> 0) & 0xFFFFFFFF), ((PORT_PCLR2 = (PORT_PCLR2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: PORT_PCLR3  -------------------------------
// SVD Line: 1857

unsigned char PORT_PCLR3 __AT (0x40040073);



// --------------------------------  Register Item: PORT_PCLR3  -----------------------------------
// SVD Line: 1857

//  <item> SFDITEM_REG__PORT_PCLR3
//    <name> PCLR3 </name>
//    <i> [Bits 7..0] RW (@ 0x40040073) Port clear register 3 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_PCLR3 >> 0) & 0xFFFFFFFF), ((PORT_PCLR3 = (PORT_PCLR3 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: PORT_PCLR4  -------------------------------
// SVD Line: 1866

unsigned char PORT_PCLR4 __AT (0x40040074);



// --------------------------------  Register Item: PORT_PCLR4  -----------------------------------
// SVD Line: 1866

//  <item> SFDITEM_REG__PORT_PCLR4
//    <name> PCLR4 </name>
//    <i> [Bits 7..0] RW (@ 0x40040074) Port clear register 4 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_PCLR4 >> 0) & 0xFFFFFFFF), ((PORT_PCLR4 = (PORT_PCLR4 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: PORT_PCLR5  -------------------------------
// SVD Line: 1875

unsigned char PORT_PCLR5 __AT (0x40040075);



// --------------------------------  Register Item: PORT_PCLR5  -----------------------------------
// SVD Line: 1875

//  <item> SFDITEM_REG__PORT_PCLR5
//    <name> PCLR5 </name>
//    <i> [Bits 7..0] RW (@ 0x40040075) Port clear register 5 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_PCLR5 >> 0) & 0xFFFFFFFF), ((PORT_PCLR5 = (PORT_PCLR5 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: PORT_PCLR6  -------------------------------
// SVD Line: 1884

unsigned char PORT_PCLR6 __AT (0x40040076);



// --------------------------------  Register Item: PORT_PCLR6  -----------------------------------
// SVD Line: 1884

//  <item> SFDITEM_REG__PORT_PCLR6
//    <name> PCLR6 </name>
//    <i> [Bits 7..0] RW (@ 0x40040076) Port clear register 6 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_PCLR6 >> 0) & 0xFFFFFFFF), ((PORT_PCLR6 = (PORT_PCLR6 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: PORT_PCLR7  -------------------------------
// SVD Line: 1893

unsigned char PORT_PCLR7 __AT (0x40040077);



// --------------------------------  Register Item: PORT_PCLR7  -----------------------------------
// SVD Line: 1893

//  <item> SFDITEM_REG__PORT_PCLR7
//    <name> PCLR7 </name>
//    <i> [Bits 7..0] RW (@ 0x40040077) Port clear register 7 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_PCLR7 >> 0) & 0xFFFFFFFF), ((PORT_PCLR7 = (PORT_PCLR7 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: PORT_PCLR12  -------------------------------
// SVD Line: 1902

unsigned char PORT_PCLR12 __AT (0x4004007C);



// -------------------------------  Register Item: PORT_PCLR12  -----------------------------------
// SVD Line: 1902

//  <item> SFDITEM_REG__PORT_PCLR12
//    <name> PCLR12 </name>
//    <i> [Bits 7..0] RW (@ 0x4004007C) Port clear register 12 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_PCLR12 >> 0) & 0xFFFFFFFF), ((PORT_PCLR12 = (PORT_PCLR12 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: PORT_PCLR13  -------------------------------
// SVD Line: 1911

unsigned char PORT_PCLR13 __AT (0x4004007D);



// -------------------------------  Register Item: PORT_PCLR13  -----------------------------------
// SVD Line: 1911

//  <item> SFDITEM_REG__PORT_PCLR13
//    <name> PCLR13 </name>
//    <i> [Bits 7..0] RW (@ 0x4004007D) Port clear register 13 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_PCLR13 >> 0) & 0xFFFFFFFF), ((PORT_PCLR13 = (PORT_PCLR13 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: PORT_PCLR14  -------------------------------
// SVD Line: 1920

unsigned char PORT_PCLR14 __AT (0x4004007E);



// -------------------------------  Register Item: PORT_PCLR14  -----------------------------------
// SVD Line: 1920

//  <item> SFDITEM_REG__PORT_PCLR14
//    <name> PCLR14 </name>
//    <i> [Bits 7..0] RW (@ 0x4004007E) Port clear register 14 </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_PCLR14 >> 0) & 0xFFFFFFFF), ((PORT_PCLR14 = (PORT_PCLR14 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: PORT_P00CFG  -------------------------------
// SVD Line: 1929

unsigned char PORT_P00CFG __AT (0x40040800);



// -------------------------------  Field Item: PORT_P00CFG_CFG  ----------------------------------
// SVD Line: 1938

//  <item> SFDITEM_FIELD__PORT_P00CFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40040800) \nAlterate Output Function configuration register\n0 : GPIO = Port used as GPIO\n1 : TO10 = Port used as TO10\n2 : TO11 = Port used as TO11\n3 : TO12 = Port used as TO12\n4 : TO13 = Port used as TO13\n5 : SDO00/TxD0 = Port used as SDO00/TxD0\n6 : SDO20/TxD2 = Port used as SDO20/TxD2\n7 : CLKBUZ0 = Port used as CLKBUZ0\n8 : SCLKO00 = Port used as SCLK00 output\n9 : SCLKO20 = Port used as SCLK20 output\n10 : TXD1 = Port used as TXD1\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_P00CFG ) </loc>
//      <o.3..0> CFG
//        <0=> 0: GPIO = Port used as GPIO
//        <1=> 1: TO10 = Port used as TO10
//        <2=> 2: TO11 = Port used as TO11
//        <3=> 3: TO12 = Port used as TO12
//        <4=> 4: TO13 = Port used as TO13
//        <5=> 5: SDO00/TxD0 = Port used as SDO00/TxD0
//        <6=> 6: SDO20/TxD2 = Port used as SDO20/TxD2
//        <7=> 7: CLKBUZ0 = Port used as CLKBUZ0
//        <8=> 8: SCLKO00 = Port used as SCLK00 output
//        <9=> 9: SCLKO20 = Port used as SCLK20 output
//        <10=> 10: TXD1 = Port used as TXD1
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// -------------------------------  Register RTree: PORT_P00CFG  ----------------------------------
// SVD Line: 1929

//  <rtree> SFDITEM_REG__PORT_P00CFG
//    <name> P00CFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40040800) Alterate Output Function configuration register </i>
//    <loc> ( (unsigned char)((PORT_P00CFG >> 0) & 0xFF), ((PORT_P00CFG = (PORT_P00CFG & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_P00CFG_CFG </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PORT_P01CFG  -------------------------------
// SVD Line: 2003

unsigned char PORT_P01CFG __AT (0x40040801);



// -------------------------------  Field Item: PORT_P01CFG_CFG  ----------------------------------
// SVD Line: 1938

//  <item> SFDITEM_FIELD__PORT_P01CFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40040801) \nAlterate Output Function configuration register\n0 : GPIO = Port used as GPIO\n1 : TO10 = Port used as TO10\n2 : TO11 = Port used as TO11\n3 : TO12 = Port used as TO12\n4 : TO13 = Port used as TO13\n5 : SDO00/TxD0 = Port used as SDO00/TxD0\n6 : SDO20/TxD2 = Port used as SDO20/TxD2\n7 : CLKBUZ0 = Port used as CLKBUZ0\n8 : SCLKO00 = Port used as SCLK00 output\n9 : SCLKO20 = Port used as SCLK20 output\n10 : TXD1 = Port used as TXD1\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_P01CFG ) </loc>
//      <o.3..0> CFG
//        <0=> 0: GPIO = Port used as GPIO
//        <1=> 1: TO10 = Port used as TO10
//        <2=> 2: TO11 = Port used as TO11
//        <3=> 3: TO12 = Port used as TO12
//        <4=> 4: TO13 = Port used as TO13
//        <5=> 5: SDO00/TxD0 = Port used as SDO00/TxD0
//        <6=> 6: SDO20/TxD2 = Port used as SDO20/TxD2
//        <7=> 7: CLKBUZ0 = Port used as CLKBUZ0
//        <8=> 8: SCLKO00 = Port used as SCLK00 output
//        <9=> 9: SCLKO20 = Port used as SCLK20 output
//        <10=> 10: TXD1 = Port used as TXD1
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// -------------------------------  Register RTree: PORT_P01CFG  ----------------------------------
// SVD Line: 2003

//  <rtree> SFDITEM_REG__PORT_P01CFG
//    <name> P01CFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40040801) Alterate Output Function configuration register </i>
//    <loc> ( (unsigned char)((PORT_P01CFG >> 0) & 0xFF), ((PORT_P01CFG = (PORT_P01CFG & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_P01CFG_CFG </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PORT_P10CFG  -------------------------------
// SVD Line: 2008

unsigned char PORT_P10CFG __AT (0x40040808);



// -------------------------------  Field Item: PORT_P10CFG_CFG  ----------------------------------
// SVD Line: 1938

//  <item> SFDITEM_FIELD__PORT_P10CFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40040808) \nAlterate Output Function configuration register\n0 : GPIO = Port used as GPIO\n1 : TO10 = Port used as TO10\n2 : TO11 = Port used as TO11\n3 : TO12 = Port used as TO12\n4 : TO13 = Port used as TO13\n5 : SDO00/TxD0 = Port used as SDO00/TxD0\n6 : SDO20/TxD2 = Port used as SDO20/TxD2\n7 : CLKBUZ0 = Port used as CLKBUZ0\n8 : SCLKO00 = Port used as SCLK00 output\n9 : SCLKO20 = Port used as SCLK20 output\n10 : TXD1 = Port used as TXD1\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_P10CFG ) </loc>
//      <o.3..0> CFG
//        <0=> 0: GPIO = Port used as GPIO
//        <1=> 1: TO10 = Port used as TO10
//        <2=> 2: TO11 = Port used as TO11
//        <3=> 3: TO12 = Port used as TO12
//        <4=> 4: TO13 = Port used as TO13
//        <5=> 5: SDO00/TxD0 = Port used as SDO00/TxD0
//        <6=> 6: SDO20/TxD2 = Port used as SDO20/TxD2
//        <7=> 7: CLKBUZ0 = Port used as CLKBUZ0
//        <8=> 8: SCLKO00 = Port used as SCLK00 output
//        <9=> 9: SCLKO20 = Port used as SCLK20 output
//        <10=> 10: TXD1 = Port used as TXD1
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// -------------------------------  Register RTree: PORT_P10CFG  ----------------------------------
// SVD Line: 2008

//  <rtree> SFDITEM_REG__PORT_P10CFG
//    <name> P10CFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40040808) Alterate Output Function configuration register </i>
//    <loc> ( (unsigned char)((PORT_P10CFG >> 0) & 0xFF), ((PORT_P10CFG = (PORT_P10CFG & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_P10CFG_CFG </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PORT_P11CFG  -------------------------------
// SVD Line: 2013

unsigned char PORT_P11CFG __AT (0x40040809);



// -------------------------------  Field Item: PORT_P11CFG_CFG  ----------------------------------
// SVD Line: 1938

//  <item> SFDITEM_FIELD__PORT_P11CFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40040809) \nAlterate Output Function configuration register\n0 : GPIO = Port used as GPIO\n1 : TO10 = Port used as TO10\n2 : TO11 = Port used as TO11\n3 : TO12 = Port used as TO12\n4 : TO13 = Port used as TO13\n5 : SDO00/TxD0 = Port used as SDO00/TxD0\n6 : SDO20/TxD2 = Port used as SDO20/TxD2\n7 : CLKBUZ0 = Port used as CLKBUZ0\n8 : SCLKO00 = Port used as SCLK00 output\n9 : SCLKO20 = Port used as SCLK20 output\n10 : TXD1 = Port used as TXD1\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_P11CFG ) </loc>
//      <o.3..0> CFG
//        <0=> 0: GPIO = Port used as GPIO
//        <1=> 1: TO10 = Port used as TO10
//        <2=> 2: TO11 = Port used as TO11
//        <3=> 3: TO12 = Port used as TO12
//        <4=> 4: TO13 = Port used as TO13
//        <5=> 5: SDO00/TxD0 = Port used as SDO00/TxD0
//        <6=> 6: SDO20/TxD2 = Port used as SDO20/TxD2
//        <7=> 7: CLKBUZ0 = Port used as CLKBUZ0
//        <8=> 8: SCLKO00 = Port used as SCLK00 output
//        <9=> 9: SCLKO20 = Port used as SCLK20 output
//        <10=> 10: TXD1 = Port used as TXD1
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// -------------------------------  Register RTree: PORT_P11CFG  ----------------------------------
// SVD Line: 2013

//  <rtree> SFDITEM_REG__PORT_P11CFG
//    <name> P11CFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40040809) Alterate Output Function configuration register </i>
//    <loc> ( (unsigned char)((PORT_P11CFG >> 0) & 0xFF), ((PORT_P11CFG = (PORT_P11CFG & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_P11CFG_CFG </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PORT_P12CFG  -------------------------------
// SVD Line: 2018

unsigned char PORT_P12CFG __AT (0x4004080A);



// -------------------------------  Field Item: PORT_P12CFG_CFG  ----------------------------------
// SVD Line: 1938

//  <item> SFDITEM_FIELD__PORT_P12CFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x4004080A) \nAlterate Output Function configuration register\n0 : GPIO = Port used as GPIO\n1 : TO10 = Port used as TO10\n2 : TO11 = Port used as TO11\n3 : TO12 = Port used as TO12\n4 : TO13 = Port used as TO13\n5 : SDO00/TxD0 = Port used as SDO00/TxD0\n6 : SDO20/TxD2 = Port used as SDO20/TxD2\n7 : CLKBUZ0 = Port used as CLKBUZ0\n8 : SCLKO00 = Port used as SCLK00 output\n9 : SCLKO20 = Port used as SCLK20 output\n10 : TXD1 = Port used as TXD1\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_P12CFG ) </loc>
//      <o.3..0> CFG
//        <0=> 0: GPIO = Port used as GPIO
//        <1=> 1: TO10 = Port used as TO10
//        <2=> 2: TO11 = Port used as TO11
//        <3=> 3: TO12 = Port used as TO12
//        <4=> 4: TO13 = Port used as TO13
//        <5=> 5: SDO00/TxD0 = Port used as SDO00/TxD0
//        <6=> 6: SDO20/TxD2 = Port used as SDO20/TxD2
//        <7=> 7: CLKBUZ0 = Port used as CLKBUZ0
//        <8=> 8: SCLKO00 = Port used as SCLK00 output
//        <9=> 9: SCLKO20 = Port used as SCLK20 output
//        <10=> 10: TXD1 = Port used as TXD1
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// -------------------------------  Register RTree: PORT_P12CFG  ----------------------------------
// SVD Line: 2018

//  <rtree> SFDITEM_REG__PORT_P12CFG
//    <name> P12CFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4004080A) Alterate Output Function configuration register </i>
//    <loc> ( (unsigned char)((PORT_P12CFG >> 0) & 0xFF), ((PORT_P12CFG = (PORT_P12CFG & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_P12CFG_CFG </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PORT_P13CFG  -------------------------------
// SVD Line: 2023

unsigned char PORT_P13CFG __AT (0x4004080B);



// -------------------------------  Field Item: PORT_P13CFG_CFG  ----------------------------------
// SVD Line: 1938

//  <item> SFDITEM_FIELD__PORT_P13CFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x4004080B) \nAlterate Output Function configuration register\n0 : GPIO = Port used as GPIO\n1 : TO10 = Port used as TO10\n2 : TO11 = Port used as TO11\n3 : TO12 = Port used as TO12\n4 : TO13 = Port used as TO13\n5 : SDO00/TxD0 = Port used as SDO00/TxD0\n6 : SDO20/TxD2 = Port used as SDO20/TxD2\n7 : CLKBUZ0 = Port used as CLKBUZ0\n8 : SCLKO00 = Port used as SCLK00 output\n9 : SCLKO20 = Port used as SCLK20 output\n10 : TXD1 = Port used as TXD1\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_P13CFG ) </loc>
//      <o.3..0> CFG
//        <0=> 0: GPIO = Port used as GPIO
//        <1=> 1: TO10 = Port used as TO10
//        <2=> 2: TO11 = Port used as TO11
//        <3=> 3: TO12 = Port used as TO12
//        <4=> 4: TO13 = Port used as TO13
//        <5=> 5: SDO00/TxD0 = Port used as SDO00/TxD0
//        <6=> 6: SDO20/TxD2 = Port used as SDO20/TxD2
//        <7=> 7: CLKBUZ0 = Port used as CLKBUZ0
//        <8=> 8: SCLKO00 = Port used as SCLK00 output
//        <9=> 9: SCLKO20 = Port used as SCLK20 output
//        <10=> 10: TXD1 = Port used as TXD1
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// -------------------------------  Register RTree: PORT_P13CFG  ----------------------------------
// SVD Line: 2023

//  <rtree> SFDITEM_REG__PORT_P13CFG
//    <name> P13CFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4004080B) Alterate Output Function configuration register </i>
//    <loc> ( (unsigned char)((PORT_P13CFG >> 0) & 0xFF), ((PORT_P13CFG = (PORT_P13CFG & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_P13CFG_CFG </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PORT_P14CFG  -------------------------------
// SVD Line: 2028

unsigned char PORT_P14CFG __AT (0x4004080C);



// -------------------------------  Field Item: PORT_P14CFG_CFG  ----------------------------------
// SVD Line: 1938

//  <item> SFDITEM_FIELD__PORT_P14CFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x4004080C) \nAlterate Output Function configuration register\n0 : GPIO = Port used as GPIO\n1 : TO10 = Port used as TO10\n2 : TO11 = Port used as TO11\n3 : TO12 = Port used as TO12\n4 : TO13 = Port used as TO13\n5 : SDO00/TxD0 = Port used as SDO00/TxD0\n6 : SDO20/TxD2 = Port used as SDO20/TxD2\n7 : CLKBUZ0 = Port used as CLKBUZ0\n8 : SCLKO00 = Port used as SCLK00 output\n9 : SCLKO20 = Port used as SCLK20 output\n10 : TXD1 = Port used as TXD1\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_P14CFG ) </loc>
//      <o.3..0> CFG
//        <0=> 0: GPIO = Port used as GPIO
//        <1=> 1: TO10 = Port used as TO10
//        <2=> 2: TO11 = Port used as TO11
//        <3=> 3: TO12 = Port used as TO12
//        <4=> 4: TO13 = Port used as TO13
//        <5=> 5: SDO00/TxD0 = Port used as SDO00/TxD0
//        <6=> 6: SDO20/TxD2 = Port used as SDO20/TxD2
//        <7=> 7: CLKBUZ0 = Port used as CLKBUZ0
//        <8=> 8: SCLKO00 = Port used as SCLK00 output
//        <9=> 9: SCLKO20 = Port used as SCLK20 output
//        <10=> 10: TXD1 = Port used as TXD1
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// -------------------------------  Register RTree: PORT_P14CFG  ----------------------------------
// SVD Line: 2028

//  <rtree> SFDITEM_REG__PORT_P14CFG
//    <name> P14CFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4004080C) Alterate Output Function configuration register </i>
//    <loc> ( (unsigned char)((PORT_P14CFG >> 0) & 0xFF), ((PORT_P14CFG = (PORT_P14CFG & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_P14CFG_CFG </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PORT_P15CFG  -------------------------------
// SVD Line: 2033

unsigned char PORT_P15CFG __AT (0x4004080D);



// -------------------------------  Field Item: PORT_P15CFG_CFG  ----------------------------------
// SVD Line: 1938

//  <item> SFDITEM_FIELD__PORT_P15CFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x4004080D) \nAlterate Output Function configuration register\n0 : GPIO = Port used as GPIO\n1 : TO10 = Port used as TO10\n2 : TO11 = Port used as TO11\n3 : TO12 = Port used as TO12\n4 : TO13 = Port used as TO13\n5 : SDO00/TxD0 = Port used as SDO00/TxD0\n6 : SDO20/TxD2 = Port used as SDO20/TxD2\n7 : CLKBUZ0 = Port used as CLKBUZ0\n8 : SCLKO00 = Port used as SCLK00 output\n9 : SCLKO20 = Port used as SCLK20 output\n10 : TXD1 = Port used as TXD1\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_P15CFG ) </loc>
//      <o.3..0> CFG
//        <0=> 0: GPIO = Port used as GPIO
//        <1=> 1: TO10 = Port used as TO10
//        <2=> 2: TO11 = Port used as TO11
//        <3=> 3: TO12 = Port used as TO12
//        <4=> 4: TO13 = Port used as TO13
//        <5=> 5: SDO00/TxD0 = Port used as SDO00/TxD0
//        <6=> 6: SDO20/TxD2 = Port used as SDO20/TxD2
//        <7=> 7: CLKBUZ0 = Port used as CLKBUZ0
//        <8=> 8: SCLKO00 = Port used as SCLK00 output
//        <9=> 9: SCLKO20 = Port used as SCLK20 output
//        <10=> 10: TXD1 = Port used as TXD1
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// -------------------------------  Register RTree: PORT_P15CFG  ----------------------------------
// SVD Line: 2033

//  <rtree> SFDITEM_REG__PORT_P15CFG
//    <name> P15CFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4004080D) Alterate Output Function configuration register </i>
//    <loc> ( (unsigned char)((PORT_P15CFG >> 0) & 0xFF), ((PORT_P15CFG = (PORT_P15CFG & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_P15CFG_CFG </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PORT_P16CFG  -------------------------------
// SVD Line: 2038

unsigned char PORT_P16CFG __AT (0x4004080E);



// -------------------------------  Field Item: PORT_P16CFG_CFG  ----------------------------------
// SVD Line: 1938

//  <item> SFDITEM_FIELD__PORT_P16CFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x4004080E) \nAlterate Output Function configuration register\n0 : GPIO = Port used as GPIO\n1 : TO10 = Port used as TO10\n2 : TO11 = Port used as TO11\n3 : TO12 = Port used as TO12\n4 : TO13 = Port used as TO13\n5 : SDO00/TxD0 = Port used as SDO00/TxD0\n6 : SDO20/TxD2 = Port used as SDO20/TxD2\n7 : CLKBUZ0 = Port used as CLKBUZ0\n8 : SCLKO00 = Port used as SCLK00 output\n9 : SCLKO20 = Port used as SCLK20 output\n10 : TXD1 = Port used as TXD1\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_P16CFG ) </loc>
//      <o.3..0> CFG
//        <0=> 0: GPIO = Port used as GPIO
//        <1=> 1: TO10 = Port used as TO10
//        <2=> 2: TO11 = Port used as TO11
//        <3=> 3: TO12 = Port used as TO12
//        <4=> 4: TO13 = Port used as TO13
//        <5=> 5: SDO00/TxD0 = Port used as SDO00/TxD0
//        <6=> 6: SDO20/TxD2 = Port used as SDO20/TxD2
//        <7=> 7: CLKBUZ0 = Port used as CLKBUZ0
//        <8=> 8: SCLKO00 = Port used as SCLK00 output
//        <9=> 9: SCLKO20 = Port used as SCLK20 output
//        <10=> 10: TXD1 = Port used as TXD1
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// -------------------------------  Register RTree: PORT_P16CFG  ----------------------------------
// SVD Line: 2038

//  <rtree> SFDITEM_REG__PORT_P16CFG
//    <name> P16CFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4004080E) Alterate Output Function configuration register </i>
//    <loc> ( (unsigned char)((PORT_P16CFG >> 0) & 0xFF), ((PORT_P16CFG = (PORT_P16CFG & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_P16CFG_CFG </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PORT_P17CFG  -------------------------------
// SVD Line: 2043

unsigned char PORT_P17CFG __AT (0x4004080F);



// -------------------------------  Field Item: PORT_P17CFG_CFG  ----------------------------------
// SVD Line: 1938

//  <item> SFDITEM_FIELD__PORT_P17CFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x4004080F) \nAlterate Output Function configuration register\n0 : GPIO = Port used as GPIO\n1 : TO10 = Port used as TO10\n2 : TO11 = Port used as TO11\n3 : TO12 = Port used as TO12\n4 : TO13 = Port used as TO13\n5 : SDO00/TxD0 = Port used as SDO00/TxD0\n6 : SDO20/TxD2 = Port used as SDO20/TxD2\n7 : CLKBUZ0 = Port used as CLKBUZ0\n8 : SCLKO00 = Port used as SCLK00 output\n9 : SCLKO20 = Port used as SCLK20 output\n10 : TXD1 = Port used as TXD1\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_P17CFG ) </loc>
//      <o.3..0> CFG
//        <0=> 0: GPIO = Port used as GPIO
//        <1=> 1: TO10 = Port used as TO10
//        <2=> 2: TO11 = Port used as TO11
//        <3=> 3: TO12 = Port used as TO12
//        <4=> 4: TO13 = Port used as TO13
//        <5=> 5: SDO00/TxD0 = Port used as SDO00/TxD0
//        <6=> 6: SDO20/TxD2 = Port used as SDO20/TxD2
//        <7=> 7: CLKBUZ0 = Port used as CLKBUZ0
//        <8=> 8: SCLKO00 = Port used as SCLK00 output
//        <9=> 9: SCLKO20 = Port used as SCLK20 output
//        <10=> 10: TXD1 = Port used as TXD1
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// -------------------------------  Register RTree: PORT_P17CFG  ----------------------------------
// SVD Line: 2043

//  <rtree> SFDITEM_REG__PORT_P17CFG
//    <name> P17CFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4004080F) Alterate Output Function configuration register </i>
//    <loc> ( (unsigned char)((PORT_P17CFG >> 0) & 0xFF), ((PORT_P17CFG = (PORT_P17CFG & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_P17CFG_CFG </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PORT_P20CFG  -------------------------------
// SVD Line: 2048

unsigned char PORT_P20CFG __AT (0x40040810);



// -------------------------------  Field Item: PORT_P20CFG_CFG  ----------------------------------
// SVD Line: 1938

//  <item> SFDITEM_FIELD__PORT_P20CFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40040810) \nAlterate Output Function configuration register\n0 : GPIO = Port used as GPIO\n1 : TO10 = Port used as TO10\n2 : TO11 = Port used as TO11\n3 : TO12 = Port used as TO12\n4 : TO13 = Port used as TO13\n5 : SDO00/TxD0 = Port used as SDO00/TxD0\n6 : SDO20/TxD2 = Port used as SDO20/TxD2\n7 : CLKBUZ0 = Port used as CLKBUZ0\n8 : SCLKO00 = Port used as SCLK00 output\n9 : SCLKO20 = Port used as SCLK20 output\n10 : TXD1 = Port used as TXD1\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_P20CFG ) </loc>
//      <o.3..0> CFG
//        <0=> 0: GPIO = Port used as GPIO
//        <1=> 1: TO10 = Port used as TO10
//        <2=> 2: TO11 = Port used as TO11
//        <3=> 3: TO12 = Port used as TO12
//        <4=> 4: TO13 = Port used as TO13
//        <5=> 5: SDO00/TxD0 = Port used as SDO00/TxD0
//        <6=> 6: SDO20/TxD2 = Port used as SDO20/TxD2
//        <7=> 7: CLKBUZ0 = Port used as CLKBUZ0
//        <8=> 8: SCLKO00 = Port used as SCLK00 output
//        <9=> 9: SCLKO20 = Port used as SCLK20 output
//        <10=> 10: TXD1 = Port used as TXD1
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// -------------------------------  Register RTree: PORT_P20CFG  ----------------------------------
// SVD Line: 2048

//  <rtree> SFDITEM_REG__PORT_P20CFG
//    <name> P20CFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40040810) Alterate Output Function configuration register </i>
//    <loc> ( (unsigned char)((PORT_P20CFG >> 0) & 0xFF), ((PORT_P20CFG = (PORT_P20CFG & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_P20CFG_CFG </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PORT_P21CFG  -------------------------------
// SVD Line: 2053

unsigned char PORT_P21CFG __AT (0x40040811);



// -------------------------------  Field Item: PORT_P21CFG_CFG  ----------------------------------
// SVD Line: 1938

//  <item> SFDITEM_FIELD__PORT_P21CFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40040811) \nAlterate Output Function configuration register\n0 : GPIO = Port used as GPIO\n1 : TO10 = Port used as TO10\n2 : TO11 = Port used as TO11\n3 : TO12 = Port used as TO12\n4 : TO13 = Port used as TO13\n5 : SDO00/TxD0 = Port used as SDO00/TxD0\n6 : SDO20/TxD2 = Port used as SDO20/TxD2\n7 : CLKBUZ0 = Port used as CLKBUZ0\n8 : SCLKO00 = Port used as SCLK00 output\n9 : SCLKO20 = Port used as SCLK20 output\n10 : TXD1 = Port used as TXD1\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_P21CFG ) </loc>
//      <o.3..0> CFG
//        <0=> 0: GPIO = Port used as GPIO
//        <1=> 1: TO10 = Port used as TO10
//        <2=> 2: TO11 = Port used as TO11
//        <3=> 3: TO12 = Port used as TO12
//        <4=> 4: TO13 = Port used as TO13
//        <5=> 5: SDO00/TxD0 = Port used as SDO00/TxD0
//        <6=> 6: SDO20/TxD2 = Port used as SDO20/TxD2
//        <7=> 7: CLKBUZ0 = Port used as CLKBUZ0
//        <8=> 8: SCLKO00 = Port used as SCLK00 output
//        <9=> 9: SCLKO20 = Port used as SCLK20 output
//        <10=> 10: TXD1 = Port used as TXD1
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// -------------------------------  Register RTree: PORT_P21CFG  ----------------------------------
// SVD Line: 2053

//  <rtree> SFDITEM_REG__PORT_P21CFG
//    <name> P21CFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40040811) Alterate Output Function configuration register </i>
//    <loc> ( (unsigned char)((PORT_P21CFG >> 0) & 0xFF), ((PORT_P21CFG = (PORT_P21CFG & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_P21CFG_CFG </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PORT_P22CFG  -------------------------------
// SVD Line: 2058

unsigned char PORT_P22CFG __AT (0x40040812);



// -------------------------------  Field Item: PORT_P22CFG_CFG  ----------------------------------
// SVD Line: 1938

//  <item> SFDITEM_FIELD__PORT_P22CFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40040812) \nAlterate Output Function configuration register\n0 : GPIO = Port used as GPIO\n1 : TO10 = Port used as TO10\n2 : TO11 = Port used as TO11\n3 : TO12 = Port used as TO12\n4 : TO13 = Port used as TO13\n5 : SDO00/TxD0 = Port used as SDO00/TxD0\n6 : SDO20/TxD2 = Port used as SDO20/TxD2\n7 : CLKBUZ0 = Port used as CLKBUZ0\n8 : SCLKO00 = Port used as SCLK00 output\n9 : SCLKO20 = Port used as SCLK20 output\n10 : TXD1 = Port used as TXD1\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_P22CFG ) </loc>
//      <o.3..0> CFG
//        <0=> 0: GPIO = Port used as GPIO
//        <1=> 1: TO10 = Port used as TO10
//        <2=> 2: TO11 = Port used as TO11
//        <3=> 3: TO12 = Port used as TO12
//        <4=> 4: TO13 = Port used as TO13
//        <5=> 5: SDO00/TxD0 = Port used as SDO00/TxD0
//        <6=> 6: SDO20/TxD2 = Port used as SDO20/TxD2
//        <7=> 7: CLKBUZ0 = Port used as CLKBUZ0
//        <8=> 8: SCLKO00 = Port used as SCLK00 output
//        <9=> 9: SCLKO20 = Port used as SCLK20 output
//        <10=> 10: TXD1 = Port used as TXD1
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// -------------------------------  Register RTree: PORT_P22CFG  ----------------------------------
// SVD Line: 2058

//  <rtree> SFDITEM_REG__PORT_P22CFG
//    <name> P22CFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40040812) Alterate Output Function configuration register </i>
//    <loc> ( (unsigned char)((PORT_P22CFG >> 0) & 0xFF), ((PORT_P22CFG = (PORT_P22CFG & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_P22CFG_CFG </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PORT_P23CFG  -------------------------------
// SVD Line: 2063

unsigned char PORT_P23CFG __AT (0x40040813);



// -------------------------------  Field Item: PORT_P23CFG_CFG  ----------------------------------
// SVD Line: 1938

//  <item> SFDITEM_FIELD__PORT_P23CFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40040813) \nAlterate Output Function configuration register\n0 : GPIO = Port used as GPIO\n1 : TO10 = Port used as TO10\n2 : TO11 = Port used as TO11\n3 : TO12 = Port used as TO12\n4 : TO13 = Port used as TO13\n5 : SDO00/TxD0 = Port used as SDO00/TxD0\n6 : SDO20/TxD2 = Port used as SDO20/TxD2\n7 : CLKBUZ0 = Port used as CLKBUZ0\n8 : SCLKO00 = Port used as SCLK00 output\n9 : SCLKO20 = Port used as SCLK20 output\n10 : TXD1 = Port used as TXD1\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_P23CFG ) </loc>
//      <o.3..0> CFG
//        <0=> 0: GPIO = Port used as GPIO
//        <1=> 1: TO10 = Port used as TO10
//        <2=> 2: TO11 = Port used as TO11
//        <3=> 3: TO12 = Port used as TO12
//        <4=> 4: TO13 = Port used as TO13
//        <5=> 5: SDO00/TxD0 = Port used as SDO00/TxD0
//        <6=> 6: SDO20/TxD2 = Port used as SDO20/TxD2
//        <7=> 7: CLKBUZ0 = Port used as CLKBUZ0
//        <8=> 8: SCLKO00 = Port used as SCLK00 output
//        <9=> 9: SCLKO20 = Port used as SCLK20 output
//        <10=> 10: TXD1 = Port used as TXD1
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// -------------------------------  Register RTree: PORT_P23CFG  ----------------------------------
// SVD Line: 2063

//  <rtree> SFDITEM_REG__PORT_P23CFG
//    <name> P23CFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40040813) Alterate Output Function configuration register </i>
//    <loc> ( (unsigned char)((PORT_P23CFG >> 0) & 0xFF), ((PORT_P23CFG = (PORT_P23CFG & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_P23CFG_CFG </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PORT_P24CFG  -------------------------------
// SVD Line: 2068

unsigned char PORT_P24CFG __AT (0x40040814);



// -------------------------------  Field Item: PORT_P24CFG_CFG  ----------------------------------
// SVD Line: 1938

//  <item> SFDITEM_FIELD__PORT_P24CFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40040814) \nAlterate Output Function configuration register\n0 : GPIO = Port used as GPIO\n1 : TO10 = Port used as TO10\n2 : TO11 = Port used as TO11\n3 : TO12 = Port used as TO12\n4 : TO13 = Port used as TO13\n5 : SDO00/TxD0 = Port used as SDO00/TxD0\n6 : SDO20/TxD2 = Port used as SDO20/TxD2\n7 : CLKBUZ0 = Port used as CLKBUZ0\n8 : SCLKO00 = Port used as SCLK00 output\n9 : SCLKO20 = Port used as SCLK20 output\n10 : TXD1 = Port used as TXD1\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_P24CFG ) </loc>
//      <o.3..0> CFG
//        <0=> 0: GPIO = Port used as GPIO
//        <1=> 1: TO10 = Port used as TO10
//        <2=> 2: TO11 = Port used as TO11
//        <3=> 3: TO12 = Port used as TO12
//        <4=> 4: TO13 = Port used as TO13
//        <5=> 5: SDO00/TxD0 = Port used as SDO00/TxD0
//        <6=> 6: SDO20/TxD2 = Port used as SDO20/TxD2
//        <7=> 7: CLKBUZ0 = Port used as CLKBUZ0
//        <8=> 8: SCLKO00 = Port used as SCLK00 output
//        <9=> 9: SCLKO20 = Port used as SCLK20 output
//        <10=> 10: TXD1 = Port used as TXD1
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// -------------------------------  Register RTree: PORT_P24CFG  ----------------------------------
// SVD Line: 2068

//  <rtree> SFDITEM_REG__PORT_P24CFG
//    <name> P24CFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40040814) Alterate Output Function configuration register </i>
//    <loc> ( (unsigned char)((PORT_P24CFG >> 0) & 0xFF), ((PORT_P24CFG = (PORT_P24CFG & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_P24CFG_CFG </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PORT_P25CFG  -------------------------------
// SVD Line: 2073

unsigned char PORT_P25CFG __AT (0x40040815);



// -------------------------------  Field Item: PORT_P25CFG_CFG  ----------------------------------
// SVD Line: 1938

//  <item> SFDITEM_FIELD__PORT_P25CFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40040815) \nAlterate Output Function configuration register\n0 : GPIO = Port used as GPIO\n1 : TO10 = Port used as TO10\n2 : TO11 = Port used as TO11\n3 : TO12 = Port used as TO12\n4 : TO13 = Port used as TO13\n5 : SDO00/TxD0 = Port used as SDO00/TxD0\n6 : SDO20/TxD2 = Port used as SDO20/TxD2\n7 : CLKBUZ0 = Port used as CLKBUZ0\n8 : SCLKO00 = Port used as SCLK00 output\n9 : SCLKO20 = Port used as SCLK20 output\n10 : TXD1 = Port used as TXD1\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_P25CFG ) </loc>
//      <o.3..0> CFG
//        <0=> 0: GPIO = Port used as GPIO
//        <1=> 1: TO10 = Port used as TO10
//        <2=> 2: TO11 = Port used as TO11
//        <3=> 3: TO12 = Port used as TO12
//        <4=> 4: TO13 = Port used as TO13
//        <5=> 5: SDO00/TxD0 = Port used as SDO00/TxD0
//        <6=> 6: SDO20/TxD2 = Port used as SDO20/TxD2
//        <7=> 7: CLKBUZ0 = Port used as CLKBUZ0
//        <8=> 8: SCLKO00 = Port used as SCLK00 output
//        <9=> 9: SCLKO20 = Port used as SCLK20 output
//        <10=> 10: TXD1 = Port used as TXD1
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// -------------------------------  Register RTree: PORT_P25CFG  ----------------------------------
// SVD Line: 2073

//  <rtree> SFDITEM_REG__PORT_P25CFG
//    <name> P25CFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40040815) Alterate Output Function configuration register </i>
//    <loc> ( (unsigned char)((PORT_P25CFG >> 0) & 0xFF), ((PORT_P25CFG = (PORT_P25CFG & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_P25CFG_CFG </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PORT_P26CFG  -------------------------------
// SVD Line: 2078

unsigned char PORT_P26CFG __AT (0x40040816);



// -------------------------------  Field Item: PORT_P26CFG_CFG  ----------------------------------
// SVD Line: 1938

//  <item> SFDITEM_FIELD__PORT_P26CFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40040816) \nAlterate Output Function configuration register\n0 : GPIO = Port used as GPIO\n1 : TO10 = Port used as TO10\n2 : TO11 = Port used as TO11\n3 : TO12 = Port used as TO12\n4 : TO13 = Port used as TO13\n5 : SDO00/TxD0 = Port used as SDO00/TxD0\n6 : SDO20/TxD2 = Port used as SDO20/TxD2\n7 : CLKBUZ0 = Port used as CLKBUZ0\n8 : SCLKO00 = Port used as SCLK00 output\n9 : SCLKO20 = Port used as SCLK20 output\n10 : TXD1 = Port used as TXD1\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_P26CFG ) </loc>
//      <o.3..0> CFG
//        <0=> 0: GPIO = Port used as GPIO
//        <1=> 1: TO10 = Port used as TO10
//        <2=> 2: TO11 = Port used as TO11
//        <3=> 3: TO12 = Port used as TO12
//        <4=> 4: TO13 = Port used as TO13
//        <5=> 5: SDO00/TxD0 = Port used as SDO00/TxD0
//        <6=> 6: SDO20/TxD2 = Port used as SDO20/TxD2
//        <7=> 7: CLKBUZ0 = Port used as CLKBUZ0
//        <8=> 8: SCLKO00 = Port used as SCLK00 output
//        <9=> 9: SCLKO20 = Port used as SCLK20 output
//        <10=> 10: TXD1 = Port used as TXD1
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// -------------------------------  Register RTree: PORT_P26CFG  ----------------------------------
// SVD Line: 2078

//  <rtree> SFDITEM_REG__PORT_P26CFG
//    <name> P26CFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40040816) Alterate Output Function configuration register </i>
//    <loc> ( (unsigned char)((PORT_P26CFG >> 0) & 0xFF), ((PORT_P26CFG = (PORT_P26CFG & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_P26CFG_CFG </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PORT_P27CFG  -------------------------------
// SVD Line: 2083

unsigned char PORT_P27CFG __AT (0x40040817);



// -------------------------------  Field Item: PORT_P27CFG_CFG  ----------------------------------
// SVD Line: 1938

//  <item> SFDITEM_FIELD__PORT_P27CFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40040817) \nAlterate Output Function configuration register\n0 : GPIO = Port used as GPIO\n1 : TO10 = Port used as TO10\n2 : TO11 = Port used as TO11\n3 : TO12 = Port used as TO12\n4 : TO13 = Port used as TO13\n5 : SDO00/TxD0 = Port used as SDO00/TxD0\n6 : SDO20/TxD2 = Port used as SDO20/TxD2\n7 : CLKBUZ0 = Port used as CLKBUZ0\n8 : SCLKO00 = Port used as SCLK00 output\n9 : SCLKO20 = Port used as SCLK20 output\n10 : TXD1 = Port used as TXD1\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_P27CFG ) </loc>
//      <o.3..0> CFG
//        <0=> 0: GPIO = Port used as GPIO
//        <1=> 1: TO10 = Port used as TO10
//        <2=> 2: TO11 = Port used as TO11
//        <3=> 3: TO12 = Port used as TO12
//        <4=> 4: TO13 = Port used as TO13
//        <5=> 5: SDO00/TxD0 = Port used as SDO00/TxD0
//        <6=> 6: SDO20/TxD2 = Port used as SDO20/TxD2
//        <7=> 7: CLKBUZ0 = Port used as CLKBUZ0
//        <8=> 8: SCLKO00 = Port used as SCLK00 output
//        <9=> 9: SCLKO20 = Port used as SCLK20 output
//        <10=> 10: TXD1 = Port used as TXD1
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// -------------------------------  Register RTree: PORT_P27CFG  ----------------------------------
// SVD Line: 2083

//  <rtree> SFDITEM_REG__PORT_P27CFG
//    <name> P27CFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40040817) Alterate Output Function configuration register </i>
//    <loc> ( (unsigned char)((PORT_P27CFG >> 0) & 0xFF), ((PORT_P27CFG = (PORT_P27CFG & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_P27CFG_CFG </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PORT_P30CFG  -------------------------------
// SVD Line: 2088

unsigned char PORT_P30CFG __AT (0x40040818);



// -------------------------------  Field Item: PORT_P30CFG_CFG  ----------------------------------
// SVD Line: 1938

//  <item> SFDITEM_FIELD__PORT_P30CFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40040818) \nAlterate Output Function configuration register\n0 : GPIO = Port used as GPIO\n1 : TO10 = Port used as TO10\n2 : TO11 = Port used as TO11\n3 : TO12 = Port used as TO12\n4 : TO13 = Port used as TO13\n5 : SDO00/TxD0 = Port used as SDO00/TxD0\n6 : SDO20/TxD2 = Port used as SDO20/TxD2\n7 : CLKBUZ0 = Port used as CLKBUZ0\n8 : SCLKO00 = Port used as SCLK00 output\n9 : SCLKO20 = Port used as SCLK20 output\n10 : TXD1 = Port used as TXD1\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_P30CFG ) </loc>
//      <o.3..0> CFG
//        <0=> 0: GPIO = Port used as GPIO
//        <1=> 1: TO10 = Port used as TO10
//        <2=> 2: TO11 = Port used as TO11
//        <3=> 3: TO12 = Port used as TO12
//        <4=> 4: TO13 = Port used as TO13
//        <5=> 5: SDO00/TxD0 = Port used as SDO00/TxD0
//        <6=> 6: SDO20/TxD2 = Port used as SDO20/TxD2
//        <7=> 7: CLKBUZ0 = Port used as CLKBUZ0
//        <8=> 8: SCLKO00 = Port used as SCLK00 output
//        <9=> 9: SCLKO20 = Port used as SCLK20 output
//        <10=> 10: TXD1 = Port used as TXD1
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// -------------------------------  Register RTree: PORT_P30CFG  ----------------------------------
// SVD Line: 2088

//  <rtree> SFDITEM_REG__PORT_P30CFG
//    <name> P30CFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40040818) Alterate Output Function configuration register </i>
//    <loc> ( (unsigned char)((PORT_P30CFG >> 0) & 0xFF), ((PORT_P30CFG = (PORT_P30CFG & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_P30CFG_CFG </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PORT_P31CFG  -------------------------------
// SVD Line: 2093

unsigned char PORT_P31CFG __AT (0x40040819);



// -------------------------------  Field Item: PORT_P31CFG_CFG  ----------------------------------
// SVD Line: 1938

//  <item> SFDITEM_FIELD__PORT_P31CFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40040819) \nAlterate Output Function configuration register\n0 : GPIO = Port used as GPIO\n1 : TO10 = Port used as TO10\n2 : TO11 = Port used as TO11\n3 : TO12 = Port used as TO12\n4 : TO13 = Port used as TO13\n5 : SDO00/TxD0 = Port used as SDO00/TxD0\n6 : SDO20/TxD2 = Port used as SDO20/TxD2\n7 : CLKBUZ0 = Port used as CLKBUZ0\n8 : SCLKO00 = Port used as SCLK00 output\n9 : SCLKO20 = Port used as SCLK20 output\n10 : TXD1 = Port used as TXD1\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_P31CFG ) </loc>
//      <o.3..0> CFG
//        <0=> 0: GPIO = Port used as GPIO
//        <1=> 1: TO10 = Port used as TO10
//        <2=> 2: TO11 = Port used as TO11
//        <3=> 3: TO12 = Port used as TO12
//        <4=> 4: TO13 = Port used as TO13
//        <5=> 5: SDO00/TxD0 = Port used as SDO00/TxD0
//        <6=> 6: SDO20/TxD2 = Port used as SDO20/TxD2
//        <7=> 7: CLKBUZ0 = Port used as CLKBUZ0
//        <8=> 8: SCLKO00 = Port used as SCLK00 output
//        <9=> 9: SCLKO20 = Port used as SCLK20 output
//        <10=> 10: TXD1 = Port used as TXD1
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// -------------------------------  Register RTree: PORT_P31CFG  ----------------------------------
// SVD Line: 2093

//  <rtree> SFDITEM_REG__PORT_P31CFG
//    <name> P31CFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40040819) Alterate Output Function configuration register </i>
//    <loc> ( (unsigned char)((PORT_P31CFG >> 0) & 0xFF), ((PORT_P31CFG = (PORT_P31CFG & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_P31CFG_CFG </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PORT_P40CFG  -------------------------------
// SVD Line: 2098

unsigned char PORT_P40CFG __AT (0x40040820);



// -------------------------------  Field Item: PORT_P40CFG_CFG  ----------------------------------
// SVD Line: 1938

//  <item> SFDITEM_FIELD__PORT_P40CFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40040820) \nAlterate Output Function configuration register\n0 : GPIO = Port used as GPIO\n1 : TO10 = Port used as TO10\n2 : TO11 = Port used as TO11\n3 : TO12 = Port used as TO12\n4 : TO13 = Port used as TO13\n5 : SDO00/TxD0 = Port used as SDO00/TxD0\n6 : SDO20/TxD2 = Port used as SDO20/TxD2\n7 : CLKBUZ0 = Port used as CLKBUZ0\n8 : SCLKO00 = Port used as SCLK00 output\n9 : SCLKO20 = Port used as SCLK20 output\n10 : TXD1 = Port used as TXD1\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_P40CFG ) </loc>
//      <o.3..0> CFG
//        <0=> 0: GPIO = Port used as GPIO
//        <1=> 1: TO10 = Port used as TO10
//        <2=> 2: TO11 = Port used as TO11
//        <3=> 3: TO12 = Port used as TO12
//        <4=> 4: TO13 = Port used as TO13
//        <5=> 5: SDO00/TxD0 = Port used as SDO00/TxD0
//        <6=> 6: SDO20/TxD2 = Port used as SDO20/TxD2
//        <7=> 7: CLKBUZ0 = Port used as CLKBUZ0
//        <8=> 8: SCLKO00 = Port used as SCLK00 output
//        <9=> 9: SCLKO20 = Port used as SCLK20 output
//        <10=> 10: TXD1 = Port used as TXD1
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// -------------------------------  Register RTree: PORT_P40CFG  ----------------------------------
// SVD Line: 2098

//  <rtree> SFDITEM_REG__PORT_P40CFG
//    <name> P40CFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40040820) Alterate Output Function configuration register </i>
//    <loc> ( (unsigned char)((PORT_P40CFG >> 0) & 0xFF), ((PORT_P40CFG = (PORT_P40CFG & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_P40CFG_CFG </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PORT_P41CFG  -------------------------------
// SVD Line: 2103

unsigned char PORT_P41CFG __AT (0x40040821);



// -------------------------------  Field Item: PORT_P41CFG_CFG  ----------------------------------
// SVD Line: 1938

//  <item> SFDITEM_FIELD__PORT_P41CFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40040821) \nAlterate Output Function configuration register\n0 : GPIO = Port used as GPIO\n1 : TO10 = Port used as TO10\n2 : TO11 = Port used as TO11\n3 : TO12 = Port used as TO12\n4 : TO13 = Port used as TO13\n5 : SDO00/TxD0 = Port used as SDO00/TxD0\n6 : SDO20/TxD2 = Port used as SDO20/TxD2\n7 : CLKBUZ0 = Port used as CLKBUZ0\n8 : SCLKO00 = Port used as SCLK00 output\n9 : SCLKO20 = Port used as SCLK20 output\n10 : TXD1 = Port used as TXD1\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_P41CFG ) </loc>
//      <o.3..0> CFG
//        <0=> 0: GPIO = Port used as GPIO
//        <1=> 1: TO10 = Port used as TO10
//        <2=> 2: TO11 = Port used as TO11
//        <3=> 3: TO12 = Port used as TO12
//        <4=> 4: TO13 = Port used as TO13
//        <5=> 5: SDO00/TxD0 = Port used as SDO00/TxD0
//        <6=> 6: SDO20/TxD2 = Port used as SDO20/TxD2
//        <7=> 7: CLKBUZ0 = Port used as CLKBUZ0
//        <8=> 8: SCLKO00 = Port used as SCLK00 output
//        <9=> 9: SCLKO20 = Port used as SCLK20 output
//        <10=> 10: TXD1 = Port used as TXD1
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// -------------------------------  Register RTree: PORT_P41CFG  ----------------------------------
// SVD Line: 2103

//  <rtree> SFDITEM_REG__PORT_P41CFG
//    <name> P41CFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40040821) Alterate Output Function configuration register </i>
//    <loc> ( (unsigned char)((PORT_P41CFG >> 0) & 0xFF), ((PORT_P41CFG = (PORT_P41CFG & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_P41CFG_CFG </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PORT_P50CFG  -------------------------------
// SVD Line: 2108

unsigned char PORT_P50CFG __AT (0x40040828);



// -------------------------------  Field Item: PORT_P50CFG_CFG  ----------------------------------
// SVD Line: 1938

//  <item> SFDITEM_FIELD__PORT_P50CFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40040828) \nAlterate Output Function configuration register\n0 : GPIO = Port used as GPIO\n1 : TO10 = Port used as TO10\n2 : TO11 = Port used as TO11\n3 : TO12 = Port used as TO12\n4 : TO13 = Port used as TO13\n5 : SDO00/TxD0 = Port used as SDO00/TxD0\n6 : SDO20/TxD2 = Port used as SDO20/TxD2\n7 : CLKBUZ0 = Port used as CLKBUZ0\n8 : SCLKO00 = Port used as SCLK00 output\n9 : SCLKO20 = Port used as SCLK20 output\n10 : TXD1 = Port used as TXD1\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_P50CFG ) </loc>
//      <o.3..0> CFG
//        <0=> 0: GPIO = Port used as GPIO
//        <1=> 1: TO10 = Port used as TO10
//        <2=> 2: TO11 = Port used as TO11
//        <3=> 3: TO12 = Port used as TO12
//        <4=> 4: TO13 = Port used as TO13
//        <5=> 5: SDO00/TxD0 = Port used as SDO00/TxD0
//        <6=> 6: SDO20/TxD2 = Port used as SDO20/TxD2
//        <7=> 7: CLKBUZ0 = Port used as CLKBUZ0
//        <8=> 8: SCLKO00 = Port used as SCLK00 output
//        <9=> 9: SCLKO20 = Port used as SCLK20 output
//        <10=> 10: TXD1 = Port used as TXD1
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// -------------------------------  Register RTree: PORT_P50CFG  ----------------------------------
// SVD Line: 2108

//  <rtree> SFDITEM_REG__PORT_P50CFG
//    <name> P50CFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40040828) Alterate Output Function configuration register </i>
//    <loc> ( (unsigned char)((PORT_P50CFG >> 0) & 0xFF), ((PORT_P50CFG = (PORT_P50CFG & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_P50CFG_CFG </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PORT_P51CFG  -------------------------------
// SVD Line: 2113

unsigned char PORT_P51CFG __AT (0x40040829);



// -------------------------------  Field Item: PORT_P51CFG_CFG  ----------------------------------
// SVD Line: 1938

//  <item> SFDITEM_FIELD__PORT_P51CFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40040829) \nAlterate Output Function configuration register\n0 : GPIO = Port used as GPIO\n1 : TO10 = Port used as TO10\n2 : TO11 = Port used as TO11\n3 : TO12 = Port used as TO12\n4 : TO13 = Port used as TO13\n5 : SDO00/TxD0 = Port used as SDO00/TxD0\n6 : SDO20/TxD2 = Port used as SDO20/TxD2\n7 : CLKBUZ0 = Port used as CLKBUZ0\n8 : SCLKO00 = Port used as SCLK00 output\n9 : SCLKO20 = Port used as SCLK20 output\n10 : TXD1 = Port used as TXD1\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_P51CFG ) </loc>
//      <o.3..0> CFG
//        <0=> 0: GPIO = Port used as GPIO
//        <1=> 1: TO10 = Port used as TO10
//        <2=> 2: TO11 = Port used as TO11
//        <3=> 3: TO12 = Port used as TO12
//        <4=> 4: TO13 = Port used as TO13
//        <5=> 5: SDO00/TxD0 = Port used as SDO00/TxD0
//        <6=> 6: SDO20/TxD2 = Port used as SDO20/TxD2
//        <7=> 7: CLKBUZ0 = Port used as CLKBUZ0
//        <8=> 8: SCLKO00 = Port used as SCLK00 output
//        <9=> 9: SCLKO20 = Port used as SCLK20 output
//        <10=> 10: TXD1 = Port used as TXD1
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// -------------------------------  Register RTree: PORT_P51CFG  ----------------------------------
// SVD Line: 2113

//  <rtree> SFDITEM_REG__PORT_P51CFG
//    <name> P51CFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40040829) Alterate Output Function configuration register </i>
//    <loc> ( (unsigned char)((PORT_P51CFG >> 0) & 0xFF), ((PORT_P51CFG = (PORT_P51CFG & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_P51CFG_CFG </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PORT_P60CFG  -------------------------------
// SVD Line: 2118

unsigned char PORT_P60CFG __AT (0x40040830);



// -------------------------------  Field Item: PORT_P60CFG_CFG  ----------------------------------
// SVD Line: 1938

//  <item> SFDITEM_FIELD__PORT_P60CFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40040830) \nAlterate Output Function configuration register\n0 : GPIO = Port used as GPIO\n1 : TO10 = Port used as TO10\n2 : TO11 = Port used as TO11\n3 : TO12 = Port used as TO12\n4 : TO13 = Port used as TO13\n5 : SDO00/TxD0 = Port used as SDO00/TxD0\n6 : SDO20/TxD2 = Port used as SDO20/TxD2\n7 : CLKBUZ0 = Port used as CLKBUZ0\n8 : SCLKO00 = Port used as SCLK00 output\n9 : SCLKO20 = Port used as SCLK20 output\n10 : TXD1 = Port used as TXD1\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_P60CFG ) </loc>
//      <o.3..0> CFG
//        <0=> 0: GPIO = Port used as GPIO
//        <1=> 1: TO10 = Port used as TO10
//        <2=> 2: TO11 = Port used as TO11
//        <3=> 3: TO12 = Port used as TO12
//        <4=> 4: TO13 = Port used as TO13
//        <5=> 5: SDO00/TxD0 = Port used as SDO00/TxD0
//        <6=> 6: SDO20/TxD2 = Port used as SDO20/TxD2
//        <7=> 7: CLKBUZ0 = Port used as CLKBUZ0
//        <8=> 8: SCLKO00 = Port used as SCLK00 output
//        <9=> 9: SCLKO20 = Port used as SCLK20 output
//        <10=> 10: TXD1 = Port used as TXD1
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// -------------------------------  Register RTree: PORT_P60CFG  ----------------------------------
// SVD Line: 2118

//  <rtree> SFDITEM_REG__PORT_P60CFG
//    <name> P60CFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40040830) Alterate Output Function configuration register </i>
//    <loc> ( (unsigned char)((PORT_P60CFG >> 0) & 0xFF), ((PORT_P60CFG = (PORT_P60CFG & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_P60CFG_CFG </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PORT_P61CFG  -------------------------------
// SVD Line: 2123

unsigned char PORT_P61CFG __AT (0x40040831);



// -------------------------------  Field Item: PORT_P61CFG_CFG  ----------------------------------
// SVD Line: 1938

//  <item> SFDITEM_FIELD__PORT_P61CFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40040831) \nAlterate Output Function configuration register\n0 : GPIO = Port used as GPIO\n1 : TO10 = Port used as TO10\n2 : TO11 = Port used as TO11\n3 : TO12 = Port used as TO12\n4 : TO13 = Port used as TO13\n5 : SDO00/TxD0 = Port used as SDO00/TxD0\n6 : SDO20/TxD2 = Port used as SDO20/TxD2\n7 : CLKBUZ0 = Port used as CLKBUZ0\n8 : SCLKO00 = Port used as SCLK00 output\n9 : SCLKO20 = Port used as SCLK20 output\n10 : TXD1 = Port used as TXD1\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_P61CFG ) </loc>
//      <o.3..0> CFG
//        <0=> 0: GPIO = Port used as GPIO
//        <1=> 1: TO10 = Port used as TO10
//        <2=> 2: TO11 = Port used as TO11
//        <3=> 3: TO12 = Port used as TO12
//        <4=> 4: TO13 = Port used as TO13
//        <5=> 5: SDO00/TxD0 = Port used as SDO00/TxD0
//        <6=> 6: SDO20/TxD2 = Port used as SDO20/TxD2
//        <7=> 7: CLKBUZ0 = Port used as CLKBUZ0
//        <8=> 8: SCLKO00 = Port used as SCLK00 output
//        <9=> 9: SCLKO20 = Port used as SCLK20 output
//        <10=> 10: TXD1 = Port used as TXD1
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// -------------------------------  Register RTree: PORT_P61CFG  ----------------------------------
// SVD Line: 2123

//  <rtree> SFDITEM_REG__PORT_P61CFG
//    <name> P61CFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40040831) Alterate Output Function configuration register </i>
//    <loc> ( (unsigned char)((PORT_P61CFG >> 0) & 0xFF), ((PORT_P61CFG = (PORT_P61CFG & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_P61CFG_CFG </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PORT_P62CFG  -------------------------------
// SVD Line: 2128

unsigned char PORT_P62CFG __AT (0x40040832);



// -------------------------------  Field Item: PORT_P62CFG_CFG  ----------------------------------
// SVD Line: 1938

//  <item> SFDITEM_FIELD__PORT_P62CFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40040832) \nAlterate Output Function configuration register\n0 : GPIO = Port used as GPIO\n1 : TO10 = Port used as TO10\n2 : TO11 = Port used as TO11\n3 : TO12 = Port used as TO12\n4 : TO13 = Port used as TO13\n5 : SDO00/TxD0 = Port used as SDO00/TxD0\n6 : SDO20/TxD2 = Port used as SDO20/TxD2\n7 : CLKBUZ0 = Port used as CLKBUZ0\n8 : SCLKO00 = Port used as SCLK00 output\n9 : SCLKO20 = Port used as SCLK20 output\n10 : TXD1 = Port used as TXD1\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_P62CFG ) </loc>
//      <o.3..0> CFG
//        <0=> 0: GPIO = Port used as GPIO
//        <1=> 1: TO10 = Port used as TO10
//        <2=> 2: TO11 = Port used as TO11
//        <3=> 3: TO12 = Port used as TO12
//        <4=> 4: TO13 = Port used as TO13
//        <5=> 5: SDO00/TxD0 = Port used as SDO00/TxD0
//        <6=> 6: SDO20/TxD2 = Port used as SDO20/TxD2
//        <7=> 7: CLKBUZ0 = Port used as CLKBUZ0
//        <8=> 8: SCLKO00 = Port used as SCLK00 output
//        <9=> 9: SCLKO20 = Port used as SCLK20 output
//        <10=> 10: TXD1 = Port used as TXD1
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// -------------------------------  Register RTree: PORT_P62CFG  ----------------------------------
// SVD Line: 2128

//  <rtree> SFDITEM_REG__PORT_P62CFG
//    <name> P62CFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40040832) Alterate Output Function configuration register </i>
//    <loc> ( (unsigned char)((PORT_P62CFG >> 0) & 0xFF), ((PORT_P62CFG = (PORT_P62CFG & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_P62CFG_CFG </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PORT_P63CFG  -------------------------------
// SVD Line: 2133

unsigned char PORT_P63CFG __AT (0x40040833);



// -------------------------------  Field Item: PORT_P63CFG_CFG  ----------------------------------
// SVD Line: 1938

//  <item> SFDITEM_FIELD__PORT_P63CFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40040833) \nAlterate Output Function configuration register\n0 : GPIO = Port used as GPIO\n1 : TO10 = Port used as TO10\n2 : TO11 = Port used as TO11\n3 : TO12 = Port used as TO12\n4 : TO13 = Port used as TO13\n5 : SDO00/TxD0 = Port used as SDO00/TxD0\n6 : SDO20/TxD2 = Port used as SDO20/TxD2\n7 : CLKBUZ0 = Port used as CLKBUZ0\n8 : SCLKO00 = Port used as SCLK00 output\n9 : SCLKO20 = Port used as SCLK20 output\n10 : TXD1 = Port used as TXD1\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_P63CFG ) </loc>
//      <o.3..0> CFG
//        <0=> 0: GPIO = Port used as GPIO
//        <1=> 1: TO10 = Port used as TO10
//        <2=> 2: TO11 = Port used as TO11
//        <3=> 3: TO12 = Port used as TO12
//        <4=> 4: TO13 = Port used as TO13
//        <5=> 5: SDO00/TxD0 = Port used as SDO00/TxD0
//        <6=> 6: SDO20/TxD2 = Port used as SDO20/TxD2
//        <7=> 7: CLKBUZ0 = Port used as CLKBUZ0
//        <8=> 8: SCLKO00 = Port used as SCLK00 output
//        <9=> 9: SCLKO20 = Port used as SCLK20 output
//        <10=> 10: TXD1 = Port used as TXD1
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// -------------------------------  Register RTree: PORT_P63CFG  ----------------------------------
// SVD Line: 2133

//  <rtree> SFDITEM_REG__PORT_P63CFG
//    <name> P63CFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40040833) Alterate Output Function configuration register </i>
//    <loc> ( (unsigned char)((PORT_P63CFG >> 0) & 0xFF), ((PORT_P63CFG = (PORT_P63CFG & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_P63CFG_CFG </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PORT_P70CFG  -------------------------------
// SVD Line: 2138

unsigned char PORT_P70CFG __AT (0x40040838);



// -------------------------------  Field Item: PORT_P70CFG_CFG  ----------------------------------
// SVD Line: 1938

//  <item> SFDITEM_FIELD__PORT_P70CFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40040838) \nAlterate Output Function configuration register\n0 : GPIO = Port used as GPIO\n1 : TO10 = Port used as TO10\n2 : TO11 = Port used as TO11\n3 : TO12 = Port used as TO12\n4 : TO13 = Port used as TO13\n5 : SDO00/TxD0 = Port used as SDO00/TxD0\n6 : SDO20/TxD2 = Port used as SDO20/TxD2\n7 : CLKBUZ0 = Port used as CLKBUZ0\n8 : SCLKO00 = Port used as SCLK00 output\n9 : SCLKO20 = Port used as SCLK20 output\n10 : TXD1 = Port used as TXD1\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_P70CFG ) </loc>
//      <o.3..0> CFG
//        <0=> 0: GPIO = Port used as GPIO
//        <1=> 1: TO10 = Port used as TO10
//        <2=> 2: TO11 = Port used as TO11
//        <3=> 3: TO12 = Port used as TO12
//        <4=> 4: TO13 = Port used as TO13
//        <5=> 5: SDO00/TxD0 = Port used as SDO00/TxD0
//        <6=> 6: SDO20/TxD2 = Port used as SDO20/TxD2
//        <7=> 7: CLKBUZ0 = Port used as CLKBUZ0
//        <8=> 8: SCLKO00 = Port used as SCLK00 output
//        <9=> 9: SCLKO20 = Port used as SCLK20 output
//        <10=> 10: TXD1 = Port used as TXD1
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// -------------------------------  Register RTree: PORT_P70CFG  ----------------------------------
// SVD Line: 2138

//  <rtree> SFDITEM_REG__PORT_P70CFG
//    <name> P70CFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40040838) Alterate Output Function configuration register </i>
//    <loc> ( (unsigned char)((PORT_P70CFG >> 0) & 0xFF), ((PORT_P70CFG = (PORT_P70CFG & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_P70CFG_CFG </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PORT_P71CFG  -------------------------------
// SVD Line: 2143

unsigned char PORT_P71CFG __AT (0x40040839);



// -------------------------------  Field Item: PORT_P71CFG_CFG  ----------------------------------
// SVD Line: 1938

//  <item> SFDITEM_FIELD__PORT_P71CFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40040839) \nAlterate Output Function configuration register\n0 : GPIO = Port used as GPIO\n1 : TO10 = Port used as TO10\n2 : TO11 = Port used as TO11\n3 : TO12 = Port used as TO12\n4 : TO13 = Port used as TO13\n5 : SDO00/TxD0 = Port used as SDO00/TxD0\n6 : SDO20/TxD2 = Port used as SDO20/TxD2\n7 : CLKBUZ0 = Port used as CLKBUZ0\n8 : SCLKO00 = Port used as SCLK00 output\n9 : SCLKO20 = Port used as SCLK20 output\n10 : TXD1 = Port used as TXD1\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_P71CFG ) </loc>
//      <o.3..0> CFG
//        <0=> 0: GPIO = Port used as GPIO
//        <1=> 1: TO10 = Port used as TO10
//        <2=> 2: TO11 = Port used as TO11
//        <3=> 3: TO12 = Port used as TO12
//        <4=> 4: TO13 = Port used as TO13
//        <5=> 5: SDO00/TxD0 = Port used as SDO00/TxD0
//        <6=> 6: SDO20/TxD2 = Port used as SDO20/TxD2
//        <7=> 7: CLKBUZ0 = Port used as CLKBUZ0
//        <8=> 8: SCLKO00 = Port used as SCLK00 output
//        <9=> 9: SCLKO20 = Port used as SCLK20 output
//        <10=> 10: TXD1 = Port used as TXD1
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// -------------------------------  Register RTree: PORT_P71CFG  ----------------------------------
// SVD Line: 2143

//  <rtree> SFDITEM_REG__PORT_P71CFG
//    <name> P71CFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40040839) Alterate Output Function configuration register </i>
//    <loc> ( (unsigned char)((PORT_P71CFG >> 0) & 0xFF), ((PORT_P71CFG = (PORT_P71CFG & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_P71CFG_CFG </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PORT_P72CFG  -------------------------------
// SVD Line: 2148

unsigned char PORT_P72CFG __AT (0x4004083A);



// -------------------------------  Field Item: PORT_P72CFG_CFG  ----------------------------------
// SVD Line: 1938

//  <item> SFDITEM_FIELD__PORT_P72CFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x4004083A) \nAlterate Output Function configuration register\n0 : GPIO = Port used as GPIO\n1 : TO10 = Port used as TO10\n2 : TO11 = Port used as TO11\n3 : TO12 = Port used as TO12\n4 : TO13 = Port used as TO13\n5 : SDO00/TxD0 = Port used as SDO00/TxD0\n6 : SDO20/TxD2 = Port used as SDO20/TxD2\n7 : CLKBUZ0 = Port used as CLKBUZ0\n8 : SCLKO00 = Port used as SCLK00 output\n9 : SCLKO20 = Port used as SCLK20 output\n10 : TXD1 = Port used as TXD1\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_P72CFG ) </loc>
//      <o.3..0> CFG
//        <0=> 0: GPIO = Port used as GPIO
//        <1=> 1: TO10 = Port used as TO10
//        <2=> 2: TO11 = Port used as TO11
//        <3=> 3: TO12 = Port used as TO12
//        <4=> 4: TO13 = Port used as TO13
//        <5=> 5: SDO00/TxD0 = Port used as SDO00/TxD0
//        <6=> 6: SDO20/TxD2 = Port used as SDO20/TxD2
//        <7=> 7: CLKBUZ0 = Port used as CLKBUZ0
//        <8=> 8: SCLKO00 = Port used as SCLK00 output
//        <9=> 9: SCLKO20 = Port used as SCLK20 output
//        <10=> 10: TXD1 = Port used as TXD1
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// -------------------------------  Register RTree: PORT_P72CFG  ----------------------------------
// SVD Line: 2148

//  <rtree> SFDITEM_REG__PORT_P72CFG
//    <name> P72CFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4004083A) Alterate Output Function configuration register </i>
//    <loc> ( (unsigned char)((PORT_P72CFG >> 0) & 0xFF), ((PORT_P72CFG = (PORT_P72CFG & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_P72CFG_CFG </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PORT_P73CFG  -------------------------------
// SVD Line: 2153

unsigned char PORT_P73CFG __AT (0x4004083B);



// -------------------------------  Field Item: PORT_P73CFG_CFG  ----------------------------------
// SVD Line: 1938

//  <item> SFDITEM_FIELD__PORT_P73CFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x4004083B) \nAlterate Output Function configuration register\n0 : GPIO = Port used as GPIO\n1 : TO10 = Port used as TO10\n2 : TO11 = Port used as TO11\n3 : TO12 = Port used as TO12\n4 : TO13 = Port used as TO13\n5 : SDO00/TxD0 = Port used as SDO00/TxD0\n6 : SDO20/TxD2 = Port used as SDO20/TxD2\n7 : CLKBUZ0 = Port used as CLKBUZ0\n8 : SCLKO00 = Port used as SCLK00 output\n9 : SCLKO20 = Port used as SCLK20 output\n10 : TXD1 = Port used as TXD1\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_P73CFG ) </loc>
//      <o.3..0> CFG
//        <0=> 0: GPIO = Port used as GPIO
//        <1=> 1: TO10 = Port used as TO10
//        <2=> 2: TO11 = Port used as TO11
//        <3=> 3: TO12 = Port used as TO12
//        <4=> 4: TO13 = Port used as TO13
//        <5=> 5: SDO00/TxD0 = Port used as SDO00/TxD0
//        <6=> 6: SDO20/TxD2 = Port used as SDO20/TxD2
//        <7=> 7: CLKBUZ0 = Port used as CLKBUZ0
//        <8=> 8: SCLKO00 = Port used as SCLK00 output
//        <9=> 9: SCLKO20 = Port used as SCLK20 output
//        <10=> 10: TXD1 = Port used as TXD1
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// -------------------------------  Register RTree: PORT_P73CFG  ----------------------------------
// SVD Line: 2153

//  <rtree> SFDITEM_REG__PORT_P73CFG
//    <name> P73CFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4004083B) Alterate Output Function configuration register </i>
//    <loc> ( (unsigned char)((PORT_P73CFG >> 0) & 0xFF), ((PORT_P73CFG = (PORT_P73CFG & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_P73CFG_CFG </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PORT_P74CFG  -------------------------------
// SVD Line: 2158

unsigned char PORT_P74CFG __AT (0x4004083C);



// -------------------------------  Field Item: PORT_P74CFG_CFG  ----------------------------------
// SVD Line: 1938

//  <item> SFDITEM_FIELD__PORT_P74CFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x4004083C) \nAlterate Output Function configuration register\n0 : GPIO = Port used as GPIO\n1 : TO10 = Port used as TO10\n2 : TO11 = Port used as TO11\n3 : TO12 = Port used as TO12\n4 : TO13 = Port used as TO13\n5 : SDO00/TxD0 = Port used as SDO00/TxD0\n6 : SDO20/TxD2 = Port used as SDO20/TxD2\n7 : CLKBUZ0 = Port used as CLKBUZ0\n8 : SCLKO00 = Port used as SCLK00 output\n9 : SCLKO20 = Port used as SCLK20 output\n10 : TXD1 = Port used as TXD1\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_P74CFG ) </loc>
//      <o.3..0> CFG
//        <0=> 0: GPIO = Port used as GPIO
//        <1=> 1: TO10 = Port used as TO10
//        <2=> 2: TO11 = Port used as TO11
//        <3=> 3: TO12 = Port used as TO12
//        <4=> 4: TO13 = Port used as TO13
//        <5=> 5: SDO00/TxD0 = Port used as SDO00/TxD0
//        <6=> 6: SDO20/TxD2 = Port used as SDO20/TxD2
//        <7=> 7: CLKBUZ0 = Port used as CLKBUZ0
//        <8=> 8: SCLKO00 = Port used as SCLK00 output
//        <9=> 9: SCLKO20 = Port used as SCLK20 output
//        <10=> 10: TXD1 = Port used as TXD1
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// -------------------------------  Register RTree: PORT_P74CFG  ----------------------------------
// SVD Line: 2158

//  <rtree> SFDITEM_REG__PORT_P74CFG
//    <name> P74CFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4004083C) Alterate Output Function configuration register </i>
//    <loc> ( (unsigned char)((PORT_P74CFG >> 0) & 0xFF), ((PORT_P74CFG = (PORT_P74CFG & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_P74CFG_CFG </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PORT_P75CFG  -------------------------------
// SVD Line: 2163

unsigned char PORT_P75CFG __AT (0x4004083D);



// -------------------------------  Field Item: PORT_P75CFG_CFG  ----------------------------------
// SVD Line: 1938

//  <item> SFDITEM_FIELD__PORT_P75CFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x4004083D) \nAlterate Output Function configuration register\n0 : GPIO = Port used as GPIO\n1 : TO10 = Port used as TO10\n2 : TO11 = Port used as TO11\n3 : TO12 = Port used as TO12\n4 : TO13 = Port used as TO13\n5 : SDO00/TxD0 = Port used as SDO00/TxD0\n6 : SDO20/TxD2 = Port used as SDO20/TxD2\n7 : CLKBUZ0 = Port used as CLKBUZ0\n8 : SCLKO00 = Port used as SCLK00 output\n9 : SCLKO20 = Port used as SCLK20 output\n10 : TXD1 = Port used as TXD1\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_P75CFG ) </loc>
//      <o.3..0> CFG
//        <0=> 0: GPIO = Port used as GPIO
//        <1=> 1: TO10 = Port used as TO10
//        <2=> 2: TO11 = Port used as TO11
//        <3=> 3: TO12 = Port used as TO12
//        <4=> 4: TO13 = Port used as TO13
//        <5=> 5: SDO00/TxD0 = Port used as SDO00/TxD0
//        <6=> 6: SDO20/TxD2 = Port used as SDO20/TxD2
//        <7=> 7: CLKBUZ0 = Port used as CLKBUZ0
//        <8=> 8: SCLKO00 = Port used as SCLK00 output
//        <9=> 9: SCLKO20 = Port used as SCLK20 output
//        <10=> 10: TXD1 = Port used as TXD1
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// -------------------------------  Register RTree: PORT_P75CFG  ----------------------------------
// SVD Line: 2163

//  <rtree> SFDITEM_REG__PORT_P75CFG
//    <name> P75CFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4004083D) Alterate Output Function configuration register </i>
//    <loc> ( (unsigned char)((PORT_P75CFG >> 0) & 0xFF), ((PORT_P75CFG = (PORT_P75CFG & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_P75CFG_CFG </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PORT_P120CFG  ------------------------------
// SVD Line: 2168

unsigned char PORT_P120CFG __AT (0x40040840);



// ------------------------------  Field Item: PORT_P120CFG_CFG  ----------------------------------
// SVD Line: 1938

//  <item> SFDITEM_FIELD__PORT_P120CFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40040840) \nAlterate Output Function configuration register\n0 : GPIO = Port used as GPIO\n1 : TO10 = Port used as TO10\n2 : TO11 = Port used as TO11\n3 : TO12 = Port used as TO12\n4 : TO13 = Port used as TO13\n5 : SDO00/TxD0 = Port used as SDO00/TxD0\n6 : SDO20/TxD2 = Port used as SDO20/TxD2\n7 : CLKBUZ0 = Port used as CLKBUZ0\n8 : SCLKO00 = Port used as SCLK00 output\n9 : SCLKO20 = Port used as SCLK20 output\n10 : TXD1 = Port used as TXD1\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_P120CFG ) </loc>
//      <o.3..0> CFG
//        <0=> 0: GPIO = Port used as GPIO
//        <1=> 1: TO10 = Port used as TO10
//        <2=> 2: TO11 = Port used as TO11
//        <3=> 3: TO12 = Port used as TO12
//        <4=> 4: TO13 = Port used as TO13
//        <5=> 5: SDO00/TxD0 = Port used as SDO00/TxD0
//        <6=> 6: SDO20/TxD2 = Port used as SDO20/TxD2
//        <7=> 7: CLKBUZ0 = Port used as CLKBUZ0
//        <8=> 8: SCLKO00 = Port used as SCLK00 output
//        <9=> 9: SCLKO20 = Port used as SCLK20 output
//        <10=> 10: TXD1 = Port used as TXD1
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: PORT_P120CFG  ----------------------------------
// SVD Line: 2168

//  <rtree> SFDITEM_REG__PORT_P120CFG
//    <name> P120CFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40040840) Alterate Output Function configuration register </i>
//    <loc> ( (unsigned char)((PORT_P120CFG >> 0) & 0xFF), ((PORT_P120CFG = (PORT_P120CFG & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_P120CFG_CFG </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PORT_P121CFG  ------------------------------
// SVD Line: 2173

unsigned char PORT_P121CFG __AT (0x40040841);



// ------------------------------  Field Item: PORT_P121CFG_CFG  ----------------------------------
// SVD Line: 1938

//  <item> SFDITEM_FIELD__PORT_P121CFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40040841) \nAlterate Output Function configuration register\n0 : GPIO = Port used as GPIO\n1 : TO10 = Port used as TO10\n2 : TO11 = Port used as TO11\n3 : TO12 = Port used as TO12\n4 : TO13 = Port used as TO13\n5 : SDO00/TxD0 = Port used as SDO00/TxD0\n6 : SDO20/TxD2 = Port used as SDO20/TxD2\n7 : CLKBUZ0 = Port used as CLKBUZ0\n8 : SCLKO00 = Port used as SCLK00 output\n9 : SCLKO20 = Port used as SCLK20 output\n10 : TXD1 = Port used as TXD1\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_P121CFG ) </loc>
//      <o.3..0> CFG
//        <0=> 0: GPIO = Port used as GPIO
//        <1=> 1: TO10 = Port used as TO10
//        <2=> 2: TO11 = Port used as TO11
//        <3=> 3: TO12 = Port used as TO12
//        <4=> 4: TO13 = Port used as TO13
//        <5=> 5: SDO00/TxD0 = Port used as SDO00/TxD0
//        <6=> 6: SDO20/TxD2 = Port used as SDO20/TxD2
//        <7=> 7: CLKBUZ0 = Port used as CLKBUZ0
//        <8=> 8: SCLKO00 = Port used as SCLK00 output
//        <9=> 9: SCLKO20 = Port used as SCLK20 output
//        <10=> 10: TXD1 = Port used as TXD1
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: PORT_P121CFG  ----------------------------------
// SVD Line: 2173

//  <rtree> SFDITEM_REG__PORT_P121CFG
//    <name> P121CFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40040841) Alterate Output Function configuration register </i>
//    <loc> ( (unsigned char)((PORT_P121CFG >> 0) & 0xFF), ((PORT_P121CFG = (PORT_P121CFG & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_P121CFG_CFG </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PORT_P122CFG  ------------------------------
// SVD Line: 2178

unsigned char PORT_P122CFG __AT (0x40040842);



// ------------------------------  Field Item: PORT_P122CFG_CFG  ----------------------------------
// SVD Line: 1938

//  <item> SFDITEM_FIELD__PORT_P122CFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40040842) \nAlterate Output Function configuration register\n0 : GPIO = Port used as GPIO\n1 : TO10 = Port used as TO10\n2 : TO11 = Port used as TO11\n3 : TO12 = Port used as TO12\n4 : TO13 = Port used as TO13\n5 : SDO00/TxD0 = Port used as SDO00/TxD0\n6 : SDO20/TxD2 = Port used as SDO20/TxD2\n7 : CLKBUZ0 = Port used as CLKBUZ0\n8 : SCLKO00 = Port used as SCLK00 output\n9 : SCLKO20 = Port used as SCLK20 output\n10 : TXD1 = Port used as TXD1\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_P122CFG ) </loc>
//      <o.3..0> CFG
//        <0=> 0: GPIO = Port used as GPIO
//        <1=> 1: TO10 = Port used as TO10
//        <2=> 2: TO11 = Port used as TO11
//        <3=> 3: TO12 = Port used as TO12
//        <4=> 4: TO13 = Port used as TO13
//        <5=> 5: SDO00/TxD0 = Port used as SDO00/TxD0
//        <6=> 6: SDO20/TxD2 = Port used as SDO20/TxD2
//        <7=> 7: CLKBUZ0 = Port used as CLKBUZ0
//        <8=> 8: SCLKO00 = Port used as SCLK00 output
//        <9=> 9: SCLKO20 = Port used as SCLK20 output
//        <10=> 10: TXD1 = Port used as TXD1
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: PORT_P122CFG  ----------------------------------
// SVD Line: 2178

//  <rtree> SFDITEM_REG__PORT_P122CFG
//    <name> P122CFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40040842) Alterate Output Function configuration register </i>
//    <loc> ( (unsigned char)((PORT_P122CFG >> 0) & 0xFF), ((PORT_P122CFG = (PORT_P122CFG & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_P122CFG_CFG </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PORT_P123CFG  ------------------------------
// SVD Line: 2183

unsigned char PORT_P123CFG __AT (0x40040843);



// ------------------------------  Field Item: PORT_P123CFG_CFG  ----------------------------------
// SVD Line: 1938

//  <item> SFDITEM_FIELD__PORT_P123CFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40040843) \nAlterate Output Function configuration register\n0 : GPIO = Port used as GPIO\n1 : TO10 = Port used as TO10\n2 : TO11 = Port used as TO11\n3 : TO12 = Port used as TO12\n4 : TO13 = Port used as TO13\n5 : SDO00/TxD0 = Port used as SDO00/TxD0\n6 : SDO20/TxD2 = Port used as SDO20/TxD2\n7 : CLKBUZ0 = Port used as CLKBUZ0\n8 : SCLKO00 = Port used as SCLK00 output\n9 : SCLKO20 = Port used as SCLK20 output\n10 : TXD1 = Port used as TXD1\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_P123CFG ) </loc>
//      <o.3..0> CFG
//        <0=> 0: GPIO = Port used as GPIO
//        <1=> 1: TO10 = Port used as TO10
//        <2=> 2: TO11 = Port used as TO11
//        <3=> 3: TO12 = Port used as TO12
//        <4=> 4: TO13 = Port used as TO13
//        <5=> 5: SDO00/TxD0 = Port used as SDO00/TxD0
//        <6=> 6: SDO20/TxD2 = Port used as SDO20/TxD2
//        <7=> 7: CLKBUZ0 = Port used as CLKBUZ0
//        <8=> 8: SCLKO00 = Port used as SCLK00 output
//        <9=> 9: SCLKO20 = Port used as SCLK20 output
//        <10=> 10: TXD1 = Port used as TXD1
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: PORT_P123CFG  ----------------------------------
// SVD Line: 2183

//  <rtree> SFDITEM_REG__PORT_P123CFG
//    <name> P123CFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40040843) Alterate Output Function configuration register </i>
//    <loc> ( (unsigned char)((PORT_P123CFG >> 0) & 0xFF), ((PORT_P123CFG = (PORT_P123CFG & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_P123CFG_CFG </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PORT_P124CFG  ------------------------------
// SVD Line: 2188

unsigned char PORT_P124CFG __AT (0x40040844);



// ------------------------------  Field Item: PORT_P124CFG_CFG  ----------------------------------
// SVD Line: 1938

//  <item> SFDITEM_FIELD__PORT_P124CFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40040844) \nAlterate Output Function configuration register\n0 : GPIO = Port used as GPIO\n1 : TO10 = Port used as TO10\n2 : TO11 = Port used as TO11\n3 : TO12 = Port used as TO12\n4 : TO13 = Port used as TO13\n5 : SDO00/TxD0 = Port used as SDO00/TxD0\n6 : SDO20/TxD2 = Port used as SDO20/TxD2\n7 : CLKBUZ0 = Port used as CLKBUZ0\n8 : SCLKO00 = Port used as SCLK00 output\n9 : SCLKO20 = Port used as SCLK20 output\n10 : TXD1 = Port used as TXD1\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_P124CFG ) </loc>
//      <o.3..0> CFG
//        <0=> 0: GPIO = Port used as GPIO
//        <1=> 1: TO10 = Port used as TO10
//        <2=> 2: TO11 = Port used as TO11
//        <3=> 3: TO12 = Port used as TO12
//        <4=> 4: TO13 = Port used as TO13
//        <5=> 5: SDO00/TxD0 = Port used as SDO00/TxD0
//        <6=> 6: SDO20/TxD2 = Port used as SDO20/TxD2
//        <7=> 7: CLKBUZ0 = Port used as CLKBUZ0
//        <8=> 8: SCLKO00 = Port used as SCLK00 output
//        <9=> 9: SCLKO20 = Port used as SCLK20 output
//        <10=> 10: TXD1 = Port used as TXD1
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: PORT_P124CFG  ----------------------------------
// SVD Line: 2188

//  <rtree> SFDITEM_REG__PORT_P124CFG
//    <name> P124CFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40040844) Alterate Output Function configuration register </i>
//    <loc> ( (unsigned char)((PORT_P124CFG >> 0) & 0xFF), ((PORT_P124CFG = (PORT_P124CFG & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_P124CFG_CFG </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PORT_P130CFG  ------------------------------
// SVD Line: 2193

unsigned char PORT_P130CFG __AT (0x40040848);



// ------------------------------  Field Item: PORT_P130CFG_CFG  ----------------------------------
// SVD Line: 1938

//  <item> SFDITEM_FIELD__PORT_P130CFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40040848) \nAlterate Output Function configuration register\n0 : GPIO = Port used as GPIO\n1 : TO10 = Port used as TO10\n2 : TO11 = Port used as TO11\n3 : TO12 = Port used as TO12\n4 : TO13 = Port used as TO13\n5 : SDO00/TxD0 = Port used as SDO00/TxD0\n6 : SDO20/TxD2 = Port used as SDO20/TxD2\n7 : CLKBUZ0 = Port used as CLKBUZ0\n8 : SCLKO00 = Port used as SCLK00 output\n9 : SCLKO20 = Port used as SCLK20 output\n10 : TXD1 = Port used as TXD1\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_P130CFG ) </loc>
//      <o.3..0> CFG
//        <0=> 0: GPIO = Port used as GPIO
//        <1=> 1: TO10 = Port used as TO10
//        <2=> 2: TO11 = Port used as TO11
//        <3=> 3: TO12 = Port used as TO12
//        <4=> 4: TO13 = Port used as TO13
//        <5=> 5: SDO00/TxD0 = Port used as SDO00/TxD0
//        <6=> 6: SDO20/TxD2 = Port used as SDO20/TxD2
//        <7=> 7: CLKBUZ0 = Port used as CLKBUZ0
//        <8=> 8: SCLKO00 = Port used as SCLK00 output
//        <9=> 9: SCLKO20 = Port used as SCLK20 output
//        <10=> 10: TXD1 = Port used as TXD1
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: PORT_P130CFG  ----------------------------------
// SVD Line: 2193

//  <rtree> SFDITEM_REG__PORT_P130CFG
//    <name> P130CFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40040848) Alterate Output Function configuration register </i>
//    <loc> ( (unsigned char)((PORT_P130CFG >> 0) & 0xFF), ((PORT_P130CFG = (PORT_P130CFG & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_P130CFG_CFG </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PORT_P136CFG  ------------------------------
// SVD Line: 2198

unsigned char PORT_P136CFG __AT (0x4004084E);



// ------------------------------  Field Item: PORT_P136CFG_CFG  ----------------------------------
// SVD Line: 1938

//  <item> SFDITEM_FIELD__PORT_P136CFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x4004084E) \nAlterate Output Function configuration register\n0 : GPIO = Port used as GPIO\n1 : TO10 = Port used as TO10\n2 : TO11 = Port used as TO11\n3 : TO12 = Port used as TO12\n4 : TO13 = Port used as TO13\n5 : SDO00/TxD0 = Port used as SDO00/TxD0\n6 : SDO20/TxD2 = Port used as SDO20/TxD2\n7 : CLKBUZ0 = Port used as CLKBUZ0\n8 : SCLKO00 = Port used as SCLK00 output\n9 : SCLKO20 = Port used as SCLK20 output\n10 : TXD1 = Port used as TXD1\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_P136CFG ) </loc>
//      <o.3..0> CFG
//        <0=> 0: GPIO = Port used as GPIO
//        <1=> 1: TO10 = Port used as TO10
//        <2=> 2: TO11 = Port used as TO11
//        <3=> 3: TO12 = Port used as TO12
//        <4=> 4: TO13 = Port used as TO13
//        <5=> 5: SDO00/TxD0 = Port used as SDO00/TxD0
//        <6=> 6: SDO20/TxD2 = Port used as SDO20/TxD2
//        <7=> 7: CLKBUZ0 = Port used as CLKBUZ0
//        <8=> 8: SCLKO00 = Port used as SCLK00 output
//        <9=> 9: SCLKO20 = Port used as SCLK20 output
//        <10=> 10: TXD1 = Port used as TXD1
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: PORT_P136CFG  ----------------------------------
// SVD Line: 2198

//  <rtree> SFDITEM_REG__PORT_P136CFG
//    <name> P136CFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4004084E) Alterate Output Function configuration register </i>
//    <loc> ( (unsigned char)((PORT_P136CFG >> 0) & 0xFF), ((PORT_P136CFG = (PORT_P136CFG & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_P136CFG_CFG </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PORT_P137CFG  ------------------------------
// SVD Line: 2203

unsigned char PORT_P137CFG __AT (0x4004084F);



// ------------------------------  Field Item: PORT_P137CFG_CFG  ----------------------------------
// SVD Line: 1938

//  <item> SFDITEM_FIELD__PORT_P137CFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x4004084F) \nAlterate Output Function configuration register\n0 : GPIO = Port used as GPIO\n1 : TO10 = Port used as TO10\n2 : TO11 = Port used as TO11\n3 : TO12 = Port used as TO12\n4 : TO13 = Port used as TO13\n5 : SDO00/TxD0 = Port used as SDO00/TxD0\n6 : SDO20/TxD2 = Port used as SDO20/TxD2\n7 : CLKBUZ0 = Port used as CLKBUZ0\n8 : SCLKO00 = Port used as SCLK00 output\n9 : SCLKO20 = Port used as SCLK20 output\n10 : TXD1 = Port used as TXD1\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_P137CFG ) </loc>
//      <o.3..0> CFG
//        <0=> 0: GPIO = Port used as GPIO
//        <1=> 1: TO10 = Port used as TO10
//        <2=> 2: TO11 = Port used as TO11
//        <3=> 3: TO12 = Port used as TO12
//        <4=> 4: TO13 = Port used as TO13
//        <5=> 5: SDO00/TxD0 = Port used as SDO00/TxD0
//        <6=> 6: SDO20/TxD2 = Port used as SDO20/TxD2
//        <7=> 7: CLKBUZ0 = Port used as CLKBUZ0
//        <8=> 8: SCLKO00 = Port used as SCLK00 output
//        <9=> 9: SCLKO20 = Port used as SCLK20 output
//        <10=> 10: TXD1 = Port used as TXD1
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: PORT_P137CFG  ----------------------------------
// SVD Line: 2203

//  <rtree> SFDITEM_REG__PORT_P137CFG
//    <name> P137CFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4004084F) Alterate Output Function configuration register </i>
//    <loc> ( (unsigned char)((PORT_P137CFG >> 0) & 0xFF), ((PORT_P137CFG = (PORT_P137CFG & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_P137CFG_CFG </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PORT_P140CFG  ------------------------------
// SVD Line: 2208

unsigned char PORT_P140CFG __AT (0x40040850);



// ------------------------------  Field Item: PORT_P140CFG_CFG  ----------------------------------
// SVD Line: 1938

//  <item> SFDITEM_FIELD__PORT_P140CFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40040850) \nAlterate Output Function configuration register\n0 : GPIO = Port used as GPIO\n1 : TO10 = Port used as TO10\n2 : TO11 = Port used as TO11\n3 : TO12 = Port used as TO12\n4 : TO13 = Port used as TO13\n5 : SDO00/TxD0 = Port used as SDO00/TxD0\n6 : SDO20/TxD2 = Port used as SDO20/TxD2\n7 : CLKBUZ0 = Port used as CLKBUZ0\n8 : SCLKO00 = Port used as SCLK00 output\n9 : SCLKO20 = Port used as SCLK20 output\n10 : TXD1 = Port used as TXD1\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_P140CFG ) </loc>
//      <o.3..0> CFG
//        <0=> 0: GPIO = Port used as GPIO
//        <1=> 1: TO10 = Port used as TO10
//        <2=> 2: TO11 = Port used as TO11
//        <3=> 3: TO12 = Port used as TO12
//        <4=> 4: TO13 = Port used as TO13
//        <5=> 5: SDO00/TxD0 = Port used as SDO00/TxD0
//        <6=> 6: SDO20/TxD2 = Port used as SDO20/TxD2
//        <7=> 7: CLKBUZ0 = Port used as CLKBUZ0
//        <8=> 8: SCLKO00 = Port used as SCLK00 output
//        <9=> 9: SCLKO20 = Port used as SCLK20 output
//        <10=> 10: TXD1 = Port used as TXD1
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: PORT_P140CFG  ----------------------------------
// SVD Line: 2208

//  <rtree> SFDITEM_REG__PORT_P140CFG
//    <name> P140CFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40040850) Alterate Output Function configuration register </i>
//    <loc> ( (unsigned char)((PORT_P140CFG >> 0) & 0xFF), ((PORT_P140CFG = (PORT_P140CFG & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_P140CFG_CFG </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PORT_P146CFG  ------------------------------
// SVD Line: 2213

unsigned char PORT_P146CFG __AT (0x40040856);



// ------------------------------  Field Item: PORT_P146CFG_CFG  ----------------------------------
// SVD Line: 1938

//  <item> SFDITEM_FIELD__PORT_P146CFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40040856) \nAlterate Output Function configuration register\n0 : GPIO = Port used as GPIO\n1 : TO10 = Port used as TO10\n2 : TO11 = Port used as TO11\n3 : TO12 = Port used as TO12\n4 : TO13 = Port used as TO13\n5 : SDO00/TxD0 = Port used as SDO00/TxD0\n6 : SDO20/TxD2 = Port used as SDO20/TxD2\n7 : CLKBUZ0 = Port used as CLKBUZ0\n8 : SCLKO00 = Port used as SCLK00 output\n9 : SCLKO20 = Port used as SCLK20 output\n10 : TXD1 = Port used as TXD1\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_P146CFG ) </loc>
//      <o.3..0> CFG
//        <0=> 0: GPIO = Port used as GPIO
//        <1=> 1: TO10 = Port used as TO10
//        <2=> 2: TO11 = Port used as TO11
//        <3=> 3: TO12 = Port used as TO12
//        <4=> 4: TO13 = Port used as TO13
//        <5=> 5: SDO00/TxD0 = Port used as SDO00/TxD0
//        <6=> 6: SDO20/TxD2 = Port used as SDO20/TxD2
//        <7=> 7: CLKBUZ0 = Port used as CLKBUZ0
//        <8=> 8: SCLKO00 = Port used as SCLK00 output
//        <9=> 9: SCLKO20 = Port used as SCLK20 output
//        <10=> 10: TXD1 = Port used as TXD1
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: PORT_P146CFG  ----------------------------------
// SVD Line: 2213

//  <rtree> SFDITEM_REG__PORT_P146CFG
//    <name> P146CFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40040856) Alterate Output Function configuration register </i>
//    <loc> ( (unsigned char)((PORT_P146CFG >> 0) & 0xFF), ((PORT_P146CFG = (PORT_P146CFG & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_P146CFG_CFG </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PORT_P147CFG  ------------------------------
// SVD Line: 2218

unsigned char PORT_P147CFG __AT (0x40040857);



// ------------------------------  Field Item: PORT_P147CFG_CFG  ----------------------------------
// SVD Line: 1938

//  <item> SFDITEM_FIELD__PORT_P147CFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40040857) \nAlterate Output Function configuration register\n0 : GPIO = Port used as GPIO\n1 : TO10 = Port used as TO10\n2 : TO11 = Port used as TO11\n3 : TO12 = Port used as TO12\n4 : TO13 = Port used as TO13\n5 : SDO00/TxD0 = Port used as SDO00/TxD0\n6 : SDO20/TxD2 = Port used as SDO20/TxD2\n7 : CLKBUZ0 = Port used as CLKBUZ0\n8 : SCLKO00 = Port used as SCLK00 output\n9 : SCLKO20 = Port used as SCLK20 output\n10 : TXD1 = Port used as TXD1\n11 : Reserved - do not use\n12 : Reserved - do not use\n13 : Reserved - do not use\n14 : Reserved - do not use\n15 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_P147CFG ) </loc>
//      <o.3..0> CFG
//        <0=> 0: GPIO = Port used as GPIO
//        <1=> 1: TO10 = Port used as TO10
//        <2=> 2: TO11 = Port used as TO11
//        <3=> 3: TO12 = Port used as TO12
//        <4=> 4: TO13 = Port used as TO13
//        <5=> 5: SDO00/TxD0 = Port used as SDO00/TxD0
//        <6=> 6: SDO20/TxD2 = Port used as SDO20/TxD2
//        <7=> 7: CLKBUZ0 = Port used as CLKBUZ0
//        <8=> 8: SCLKO00 = Port used as SCLK00 output
//        <9=> 9: SCLKO20 = Port used as SCLK20 output
//        <10=> 10: TXD1 = Port used as TXD1
//        <11=> 11: 
//        <12=> 12: 
//        <13=> 13: 
//        <14=> 14: 
//        <15=> 15: 
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: PORT_P147CFG  ----------------------------------
// SVD Line: 2218

//  <rtree> SFDITEM_REG__PORT_P147CFG
//    <name> P147CFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40040857) Alterate Output Function configuration register </i>
//    <loc> ( (unsigned char)((PORT_P147CFG >> 0) & 0xFF), ((PORT_P147CFG = (PORT_P147CFG & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_P147CFG_CFG </item>
//  </rtree>
//  


// --------------------------  Register Item Address: PORT_TI10PCFG  ------------------------------
// SVD Line: 2223

unsigned char PORT_TI10PCFG __AT (0x40040860);



// ------------------------------  Field Item: PORT_TI10PCFG_CFG  ---------------------------------
// SVD Line: 2231

//  <item> SFDITEM_FIELD__PORT_TI10PCFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 5..0] RW (@ 0x40040860) \nCFG\n0 : Reserved - do not use\n1 : P00 = P00 used as TI10\n2 : P01 = P01 used as TI10\n3 : P10 = P10 used as TI10\n4 : P11 = P11 used as TI10\n5 : P12 = P12 used as TI10\n6 : P13 = P13 used as TI10\n7 : P14 = P14 used as TI10\n8 : P15 = P15 used as TI10\n9 : P16 = P16 used as TI10\n10 : P17 = P17 used as TI10\n11 : P20 = P20 used as TI10\n12 : P21 = P21 used as TI10\n13 : P22 = P22 used as TI10\n14 : P23 = P23 used as TI10\n15 : P24 = P24 used as TI10\n16 : P25 = P25 used as TI10\n17 : P26 = P26 used as TI10\n18 : P27 = P27 used as TI10\n19 : P30 = P30 used as TI10\n20 : P31 = P31 used as TI10\n21 : P40 = P40 used as TI10\n22 : P41 = P41 used as TI10\n23 : P50 = P50 used as TI10\n24 : P51 = P51 used as TI10\n25 : P60 = P60 used as TI10\n26 : P61 = P61 used as TI10\n27 : P62 = P62 used as TI10\n28 : P63 = P63 used as TI10\n29 : P70 = P70 used as TI10\n30 : P71 = P71 used as TI10\n31 : P72 = P72 used as TI10\n32 : P73 = P73 used as TI10\n33 : P74 = P74 used as TI10\n34 : P75 = P75 used as TI10\n35 : P120 = P120 used as TI10\n36 : P121 = P121 used as TI10\n37 : P122 = P122 used as TI10\n38 : P123 = P123 used as TI10\n39 : P124 = P124 used as TI10\n40 : P130 = P130 used as TI10\n41 : P136 = P136 used as TI10\n42 : P137 = P137 used as TI10\n43 : P140 = P140 used as TI10\n44 : P146 = P146 used as TI10\n45 : P147 = P147 used as TI10\n46 : Reserved - do not use\n47 : Reserved - do not use\n48 : Reserved - do not use\n49 : Reserved - do not use\n50 : Reserved - do not use\n51 : Reserved - do not use\n52 : Reserved - do not use\n53 : Reserved - do not use\n54 : Reserved - do not use\n55 : Reserved - do not use\n56 : Reserved - do not use\n57 : Reserved - do not use\n58 : Reserved - do not use\n59 : Reserved - do not use\n60 : Reserved - do not use\n61 : Reserved - do not use\n62 : Reserved - do not use\n63 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_TI10PCFG ) </loc>
//      <o.5..0> CFG
//        <0=> 0: 
//        <1=> 1: P00 = P00 used as TI10
//        <2=> 2: P01 = P01 used as TI10
//        <3=> 3: P10 = P10 used as TI10
//        <4=> 4: P11 = P11 used as TI10
//        <5=> 5: P12 = P12 used as TI10
//        <6=> 6: P13 = P13 used as TI10
//        <7=> 7: P14 = P14 used as TI10
//        <8=> 8: P15 = P15 used as TI10
//        <9=> 9: P16 = P16 used as TI10
//        <10=> 10: P17 = P17 used as TI10
//        <11=> 11: P20 = P20 used as TI10
//        <12=> 12: P21 = P21 used as TI10
//        <13=> 13: P22 = P22 used as TI10
//        <14=> 14: P23 = P23 used as TI10
//        <15=> 15: P24 = P24 used as TI10
//        <16=> 16: P25 = P25 used as TI10
//        <17=> 17: P26 = P26 used as TI10
//        <18=> 18: P27 = P27 used as TI10
//        <19=> 19: P30 = P30 used as TI10
//        <20=> 20: P31 = P31 used as TI10
//        <21=> 21: P40 = P40 used as TI10
//        <22=> 22: P41 = P41 used as TI10
//        <23=> 23: P50 = P50 used as TI10
//        <24=> 24: P51 = P51 used as TI10
//        <25=> 25: P60 = P60 used as TI10
//        <26=> 26: P61 = P61 used as TI10
//        <27=> 27: P62 = P62 used as TI10
//        <28=> 28: P63 = P63 used as TI10
//        <29=> 29: P70 = P70 used as TI10
//        <30=> 30: P71 = P71 used as TI10
//        <31=> 31: P72 = P72 used as TI10
//        <32=> 32: P73 = P73 used as TI10
//        <33=> 33: P74 = P74 used as TI10
//        <34=> 34: P75 = P75 used as TI10
//        <35=> 35: P120 = P120 used as TI10
//        <36=> 36: P121 = P121 used as TI10
//        <37=> 37: P122 = P122 used as TI10
//        <38=> 38: P123 = P123 used as TI10
//        <39=> 39: P124 = P124 used as TI10
//        <40=> 40: P130 = P130 used as TI10
//        <41=> 41: P136 = P136 used as TI10
//        <42=> 42: P137 = P137 used as TI10
//        <43=> 43: P140 = P140 used as TI10
//        <44=> 44: P146 = P146 used as TI10
//        <45=> 45: P147 = P147 used as TI10
//        <46=> 46: 
//        <47=> 47: 
//        <48=> 48: 
//        <49=> 49: 
//        <50=> 50: 
//        <51=> 51: 
//        <52=> 52: 
//        <53=> 53: 
//        <54=> 54: 
//        <55=> 55: 
//        <56=> 56: 
//        <57=> 57: 
//        <58=> 58: 
//        <59=> 59: 
//        <60=> 60: 
//        <61=> 61: 
//        <62=> 62: 
//        <63=> 63: 
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: PORT_TI10PCFG  ---------------------------------
// SVD Line: 2223

//  <rtree> SFDITEM_REG__PORT_TI10PCFG
//    <name> TI10PCFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40040860) TI10 alternate function pin configuration register </i>
//    <loc> ( (unsigned char)((PORT_TI10PCFG >> 0) & 0xFF), ((PORT_TI10PCFG = (PORT_TI10PCFG & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_TI10PCFG_CFG </item>
//  </rtree>
//  


// --------------------------  Register Item Address: PORT_TI11PCFG  ------------------------------
// SVD Line: 2465

unsigned char PORT_TI11PCFG __AT (0x40040861);



// ------------------------------  Field Item: PORT_TI11PCFG_CFG  ---------------------------------
// SVD Line: 2473

//  <item> SFDITEM_FIELD__PORT_TI11PCFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 5..0] RW (@ 0x40040861) \nCFG\n0 : Reserved - do not use\n1 : P00 = P00 used as TI11\n2 : P01 = P01 used as TI11\n3 : P10 = P10 used as TI11\n4 : P11 = P11 used as TI11\n5 : P12 = P12 used as TI11\n6 : P13 = P13 used as TI11\n7 : P14 = P14 used as TI11\n8 : P15 = P15 used as TI11\n9 : P16 = P16 used as TI11\n10 : P17 = P17 used as TI11\n11 : P20 = P20 used as TI11\n12 : P21 = P21 used as TI11\n13 : P22 = P22 used as TI11\n14 : P23 = P23 used as TI11\n15 : P24 = P24 used as TI11\n16 : P25 = P25 used as TI11\n17 : P26 = P26 used as TI11\n18 : P27 = P27 used as TI11\n19 : P30 = P30 used as TI11\n20 : P31 = P31 used as TI11\n21 : P40 = P40 used as TI11\n22 : P41 = P41 used as TI11\n23 : P50 = P50 used as TI11\n24 : P51 = P51 used as TI11\n25 : P60 = P60 used as TI11\n26 : P61 = P61 used as TI11\n27 : P62 = P62 used as TI11\n28 : P63 = P63 used as TI11\n29 : P70 = P70 used as TI11\n30 : P71 = P71 used as TI11\n31 : P72 = P72 used as TI11\n32 : P73 = P73 used as TI11\n33 : P74 = P74 used as TI11\n34 : P75 = P75 used as TI11\n35 : P120 = P120 used as TI11\n36 : P121 = P121 used as TI11\n37 : P122 = P122 used as TI11\n38 : P123 = P123 used as TI11\n39 : P124 = P124 used as TI11\n40 : P130 = P130 used as TI11\n41 : P136 = P136 used as TI11\n42 : P137 = P137 used as TI11\n43 : P140 = P140 used as TI11\n44 : P146 = P146 used as TI11\n45 : P147 = P147 used as TI11\n46 : Reserved - do not use\n47 : Reserved - do not use\n48 : Reserved - do not use\n49 : Reserved - do not use\n50 : Reserved - do not use\n51 : Reserved - do not use\n52 : Reserved - do not use\n53 : Reserved - do not use\n54 : Reserved - do not use\n55 : Reserved - do not use\n56 : Reserved - do not use\n57 : Reserved - do not use\n58 : Reserved - do not use\n59 : Reserved - do not use\n60 : Reserved - do not use\n61 : Reserved - do not use\n62 : Reserved - do not use\n63 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_TI11PCFG ) </loc>
//      <o.5..0> CFG
//        <0=> 0: 
//        <1=> 1: P00 = P00 used as TI11
//        <2=> 2: P01 = P01 used as TI11
//        <3=> 3: P10 = P10 used as TI11
//        <4=> 4: P11 = P11 used as TI11
//        <5=> 5: P12 = P12 used as TI11
//        <6=> 6: P13 = P13 used as TI11
//        <7=> 7: P14 = P14 used as TI11
//        <8=> 8: P15 = P15 used as TI11
//        <9=> 9: P16 = P16 used as TI11
//        <10=> 10: P17 = P17 used as TI11
//        <11=> 11: P20 = P20 used as TI11
//        <12=> 12: P21 = P21 used as TI11
//        <13=> 13: P22 = P22 used as TI11
//        <14=> 14: P23 = P23 used as TI11
//        <15=> 15: P24 = P24 used as TI11
//        <16=> 16: P25 = P25 used as TI11
//        <17=> 17: P26 = P26 used as TI11
//        <18=> 18: P27 = P27 used as TI11
//        <19=> 19: P30 = P30 used as TI11
//        <20=> 20: P31 = P31 used as TI11
//        <21=> 21: P40 = P40 used as TI11
//        <22=> 22: P41 = P41 used as TI11
//        <23=> 23: P50 = P50 used as TI11
//        <24=> 24: P51 = P51 used as TI11
//        <25=> 25: P60 = P60 used as TI11
//        <26=> 26: P61 = P61 used as TI11
//        <27=> 27: P62 = P62 used as TI11
//        <28=> 28: P63 = P63 used as TI11
//        <29=> 29: P70 = P70 used as TI11
//        <30=> 30: P71 = P71 used as TI11
//        <31=> 31: P72 = P72 used as TI11
//        <32=> 32: P73 = P73 used as TI11
//        <33=> 33: P74 = P74 used as TI11
//        <34=> 34: P75 = P75 used as TI11
//        <35=> 35: P120 = P120 used as TI11
//        <36=> 36: P121 = P121 used as TI11
//        <37=> 37: P122 = P122 used as TI11
//        <38=> 38: P123 = P123 used as TI11
//        <39=> 39: P124 = P124 used as TI11
//        <40=> 40: P130 = P130 used as TI11
//        <41=> 41: P136 = P136 used as TI11
//        <42=> 42: P137 = P137 used as TI11
//        <43=> 43: P140 = P140 used as TI11
//        <44=> 44: P146 = P146 used as TI11
//        <45=> 45: P147 = P147 used as TI11
//        <46=> 46: 
//        <47=> 47: 
//        <48=> 48: 
//        <49=> 49: 
//        <50=> 50: 
//        <51=> 51: 
//        <52=> 52: 
//        <53=> 53: 
//        <54=> 54: 
//        <55=> 55: 
//        <56=> 56: 
//        <57=> 57: 
//        <58=> 58: 
//        <59=> 59: 
//        <60=> 60: 
//        <61=> 61: 
//        <62=> 62: 
//        <63=> 63: 
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: PORT_TI11PCFG  ---------------------------------
// SVD Line: 2465

//  <rtree> SFDITEM_REG__PORT_TI11PCFG
//    <name> TI11PCFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40040861) TI11 alternate function pin configuration register </i>
//    <loc> ( (unsigned char)((PORT_TI11PCFG >> 0) & 0xFF), ((PORT_TI11PCFG = (PORT_TI11PCFG & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_TI11PCFG_CFG </item>
//  </rtree>
//  


// --------------------------  Register Item Address: PORT_TI12PCFG  ------------------------------
// SVD Line: 2707

unsigned char PORT_TI12PCFG __AT (0x40040862);



// ------------------------------  Field Item: PORT_TI12PCFG_CFG  ---------------------------------
// SVD Line: 2715

//  <item> SFDITEM_FIELD__PORT_TI12PCFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 5..0] RW (@ 0x40040862) \nCFG\n0 : Reserved - do not use\n1 : P00 = P00 used as TI12\n2 : P01 = P01 used as TI12\n3 : P10 = P10 used as TI12\n4 : P11 = P11 used as TI12\n5 : P12 = P12 used as TI12\n6 : P13 = P13 used as TI12\n7 : P14 = P14 used as TI12\n8 : P15 = P15 used as TI12\n9 : P16 = P16 used as TI12\n10 : P17 = P17 used as TI12\n11 : P20 = P20 used as TI12\n12 : P21 = P21 used as TI12\n13 : P22 = P22 used as TI12\n14 : P23 = P23 used as TI12\n15 : P24 = P24 used as TI12\n16 : P25 = P25 used as TI12\n17 : P26 = P26 used as TI12\n18 : P27 = P27 used as TI12\n19 : P30 = P30 used as TI12\n20 : P31 = P31 used as TI12\n21 : P40 = P40 used as TI12\n22 : P41 = P41 used as TI12\n23 : P50 = P50 used as TI12\n24 : P51 = P51 used as TI12\n25 : P60 = P60 used as TI12\n26 : P61 = P61 used as TI12\n27 : P62 = P62 used as TI12\n28 : P63 = P63 used as TI12\n29 : P70 = P70 used as TI12\n30 : P71 = P71 used as TI12\n31 : P72 = P72 used as TI12\n32 : P73 = P73 used as TI12\n33 : P74 = P74 used as TI12\n34 : P75 = P75 used as TI12\n35 : P120 = P120 used as TI12\n36 : P121 = P121 used as TI12\n37 : P122 = P122 used as TI12\n38 : P123 = P123 used as TI12\n39 : P124 = P124 used as TI12\n40 : P130 = P130 used as TI12\n41 : P136 = P136 used as TI12\n42 : P137 = P137 used as TI12\n43 : P140 = P140 used as TI12\n44 : P146 = P146 used as TI12\n45 : P147 = P147 used as TI12\n46 : Reserved - do not use\n47 : Reserved - do not use\n48 : Reserved - do not use\n49 : Reserved - do not use\n50 : Reserved - do not use\n51 : Reserved - do not use\n52 : Reserved - do not use\n53 : Reserved - do not use\n54 : Reserved - do not use\n55 : Reserved - do not use\n56 : Reserved - do not use\n57 : Reserved - do not use\n58 : Reserved - do not use\n59 : Reserved - do not use\n60 : Reserved - do not use\n61 : Reserved - do not use\n62 : Reserved - do not use\n63 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_TI12PCFG ) </loc>
//      <o.5..0> CFG
//        <0=> 0: 
//        <1=> 1: P00 = P00 used as TI12
//        <2=> 2: P01 = P01 used as TI12
//        <3=> 3: P10 = P10 used as TI12
//        <4=> 4: P11 = P11 used as TI12
//        <5=> 5: P12 = P12 used as TI12
//        <6=> 6: P13 = P13 used as TI12
//        <7=> 7: P14 = P14 used as TI12
//        <8=> 8: P15 = P15 used as TI12
//        <9=> 9: P16 = P16 used as TI12
//        <10=> 10: P17 = P17 used as TI12
//        <11=> 11: P20 = P20 used as TI12
//        <12=> 12: P21 = P21 used as TI12
//        <13=> 13: P22 = P22 used as TI12
//        <14=> 14: P23 = P23 used as TI12
//        <15=> 15: P24 = P24 used as TI12
//        <16=> 16: P25 = P25 used as TI12
//        <17=> 17: P26 = P26 used as TI12
//        <18=> 18: P27 = P27 used as TI12
//        <19=> 19: P30 = P30 used as TI12
//        <20=> 20: P31 = P31 used as TI12
//        <21=> 21: P40 = P40 used as TI12
//        <22=> 22: P41 = P41 used as TI12
//        <23=> 23: P50 = P50 used as TI12
//        <24=> 24: P51 = P51 used as TI12
//        <25=> 25: P60 = P60 used as TI12
//        <26=> 26: P61 = P61 used as TI12
//        <27=> 27: P62 = P62 used as TI12
//        <28=> 28: P63 = P63 used as TI12
//        <29=> 29: P70 = P70 used as TI12
//        <30=> 30: P71 = P71 used as TI12
//        <31=> 31: P72 = P72 used as TI12
//        <32=> 32: P73 = P73 used as TI12
//        <33=> 33: P74 = P74 used as TI12
//        <34=> 34: P75 = P75 used as TI12
//        <35=> 35: P120 = P120 used as TI12
//        <36=> 36: P121 = P121 used as TI12
//        <37=> 37: P122 = P122 used as TI12
//        <38=> 38: P123 = P123 used as TI12
//        <39=> 39: P124 = P124 used as TI12
//        <40=> 40: P130 = P130 used as TI12
//        <41=> 41: P136 = P136 used as TI12
//        <42=> 42: P137 = P137 used as TI12
//        <43=> 43: P140 = P140 used as TI12
//        <44=> 44: P146 = P146 used as TI12
//        <45=> 45: P147 = P147 used as TI12
//        <46=> 46: 
//        <47=> 47: 
//        <48=> 48: 
//        <49=> 49: 
//        <50=> 50: 
//        <51=> 51: 
//        <52=> 52: 
//        <53=> 53: 
//        <54=> 54: 
//        <55=> 55: 
//        <56=> 56: 
//        <57=> 57: 
//        <58=> 58: 
//        <59=> 59: 
//        <60=> 60: 
//        <61=> 61: 
//        <62=> 62: 
//        <63=> 63: 
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: PORT_TI12PCFG  ---------------------------------
// SVD Line: 2707

//  <rtree> SFDITEM_REG__PORT_TI12PCFG
//    <name> TI12PCFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40040862) TI12 alternate function pin configuration register </i>
//    <loc> ( (unsigned char)((PORT_TI12PCFG >> 0) & 0xFF), ((PORT_TI12PCFG = (PORT_TI12PCFG & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_TI12PCFG_CFG </item>
//  </rtree>
//  


// --------------------------  Register Item Address: PORT_TI13PCFG  ------------------------------
// SVD Line: 2949

unsigned char PORT_TI13PCFG __AT (0x40040863);



// ------------------------------  Field Item: PORT_TI13PCFG_CFG  ---------------------------------
// SVD Line: 2957

//  <item> SFDITEM_FIELD__PORT_TI13PCFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 5..0] RW (@ 0x40040863) \nCFG\n0 : Reserved - do not use\n1 : P00 = P00 used as TI13\n2 : P01 = P01 used as TI13\n3 : P10 = P10 used as TI13\n4 : P11 = P11 used as TI13\n5 : P12 = P12 used as TI13\n6 : P13 = P13 used as TI13\n7 : P14 = P14 used as TI13\n8 : P15 = P15 used as TI13\n9 : P16 = P16 used as TI13\n10 : P17 = P17 used as TI13\n11 : P20 = P20 used as TI13\n12 : P21 = P21 used as TI13\n13 : P22 = P22 used as TI13\n14 : P23 = P23 used as TI13\n15 : P24 = P24 used as TI13\n16 : P25 = P25 used as TI13\n17 : P26 = P26 used as TI13\n18 : P27 = P27 used as TI13\n19 : P30 = P30 used as TI13\n20 : P31 = P31 used as TI13\n21 : P40 = P40 used as TI13\n22 : P41 = P41 used as TI13\n23 : P50 = P50 used as TI13\n24 : P51 = P51 used as TI13\n25 : P60 = P60 used as TI13\n26 : P61 = P61 used as TI13\n27 : P62 = P62 used as TI13\n28 : P63 = P63 used as TI13\n29 : P70 = P70 used as TI13\n30 : P71 = P71 used as TI13\n31 : P72 = P72 used as TI13\n32 : P73 = P73 used as TI13\n33 : P74 = P74 used as TI13\n34 : P75 = P75 used as TI13\n35 : P120 = P120 used as TI13\n36 : P121 = P121 used as TI13\n37 : P122 = P122 used as TI13\n38 : P123 = P123 used as TI13\n39 : P124 = P124 used as TI13\n40 : P130 = P130 used as TI13\n41 : P136 = P136 used as TI13\n42 : P137 = P137 used as TI13\n43 : P140 = P140 used as TI13\n44 : P146 = P146 used as TI13\n45 : P147 = P147 used as TI13\n46 : Reserved - do not use\n47 : Reserved - do not use\n48 : Reserved - do not use\n49 : Reserved - do not use\n50 : Reserved - do not use\n51 : Reserved - do not use\n52 : Reserved - do not use\n53 : Reserved - do not use\n54 : Reserved - do not use\n55 : Reserved - do not use\n56 : Reserved - do not use\n57 : Reserved - do not use\n58 : Reserved - do not use\n59 : Reserved - do not use\n60 : Reserved - do not use\n61 : Reserved - do not use\n62 : Reserved - do not use\n63 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_TI13PCFG ) </loc>
//      <o.5..0> CFG
//        <0=> 0: 
//        <1=> 1: P00 = P00 used as TI13
//        <2=> 2: P01 = P01 used as TI13
//        <3=> 3: P10 = P10 used as TI13
//        <4=> 4: P11 = P11 used as TI13
//        <5=> 5: P12 = P12 used as TI13
//        <6=> 6: P13 = P13 used as TI13
//        <7=> 7: P14 = P14 used as TI13
//        <8=> 8: P15 = P15 used as TI13
//        <9=> 9: P16 = P16 used as TI13
//        <10=> 10: P17 = P17 used as TI13
//        <11=> 11: P20 = P20 used as TI13
//        <12=> 12: P21 = P21 used as TI13
//        <13=> 13: P22 = P22 used as TI13
//        <14=> 14: P23 = P23 used as TI13
//        <15=> 15: P24 = P24 used as TI13
//        <16=> 16: P25 = P25 used as TI13
//        <17=> 17: P26 = P26 used as TI13
//        <18=> 18: P27 = P27 used as TI13
//        <19=> 19: P30 = P30 used as TI13
//        <20=> 20: P31 = P31 used as TI13
//        <21=> 21: P40 = P40 used as TI13
//        <22=> 22: P41 = P41 used as TI13
//        <23=> 23: P50 = P50 used as TI13
//        <24=> 24: P51 = P51 used as TI13
//        <25=> 25: P60 = P60 used as TI13
//        <26=> 26: P61 = P61 used as TI13
//        <27=> 27: P62 = P62 used as TI13
//        <28=> 28: P63 = P63 used as TI13
//        <29=> 29: P70 = P70 used as TI13
//        <30=> 30: P71 = P71 used as TI13
//        <31=> 31: P72 = P72 used as TI13
//        <32=> 32: P73 = P73 used as TI13
//        <33=> 33: P74 = P74 used as TI13
//        <34=> 34: P75 = P75 used as TI13
//        <35=> 35: P120 = P120 used as TI13
//        <36=> 36: P121 = P121 used as TI13
//        <37=> 37: P122 = P122 used as TI13
//        <38=> 38: P123 = P123 used as TI13
//        <39=> 39: P124 = P124 used as TI13
//        <40=> 40: P130 = P130 used as TI13
//        <41=> 41: P136 = P136 used as TI13
//        <42=> 42: P137 = P137 used as TI13
//        <43=> 43: P140 = P140 used as TI13
//        <44=> 44: P146 = P146 used as TI13
//        <45=> 45: P147 = P147 used as TI13
//        <46=> 46: 
//        <47=> 47: 
//        <48=> 48: 
//        <49=> 49: 
//        <50=> 50: 
//        <51=> 51: 
//        <52=> 52: 
//        <53=> 53: 
//        <54=> 54: 
//        <55=> 55: 
//        <56=> 56: 
//        <57=> 57: 
//        <58=> 58: 
//        <59=> 59: 
//        <60=> 60: 
//        <61=> 61: 
//        <62=> 62: 
//        <63=> 63: 
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: PORT_TI13PCFG  ---------------------------------
// SVD Line: 2949

//  <rtree> SFDITEM_REG__PORT_TI13PCFG
//    <name> TI13PCFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40040863) TI13 alternate function pin configuration register </i>
//    <loc> ( (unsigned char)((PORT_TI13PCFG >> 0) & 0xFF), ((PORT_TI13PCFG = (PORT_TI13PCFG & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_TI13PCFG_CFG </item>
//  </rtree>
//  


// --------------------------  Register Item Address: PORT_INTP0PCFG  -----------------------------
// SVD Line: 3191

unsigned char PORT_INTP0PCFG __AT (0x40040864);



// -----------------------------  Field Item: PORT_INTP0PCFG_CFG  ---------------------------------
// SVD Line: 3199

//  <item> SFDITEM_FIELD__PORT_INTP0PCFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 5..0] RW (@ 0x40040864) \nCFG\n0 : Reserved - do not use\n1 : P00 = P00 used as INTP0\n2 : P01 = P01 used as INTP0\n3 : P10 = P10 used as INTP0\n4 : P11 = P11 used as INTP0\n5 : P12 = P12 used as INTP0\n6 : P13 = P13 used as INTP0\n7 : P14 = P14 used as INTP0\n8 : P15 = P15 used as INTP0\n9 : P16 = P16 used as INTP0\n10 : P17 = P17 used as INTP0\n11 : P20 = P20 used as INTP0\n12 : P21 = P21 used as INTP0\n13 : P22 = P22 used as INTP0\n14 : P23 = P23 used as INTP0\n15 : P24 = P24 used as INTP0\n16 : P25 = P25 used as INTP0\n17 : P26 = P26 used as INTP0\n18 : P27 = P27 used as INTP0\n19 : P30 = P30 used as INTP0\n20 : P31 = P31 used as INTP0\n21 : P40 = P40 used as INTP0\n22 : P41 = P41 used as INTP0\n23 : P50 = P50 used as INTP0\n24 : P51 = P51 used as INTP0\n25 : P60 = P60 used as INTP0\n26 : P61 = P61 used as INTP0\n27 : P62 = P62 used as INTP0\n28 : P63 = P63 used as INTP0\n29 : P70 = P70 used as INTP0\n30 : P71 = P71 used as INTP0\n31 : P72 = P72 used as INTP0\n32 : P73 = P73 used as INTP0\n33 : P74 = P74 used as INTP0\n34 : P75 = P75 used as INTP0\n35 : P120 = P120 used as INTP0\n36 : P121 = P121 used as INTP0\n37 : P122 = P122 used as INTP0\n38 : P123 = P123 used as INTP0\n39 : P124 = P124 used as INTP0\n40 : P130 = P130 used as INTP0\n41 : P136 = P136 used as INTP0\n42 : P137 = P137 used as INTP0\n43 : P140 = P140 used as INTP0\n44 : P146 = P146 used as INTP0\n45 : P147 = P147 used as INTP0\n46 : Reserved - do not use\n47 : Reserved - do not use\n48 : Reserved - do not use\n49 : Reserved - do not use\n50 : Reserved - do not use\n51 : Reserved - do not use\n52 : Reserved - do not use\n53 : Reserved - do not use\n54 : Reserved - do not use\n55 : Reserved - do not use\n56 : Reserved - do not use\n57 : Reserved - do not use\n58 : Reserved - do not use\n59 : Reserved - do not use\n60 : Reserved - do not use\n61 : Reserved - do not use\n62 : Reserved - do not use\n63 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_INTP0PCFG ) </loc>
//      <o.5..0> CFG
//        <0=> 0: 
//        <1=> 1: P00 = P00 used as INTP0
//        <2=> 2: P01 = P01 used as INTP0
//        <3=> 3: P10 = P10 used as INTP0
//        <4=> 4: P11 = P11 used as INTP0
//        <5=> 5: P12 = P12 used as INTP0
//        <6=> 6: P13 = P13 used as INTP0
//        <7=> 7: P14 = P14 used as INTP0
//        <8=> 8: P15 = P15 used as INTP0
//        <9=> 9: P16 = P16 used as INTP0
//        <10=> 10: P17 = P17 used as INTP0
//        <11=> 11: P20 = P20 used as INTP0
//        <12=> 12: P21 = P21 used as INTP0
//        <13=> 13: P22 = P22 used as INTP0
//        <14=> 14: P23 = P23 used as INTP0
//        <15=> 15: P24 = P24 used as INTP0
//        <16=> 16: P25 = P25 used as INTP0
//        <17=> 17: P26 = P26 used as INTP0
//        <18=> 18: P27 = P27 used as INTP0
//        <19=> 19: P30 = P30 used as INTP0
//        <20=> 20: P31 = P31 used as INTP0
//        <21=> 21: P40 = P40 used as INTP0
//        <22=> 22: P41 = P41 used as INTP0
//        <23=> 23: P50 = P50 used as INTP0
//        <24=> 24: P51 = P51 used as INTP0
//        <25=> 25: P60 = P60 used as INTP0
//        <26=> 26: P61 = P61 used as INTP0
//        <27=> 27: P62 = P62 used as INTP0
//        <28=> 28: P63 = P63 used as INTP0
//        <29=> 29: P70 = P70 used as INTP0
//        <30=> 30: P71 = P71 used as INTP0
//        <31=> 31: P72 = P72 used as INTP0
//        <32=> 32: P73 = P73 used as INTP0
//        <33=> 33: P74 = P74 used as INTP0
//        <34=> 34: P75 = P75 used as INTP0
//        <35=> 35: P120 = P120 used as INTP0
//        <36=> 36: P121 = P121 used as INTP0
//        <37=> 37: P122 = P122 used as INTP0
//        <38=> 38: P123 = P123 used as INTP0
//        <39=> 39: P124 = P124 used as INTP0
//        <40=> 40: P130 = P130 used as INTP0
//        <41=> 41: P136 = P136 used as INTP0
//        <42=> 42: P137 = P137 used as INTP0
//        <43=> 43: P140 = P140 used as INTP0
//        <44=> 44: P146 = P146 used as INTP0
//        <45=> 45: P147 = P147 used as INTP0
//        <46=> 46: 
//        <47=> 47: 
//        <48=> 48: 
//        <49=> 49: 
//        <50=> 50: 
//        <51=> 51: 
//        <52=> 52: 
//        <53=> 53: 
//        <54=> 54: 
//        <55=> 55: 
//        <56=> 56: 
//        <57=> 57: 
//        <58=> 58: 
//        <59=> 59: 
//        <60=> 60: 
//        <61=> 61: 
//        <62=> 62: 
//        <63=> 63: 
//    </combo>
//  </item>
//  


// -----------------------------  Register RTree: PORT_INTP0PCFG  ---------------------------------
// SVD Line: 3191

//  <rtree> SFDITEM_REG__PORT_INTP0PCFG
//    <name> INTP0PCFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40040864) INTP0 alternate function pin configuration register </i>
//    <loc> ( (unsigned char)((PORT_INTP0PCFG >> 0) & 0xFF), ((PORT_INTP0PCFG = (PORT_INTP0PCFG & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_INTP0PCFG_CFG </item>
//  </rtree>
//  


// --------------------------  Register Item Address: PORT_INTP1PCFG  -----------------------------
// SVD Line: 3433

unsigned char PORT_INTP1PCFG __AT (0x40040865);



// -----------------------------  Field Item: PORT_INTP1PCFG_CFG  ---------------------------------
// SVD Line: 3441

//  <item> SFDITEM_FIELD__PORT_INTP1PCFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 5..0] RW (@ 0x40040865) \nCFG\n0 : Reserved - do not use\n1 : P00 = P00 used as INTP1\n2 : P01 = P01 used as INTP1\n3 : P10 = P10 used as INTP1\n4 : P11 = P11 used as INTP1\n5 : P12 = P12 used as INTP1\n6 : P13 = P13 used as INTP1\n7 : P14 = P14 used as INTP1\n8 : P15 = P15 used as INTP1\n9 : P16 = P16 used as INTP1\n10 : P17 = P17 used as INTP1\n11 : P20 = P20 used as INTP1\n12 : P21 = P21 used as INTP1\n13 : P22 = P22 used as INTP1\n14 : P23 = P23 used as INTP1\n15 : P24 = P24 used as INTP1\n16 : P25 = P25 used as INTP1\n17 : P26 = P26 used as INTP1\n18 : P27 = P27 used as INTP1\n19 : P30 = P30 used as INTP1\n20 : P31 = P31 used as INTP1\n21 : P40 = P40 used as INTP1\n22 : P41 = P41 used as INTP1\n23 : P50 = P50 used as INTP1\n24 : P51 = P51 used as INTP1\n25 : P60 = P60 used as INTP1\n26 : P61 = P61 used as INTP1\n27 : P62 = P62 used as INTP1\n28 : P63 = P63 used as INTP1\n29 : P70 = P70 used as INTP1\n30 : P71 = P71 used as INTP1\n31 : P72 = P72 used as INTP1\n32 : P73 = P73 used as INTP1\n33 : P74 = P74 used as INTP1\n34 : P75 = P75 used as INTP1\n35 : P120 = P120 used as INTP1\n36 : P121 = P121 used as INTP1\n37 : P122 = P122 used as INTP1\n38 : P123 = P123 used as INTP1\n39 : P124 = P124 used as INTP1\n40 : P130 = P130 used as INTP1\n41 : P136 = P136 used as INTP1\n42 : P137 = P137 used as INTP1\n43 : P140 = P140 used as INTP1\n44 : P146 = P146 used as INTP1\n45 : P147 = P147 used as INTP1\n46 : Reserved - do not use\n47 : Reserved - do not use\n48 : Reserved - do not use\n49 : Reserved - do not use\n50 : Reserved - do not use\n51 : Reserved - do not use\n52 : Reserved - do not use\n53 : Reserved - do not use\n54 : Reserved - do not use\n55 : Reserved - do not use\n56 : Reserved - do not use\n57 : Reserved - do not use\n58 : Reserved - do not use\n59 : Reserved - do not use\n60 : Reserved - do not use\n61 : Reserved - do not use\n62 : Reserved - do not use\n63 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_INTP1PCFG ) </loc>
//      <o.5..0> CFG
//        <0=> 0: 
//        <1=> 1: P00 = P00 used as INTP1
//        <2=> 2: P01 = P01 used as INTP1
//        <3=> 3: P10 = P10 used as INTP1
//        <4=> 4: P11 = P11 used as INTP1
//        <5=> 5: P12 = P12 used as INTP1
//        <6=> 6: P13 = P13 used as INTP1
//        <7=> 7: P14 = P14 used as INTP1
//        <8=> 8: P15 = P15 used as INTP1
//        <9=> 9: P16 = P16 used as INTP1
//        <10=> 10: P17 = P17 used as INTP1
//        <11=> 11: P20 = P20 used as INTP1
//        <12=> 12: P21 = P21 used as INTP1
//        <13=> 13: P22 = P22 used as INTP1
//        <14=> 14: P23 = P23 used as INTP1
//        <15=> 15: P24 = P24 used as INTP1
//        <16=> 16: P25 = P25 used as INTP1
//        <17=> 17: P26 = P26 used as INTP1
//        <18=> 18: P27 = P27 used as INTP1
//        <19=> 19: P30 = P30 used as INTP1
//        <20=> 20: P31 = P31 used as INTP1
//        <21=> 21: P40 = P40 used as INTP1
//        <22=> 22: P41 = P41 used as INTP1
//        <23=> 23: P50 = P50 used as INTP1
//        <24=> 24: P51 = P51 used as INTP1
//        <25=> 25: P60 = P60 used as INTP1
//        <26=> 26: P61 = P61 used as INTP1
//        <27=> 27: P62 = P62 used as INTP1
//        <28=> 28: P63 = P63 used as INTP1
//        <29=> 29: P70 = P70 used as INTP1
//        <30=> 30: P71 = P71 used as INTP1
//        <31=> 31: P72 = P72 used as INTP1
//        <32=> 32: P73 = P73 used as INTP1
//        <33=> 33: P74 = P74 used as INTP1
//        <34=> 34: P75 = P75 used as INTP1
//        <35=> 35: P120 = P120 used as INTP1
//        <36=> 36: P121 = P121 used as INTP1
//        <37=> 37: P122 = P122 used as INTP1
//        <38=> 38: P123 = P123 used as INTP1
//        <39=> 39: P124 = P124 used as INTP1
//        <40=> 40: P130 = P130 used as INTP1
//        <41=> 41: P136 = P136 used as INTP1
//        <42=> 42: P137 = P137 used as INTP1
//        <43=> 43: P140 = P140 used as INTP1
//        <44=> 44: P146 = P146 used as INTP1
//        <45=> 45: P147 = P147 used as INTP1
//        <46=> 46: 
//        <47=> 47: 
//        <48=> 48: 
//        <49=> 49: 
//        <50=> 50: 
//        <51=> 51: 
//        <52=> 52: 
//        <53=> 53: 
//        <54=> 54: 
//        <55=> 55: 
//        <56=> 56: 
//        <57=> 57: 
//        <58=> 58: 
//        <59=> 59: 
//        <60=> 60: 
//        <61=> 61: 
//        <62=> 62: 
//        <63=> 63: 
//    </combo>
//  </item>
//  


// -----------------------------  Register RTree: PORT_INTP1PCFG  ---------------------------------
// SVD Line: 3433

//  <rtree> SFDITEM_REG__PORT_INTP1PCFG
//    <name> INTP1PCFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40040865) INTP1 alternate function pin configuration register </i>
//    <loc> ( (unsigned char)((PORT_INTP1PCFG >> 0) & 0xFF), ((PORT_INTP1PCFG = (PORT_INTP1PCFG & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_INTP1PCFG_CFG </item>
//  </rtree>
//  


// --------------------------  Register Item Address: PORT_INTP2PCFG  -----------------------------
// SVD Line: 3675

unsigned char PORT_INTP2PCFG __AT (0x40040866);



// -----------------------------  Field Item: PORT_INTP2PCFG_CFG  ---------------------------------
// SVD Line: 3683

//  <item> SFDITEM_FIELD__PORT_INTP2PCFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 5..0] RW (@ 0x40040866) \nCFG\n0 : Reserved - do not use\n1 : P00 = P00 used as INTP2\n2 : P01 = P01 used as INTP2\n3 : P10 = P10 used as INTP2\n4 : P11 = P11 used as INTP2\n5 : P12 = P12 used as INTP2\n6 : P13 = P13 used as INTP2\n7 : P14 = P14 used as INTP2\n8 : P15 = P15 used as INTP2\n9 : P16 = P16 used as INTP2\n10 : P17 = P17 used as INTP2\n11 : P20 = P20 used as INTP2\n12 : P21 = P21 used as INTP2\n13 : P22 = P22 used as INTP2\n14 : P23 = P23 used as INTP2\n15 : P24 = P24 used as INTP2\n16 : P25 = P25 used as INTP2\n17 : P26 = P26 used as INTP2\n18 : P27 = P27 used as INTP2\n19 : P30 = P30 used as INTP2\n20 : P31 = P31 used as INTP2\n21 : P40 = P40 used as INTP2\n22 : P41 = P41 used as INTP2\n23 : P50 = P50 used as INTP2\n24 : P51 = P51 used as INTP2\n25 : P60 = P60 used as INTP2\n26 : P61 = P61 used as INTP2\n27 : P62 = P62 used as INTP2\n28 : P63 = P63 used as INTP2\n29 : P70 = P70 used as INTP2\n30 : P71 = P71 used as INTP2\n31 : P72 = P72 used as INTP2\n32 : P73 = P73 used as INTP2\n33 : P74 = P74 used as INTP2\n34 : P75 = P75 used as INTP2\n35 : P120 = P120 used as INTP2\n36 : P121 = P121 used as INTP2\n37 : P122 = P122 used as INTP2\n38 : P123 = P123 used as INTP2\n39 : P124 = P124 used as INTP2\n40 : P130 = P130 used as INTP2\n41 : P136 = P136 used as INTP2\n42 : P137 = P137 used as INTP2\n43 : P140 = P140 used as INTP2\n44 : P146 = P146 used as INTP2\n45 : P147 = P147 used as INTP2\n46 : Reserved - do not use\n47 : Reserved - do not use\n48 : Reserved - do not use\n49 : Reserved - do not use\n50 : Reserved - do not use\n51 : Reserved - do not use\n52 : Reserved - do not use\n53 : Reserved - do not use\n54 : Reserved - do not use\n55 : Reserved - do not use\n56 : Reserved - do not use\n57 : Reserved - do not use\n58 : Reserved - do not use\n59 : Reserved - do not use\n60 : Reserved - do not use\n61 : Reserved - do not use\n62 : Reserved - do not use\n63 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_INTP2PCFG ) </loc>
//      <o.5..0> CFG
//        <0=> 0: 
//        <1=> 1: P00 = P00 used as INTP2
//        <2=> 2: P01 = P01 used as INTP2
//        <3=> 3: P10 = P10 used as INTP2
//        <4=> 4: P11 = P11 used as INTP2
//        <5=> 5: P12 = P12 used as INTP2
//        <6=> 6: P13 = P13 used as INTP2
//        <7=> 7: P14 = P14 used as INTP2
//        <8=> 8: P15 = P15 used as INTP2
//        <9=> 9: P16 = P16 used as INTP2
//        <10=> 10: P17 = P17 used as INTP2
//        <11=> 11: P20 = P20 used as INTP2
//        <12=> 12: P21 = P21 used as INTP2
//        <13=> 13: P22 = P22 used as INTP2
//        <14=> 14: P23 = P23 used as INTP2
//        <15=> 15: P24 = P24 used as INTP2
//        <16=> 16: P25 = P25 used as INTP2
//        <17=> 17: P26 = P26 used as INTP2
//        <18=> 18: P27 = P27 used as INTP2
//        <19=> 19: P30 = P30 used as INTP2
//        <20=> 20: P31 = P31 used as INTP2
//        <21=> 21: P40 = P40 used as INTP2
//        <22=> 22: P41 = P41 used as INTP2
//        <23=> 23: P50 = P50 used as INTP2
//        <24=> 24: P51 = P51 used as INTP2
//        <25=> 25: P60 = P60 used as INTP2
//        <26=> 26: P61 = P61 used as INTP2
//        <27=> 27: P62 = P62 used as INTP2
//        <28=> 28: P63 = P63 used as INTP2
//        <29=> 29: P70 = P70 used as INTP2
//        <30=> 30: P71 = P71 used as INTP2
//        <31=> 31: P72 = P72 used as INTP2
//        <32=> 32: P73 = P73 used as INTP2
//        <33=> 33: P74 = P74 used as INTP2
//        <34=> 34: P75 = P75 used as INTP2
//        <35=> 35: P120 = P120 used as INTP2
//        <36=> 36: P121 = P121 used as INTP2
//        <37=> 37: P122 = P122 used as INTP2
//        <38=> 38: P123 = P123 used as INTP2
//        <39=> 39: P124 = P124 used as INTP2
//        <40=> 40: P130 = P130 used as INTP2
//        <41=> 41: P136 = P136 used as INTP2
//        <42=> 42: P137 = P137 used as INTP2
//        <43=> 43: P140 = P140 used as INTP2
//        <44=> 44: P146 = P146 used as INTP2
//        <45=> 45: P147 = P147 used as INTP2
//        <46=> 46: 
//        <47=> 47: 
//        <48=> 48: 
//        <49=> 49: 
//        <50=> 50: 
//        <51=> 51: 
//        <52=> 52: 
//        <53=> 53: 
//        <54=> 54: 
//        <55=> 55: 
//        <56=> 56: 
//        <57=> 57: 
//        <58=> 58: 
//        <59=> 59: 
//        <60=> 60: 
//        <61=> 61: 
//        <62=> 62: 
//        <63=> 63: 
//    </combo>
//  </item>
//  


// -----------------------------  Register RTree: PORT_INTP2PCFG  ---------------------------------
// SVD Line: 3675

//  <rtree> SFDITEM_REG__PORT_INTP2PCFG
//    <name> INTP2PCFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40040866) INTP2 alternate function pin configuration register </i>
//    <loc> ( (unsigned char)((PORT_INTP2PCFG >> 0) & 0xFF), ((PORT_INTP2PCFG = (PORT_INTP2PCFG & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_INTP2PCFG_CFG </item>
//  </rtree>
//  


// --------------------------  Register Item Address: PORT_INTP3PCFG  -----------------------------
// SVD Line: 3917

unsigned char PORT_INTP3PCFG __AT (0x40040867);



// -----------------------------  Field Item: PORT_INTP3PCFG_CFG  ---------------------------------
// SVD Line: 3925

//  <item> SFDITEM_FIELD__PORT_INTP3PCFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 5..0] RW (@ 0x40040867) \nCFG\n0 : Reserved - do not use\n1 : P00 = P00 used as INTP3\n2 : P01 = P01 used as INTP3\n3 : P10 = P10 used as INTP3\n4 : P11 = P11 used as INTP3\n5 : P12 = P12 used as INTP3\n6 : P13 = P13 used as INTP3\n7 : P14 = P14 used as INTP3\n8 : P15 = P15 used as INTP3\n9 : P16 = P16 used as INTP3\n10 : P17 = P17 used as INTP3\n11 : P20 = P20 used as INTP3\n12 : P21 = P21 used as INTP3\n13 : P22 = P22 used as INTP3\n14 : P23 = P23 used as INTP3\n15 : P24 = P24 used as INTP3\n16 : P25 = P25 used as INTP3\n17 : P26 = P26 used as INTP3\n18 : P27 = P27 used as INTP3\n19 : P30 = P30 used as INTP3\n20 : P31 = P31 used as INTP3\n21 : P40 = P40 used as INTP3\n22 : P41 = P41 used as INTP3\n23 : P50 = P50 used as INTP3\n24 : P51 = P51 used as INTP3\n25 : P60 = P60 used as INTP3\n26 : P61 = P61 used as INTP3\n27 : P62 = P62 used as INTP3\n28 : P63 = P63 used as INTP3\n29 : P70 = P70 used as INTP3\n30 : P71 = P71 used as INTP3\n31 : P72 = P72 used as INTP3\n32 : P73 = P73 used as INTP3\n33 : P74 = P74 used as INTP3\n34 : P75 = P75 used as INTP3\n35 : P120 = P120 used as INTP3\n36 : P121 = P121 used as INTP3\n37 : P122 = P122 used as INTP3\n38 : P123 = P123 used as INTP3\n39 : P124 = P124 used as INTP3\n40 : P130 = P130 used as INTP3\n41 : P136 = P136 used as INTP3\n42 : P137 = P137 used as INTP3\n43 : P140 = P140 used as INTP3\n44 : P146 = P146 used as INTP3\n45 : P147 = P147 used as INTP3\n46 : Reserved - do not use\n47 : Reserved - do not use\n48 : Reserved - do not use\n49 : Reserved - do not use\n50 : Reserved - do not use\n51 : Reserved - do not use\n52 : Reserved - do not use\n53 : Reserved - do not use\n54 : Reserved - do not use\n55 : Reserved - do not use\n56 : Reserved - do not use\n57 : Reserved - do not use\n58 : Reserved - do not use\n59 : Reserved - do not use\n60 : Reserved - do not use\n61 : Reserved - do not use\n62 : Reserved - do not use\n63 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_INTP3PCFG ) </loc>
//      <o.5..0> CFG
//        <0=> 0: 
//        <1=> 1: P00 = P00 used as INTP3
//        <2=> 2: P01 = P01 used as INTP3
//        <3=> 3: P10 = P10 used as INTP3
//        <4=> 4: P11 = P11 used as INTP3
//        <5=> 5: P12 = P12 used as INTP3
//        <6=> 6: P13 = P13 used as INTP3
//        <7=> 7: P14 = P14 used as INTP3
//        <8=> 8: P15 = P15 used as INTP3
//        <9=> 9: P16 = P16 used as INTP3
//        <10=> 10: P17 = P17 used as INTP3
//        <11=> 11: P20 = P20 used as INTP3
//        <12=> 12: P21 = P21 used as INTP3
//        <13=> 13: P22 = P22 used as INTP3
//        <14=> 14: P23 = P23 used as INTP3
//        <15=> 15: P24 = P24 used as INTP3
//        <16=> 16: P25 = P25 used as INTP3
//        <17=> 17: P26 = P26 used as INTP3
//        <18=> 18: P27 = P27 used as INTP3
//        <19=> 19: P30 = P30 used as INTP3
//        <20=> 20: P31 = P31 used as INTP3
//        <21=> 21: P40 = P40 used as INTP3
//        <22=> 22: P41 = P41 used as INTP3
//        <23=> 23: P50 = P50 used as INTP3
//        <24=> 24: P51 = P51 used as INTP3
//        <25=> 25: P60 = P60 used as INTP3
//        <26=> 26: P61 = P61 used as INTP3
//        <27=> 27: P62 = P62 used as INTP3
//        <28=> 28: P63 = P63 used as INTP3
//        <29=> 29: P70 = P70 used as INTP3
//        <30=> 30: P71 = P71 used as INTP3
//        <31=> 31: P72 = P72 used as INTP3
//        <32=> 32: P73 = P73 used as INTP3
//        <33=> 33: P74 = P74 used as INTP3
//        <34=> 34: P75 = P75 used as INTP3
//        <35=> 35: P120 = P120 used as INTP3
//        <36=> 36: P121 = P121 used as INTP3
//        <37=> 37: P122 = P122 used as INTP3
//        <38=> 38: P123 = P123 used as INTP3
//        <39=> 39: P124 = P124 used as INTP3
//        <40=> 40: P130 = P130 used as INTP3
//        <41=> 41: P136 = P136 used as INTP3
//        <42=> 42: P137 = P137 used as INTP3
//        <43=> 43: P140 = P140 used as INTP3
//        <44=> 44: P146 = P146 used as INTP3
//        <45=> 45: P147 = P147 used as INTP3
//        <46=> 46: 
//        <47=> 47: 
//        <48=> 48: 
//        <49=> 49: 
//        <50=> 50: 
//        <51=> 51: 
//        <52=> 52: 
//        <53=> 53: 
//        <54=> 54: 
//        <55=> 55: 
//        <56=> 56: 
//        <57=> 57: 
//        <58=> 58: 
//        <59=> 59: 
//        <60=> 60: 
//        <61=> 61: 
//        <62=> 62: 
//        <63=> 63: 
//    </combo>
//  </item>
//  


// -----------------------------  Register RTree: PORT_INTP3PCFG  ---------------------------------
// SVD Line: 3917

//  <rtree> SFDITEM_REG__PORT_INTP3PCFG
//    <name> INTP3PCFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40040867) INTP3 alternate function pin configuration register </i>
//    <loc> ( (unsigned char)((PORT_INTP3PCFG >> 0) & 0xFF), ((PORT_INTP3PCFG = (PORT_INTP3PCFG & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_INTP3PCFG_CFG </item>
//  </rtree>
//  


// --------------------------  Register Item Address: PORT_SDI00PCFG  -----------------------------
// SVD Line: 4159

unsigned char PORT_SDI00PCFG __AT (0x40040868);



// -----------------------------  Field Item: PORT_SDI00PCFG_CFG  ---------------------------------
// SVD Line: 4167

//  <item> SFDITEM_FIELD__PORT_SDI00PCFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 5..0] RW (@ 0x40040868) \nCFG\n0 : Reserved - do not use\n1 : P00 = P00 used as SDI00/RXD0/SDA00\n2 : P01 = P01 used as SDI00/RXD0/SDA00\n3 : P10 = P10 used as SDI00/RXD0/SDA00\n4 : P11 = P11 used as SDI00/RXD0/SDA00\n5 : P12 = P12 used as SDI00/RXD0/SDA00\n6 : P13 = P13 used as SDI00/RXD0/SDA00\n7 : P14 = P14 used as SDI00/RXD0/SDA00\n8 : P15 = P15 used as SDI00/RXD0/SDA00\n9 : P16 = P16 used as SDI00/RXD0/SDA00\n10 : P17 = P17 used as SDI00/RXD0/SDA00\n11 : P20 = P20 used as SDI00/RXD0/SDA00\n12 : P21 = P21 used as SDI00/RXD0/SDA00\n13 : P22 = P22 used as SDI00/RXD0/SDA00\n14 : P23 = P23 used as SDI00/RXD0/SDA00\n15 : P24 = P24 used as SDI00/RXD0/SDA00\n16 : P25 = P25 used as SDI00/RXD0/SDA00\n17 : P26 = P26 used as SDI00/RXD0/SDA00\n18 : P27 = P27 used as SDI00/RXD0/SDA00\n19 : P30 = P30 used as SDI00/RXD0/SDA00\n20 : P31 = P31 used as SDI00/RXD0/SDA00\n21 : P40 = P40 used as SDI00/RXD0/SDA00\n22 : P41 = P41 used as SDI00/RXD0/SDA00\n23 : P50 = P50 used as SDI00/RXD0/SDA00\n24 : P51 = P51 used as SDI00/RXD0/SDA00\n25 : P60 = P60 used as SDI00/RXD0/SDA00\n26 : P61 = P61 used as SDI00/RXD0/SDA00\n27 : P62 = P62 used as SDI00/RXD0/SDA00\n28 : P63 = P63 used as SDI00/RXD0/SDA00\n29 : P70 = P70 used as SDI00/RXD0/SDA00\n30 : P71 = P71 used as SDI00/RXD0/SDA00\n31 : P72 = P72 used as SDI00/RXD0/SDA00\n32 : P73 = P73 used as SDI00/RXD0/SDA00\n33 : P74 = P74 used as SDI00/RXD0/SDA00\n34 : P75 = P75 used as SDI00/RXD0/SDA00\n35 : P120 = P120 used as SDI00/RXD0/SDA00\n36 : P121 = P121 used as SDI00/RXD0/SDA00\n37 : P122 = P122 used as SDI00/RXD0/SDA00\n38 : P123 = P123 used as SDI00/RXD0/SDA00\n39 : P124 = P124 used as SDI00/RXD0/SDA00\n40 : P130 = P130 used as SDI00/RXD0/SDA00\n41 : P136 = P136 used as SDI00/RXD0/SDA00\n42 : P137 = P137 used as SDI00/RXD0/SDA00\n43 : P140 = P140 used as SDI00/RXD0/SDA00\n44 : P146 = P146 used as SDI00/RXD0/SDA00\n45 : P147 = P147 used as SDI00/RXD0/SDA00\n46 : Reserved - do not use\n47 : Reserved - do not use\n48 : Reserved - do not use\n49 : Reserved - do not use\n50 : Reserved - do not use\n51 : Reserved - do not use\n52 : Reserved - do not use\n53 : Reserved - do not use\n54 : Reserved - do not use\n55 : Reserved - do not use\n56 : Reserved - do not use\n57 : Reserved - do not use\n58 : Reserved - do not use\n59 : Reserved - do not use\n60 : Reserved - do not use\n61 : Reserved - do not use\n62 : Reserved - do not use\n63 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_SDI00PCFG ) </loc>
//      <o.5..0> CFG
//        <0=> 0: 
//        <1=> 1: P00 = P00 used as SDI00/RXD0/SDA00
//        <2=> 2: P01 = P01 used as SDI00/RXD0/SDA00
//        <3=> 3: P10 = P10 used as SDI00/RXD0/SDA00
//        <4=> 4: P11 = P11 used as SDI00/RXD0/SDA00
//        <5=> 5: P12 = P12 used as SDI00/RXD0/SDA00
//        <6=> 6: P13 = P13 used as SDI00/RXD0/SDA00
//        <7=> 7: P14 = P14 used as SDI00/RXD0/SDA00
//        <8=> 8: P15 = P15 used as SDI00/RXD0/SDA00
//        <9=> 9: P16 = P16 used as SDI00/RXD0/SDA00
//        <10=> 10: P17 = P17 used as SDI00/RXD0/SDA00
//        <11=> 11: P20 = P20 used as SDI00/RXD0/SDA00
//        <12=> 12: P21 = P21 used as SDI00/RXD0/SDA00
//        <13=> 13: P22 = P22 used as SDI00/RXD0/SDA00
//        <14=> 14: P23 = P23 used as SDI00/RXD0/SDA00
//        <15=> 15: P24 = P24 used as SDI00/RXD0/SDA00
//        <16=> 16: P25 = P25 used as SDI00/RXD0/SDA00
//        <17=> 17: P26 = P26 used as SDI00/RXD0/SDA00
//        <18=> 18: P27 = P27 used as SDI00/RXD0/SDA00
//        <19=> 19: P30 = P30 used as SDI00/RXD0/SDA00
//        <20=> 20: P31 = P31 used as SDI00/RXD0/SDA00
//        <21=> 21: P40 = P40 used as SDI00/RXD0/SDA00
//        <22=> 22: P41 = P41 used as SDI00/RXD0/SDA00
//        <23=> 23: P50 = P50 used as SDI00/RXD0/SDA00
//        <24=> 24: P51 = P51 used as SDI00/RXD0/SDA00
//        <25=> 25: P60 = P60 used as SDI00/RXD0/SDA00
//        <26=> 26: P61 = P61 used as SDI00/RXD0/SDA00
//        <27=> 27: P62 = P62 used as SDI00/RXD0/SDA00
//        <28=> 28: P63 = P63 used as SDI00/RXD0/SDA00
//        <29=> 29: P70 = P70 used as SDI00/RXD0/SDA00
//        <30=> 30: P71 = P71 used as SDI00/RXD0/SDA00
//        <31=> 31: P72 = P72 used as SDI00/RXD0/SDA00
//        <32=> 32: P73 = P73 used as SDI00/RXD0/SDA00
//        <33=> 33: P74 = P74 used as SDI00/RXD0/SDA00
//        <34=> 34: P75 = P75 used as SDI00/RXD0/SDA00
//        <35=> 35: P120 = P120 used as SDI00/RXD0/SDA00
//        <36=> 36: P121 = P121 used as SDI00/RXD0/SDA00
//        <37=> 37: P122 = P122 used as SDI00/RXD0/SDA00
//        <38=> 38: P123 = P123 used as SDI00/RXD0/SDA00
//        <39=> 39: P124 = P124 used as SDI00/RXD0/SDA00
//        <40=> 40: P130 = P130 used as SDI00/RXD0/SDA00
//        <41=> 41: P136 = P136 used as SDI00/RXD0/SDA00
//        <42=> 42: P137 = P137 used as SDI00/RXD0/SDA00
//        <43=> 43: P140 = P140 used as SDI00/RXD0/SDA00
//        <44=> 44: P146 = P146 used as SDI00/RXD0/SDA00
//        <45=> 45: P147 = P147 used as SDI00/RXD0/SDA00
//        <46=> 46: 
//        <47=> 47: 
//        <48=> 48: 
//        <49=> 49: 
//        <50=> 50: 
//        <51=> 51: 
//        <52=> 52: 
//        <53=> 53: 
//        <54=> 54: 
//        <55=> 55: 
//        <56=> 56: 
//        <57=> 57: 
//        <58=> 58: 
//        <59=> 59: 
//        <60=> 60: 
//        <61=> 61: 
//        <62=> 62: 
//        <63=> 63: 
//    </combo>
//  </item>
//  


// -----------------------------  Register RTree: PORT_SDI00PCFG  ---------------------------------
// SVD Line: 4159

//  <rtree> SFDITEM_REG__PORT_SDI00PCFG
//    <name> SDI00PCFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40040868) SDI00/RXD0/SDA00 alternate function pin configuration register </i>
//    <loc> ( (unsigned char)((PORT_SDI00PCFG >> 0) & 0xFF), ((PORT_SDI00PCFG = (PORT_SDI00PCFG & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_SDI00PCFG_CFG </item>
//  </rtree>
//  


// --------------------------  Register Item Address: PORT_SDA00PCFG  -----------------------------
// SVD Line: 4401

unsigned char PORT_SDA00PCFG __AT (0x40040868);



// ------------------------------  Register Item: PORT_SDA00PCFG  ---------------------------------
// SVD Line: 4401

//  <item> SFDITEM_REG__PORT_SDA00PCFG
//    <name> SDA00PCFG </name>
//    <i> [Bits 7..0] RW (@ 0x40040868) SDI00/RXD0/SDA00 alternate function pin configuration register </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_SDA00PCFG >> 0) & 0xFFFFFFFF), ((PORT_SDA00PCFG = (PORT_SDA00PCFG & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register Item Address: PORT_RXD0PCFG  ------------------------------
// SVD Line: 4408

unsigned char PORT_RXD0PCFG __AT (0x40040868);



// ------------------------------  Register Item: PORT_RXD0PCFG  ----------------------------------
// SVD Line: 4408

//  <item> SFDITEM_REG__PORT_RXD0PCFG
//    <name> RXD0PCFG </name>
//    <i> [Bits 7..0] RW (@ 0x40040868) SDI00/RXD0/SDA00 alternate function pin configuration register </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_RXD0PCFG >> 0) & 0xFFFFFFFF), ((PORT_RXD0PCFG = (PORT_RXD0PCFG & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: PORT_SCLKI00PCFG  ----------------------------
// SVD Line: 4415

unsigned char PORT_SCLKI00PCFG __AT (0x40040869);



// ----------------------------  Field Item: PORT_SCLKI00PCFG_CFG  --------------------------------
// SVD Line: 4423

//  <item> SFDITEM_FIELD__PORT_SCLKI00PCFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 5..0] RW (@ 0x40040869) \nCFG\n0 : Reserved - do not use\n1 : P00 = P00 used as SCLKI00\n2 : P01 = P01 used as SCLKI00\n3 : P10 = P10 used as SCLKI00\n4 : P11 = P11 used as SCLKI00\n5 : P12 = P12 used as SCLKI00\n6 : P13 = P13 used as SCLKI00\n7 : P14 = P14 used as SCLKI00\n8 : P15 = P15 used as SCLKI00\n9 : P16 = P16 used as SCLKI00\n10 : P17 = P17 used as SCLKI00\n11 : P20 = P20 used as SCLKI00\n12 : P21 = P21 used as SCLKI00\n13 : P22 = P22 used as SCLKI00\n14 : P23 = P23 used as SCLKI00\n15 : P24 = P24 used as SCLKI00\n16 : P25 = P25 used as SCLKI00\n17 : P26 = P26 used as SCLKI00\n18 : P27 = P27 used as SCLKI00\n19 : P30 = P30 used as SCLKI00\n20 : P31 = P31 used as SCLKI00\n21 : P40 = P40 used as SCLKI00\n22 : P41 = P41 used as SCLKI00\n23 : P50 = P50 used as SCLKI00\n24 : P51 = P51 used as SCLKI00\n25 : P60 = P60 used as SCLKI00\n26 : P61 = P61 used as SCLKI00\n27 : P62 = P62 used as SCLKI00\n28 : P63 = P63 used as SCLKI00\n29 : P70 = P70 used as SCLKI00\n30 : P71 = P71 used as SCLKI00\n31 : P72 = P72 used as SCLKI00\n32 : P73 = P73 used as SCLKI00\n33 : P74 = P74 used as SCLKI00\n34 : P75 = P75 used as SCLKI00\n35 : P120 = P120 used as SCLKI00\n36 : P121 = P121 used as SCLKI00\n37 : P122 = P122 used as SCLKI00\n38 : P123 = P123 used as SCLKI00\n39 : P124 = P124 used as SCLKI00\n40 : P130 = P130 used as SCLKI00\n41 : P136 = P136 used as SCLKI00\n42 : P137 = P137 used as SCLKI00\n43 : P140 = P140 used as SCLKI00\n44 : P146 = P146 used as SCLKI00\n45 : P147 = P147 used as SCLKI00\n46 : Reserved - do not use\n47 : Reserved - do not use\n48 : Reserved - do not use\n49 : Reserved - do not use\n50 : Reserved - do not use\n51 : Reserved - do not use\n52 : Reserved - do not use\n53 : Reserved - do not use\n54 : Reserved - do not use\n55 : Reserved - do not use\n56 : Reserved - do not use\n57 : Reserved - do not use\n58 : Reserved - do not use\n59 : Reserved - do not use\n60 : Reserved - do not use\n61 : Reserved - do not use\n62 : Reserved - do not use\n63 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_SCLKI00PCFG ) </loc>
//      <o.5..0> CFG
//        <0=> 0: 
//        <1=> 1: P00 = P00 used as SCLKI00
//        <2=> 2: P01 = P01 used as SCLKI00
//        <3=> 3: P10 = P10 used as SCLKI00
//        <4=> 4: P11 = P11 used as SCLKI00
//        <5=> 5: P12 = P12 used as SCLKI00
//        <6=> 6: P13 = P13 used as SCLKI00
//        <7=> 7: P14 = P14 used as SCLKI00
//        <8=> 8: P15 = P15 used as SCLKI00
//        <9=> 9: P16 = P16 used as SCLKI00
//        <10=> 10: P17 = P17 used as SCLKI00
//        <11=> 11: P20 = P20 used as SCLKI00
//        <12=> 12: P21 = P21 used as SCLKI00
//        <13=> 13: P22 = P22 used as SCLKI00
//        <14=> 14: P23 = P23 used as SCLKI00
//        <15=> 15: P24 = P24 used as SCLKI00
//        <16=> 16: P25 = P25 used as SCLKI00
//        <17=> 17: P26 = P26 used as SCLKI00
//        <18=> 18: P27 = P27 used as SCLKI00
//        <19=> 19: P30 = P30 used as SCLKI00
//        <20=> 20: P31 = P31 used as SCLKI00
//        <21=> 21: P40 = P40 used as SCLKI00
//        <22=> 22: P41 = P41 used as SCLKI00
//        <23=> 23: P50 = P50 used as SCLKI00
//        <24=> 24: P51 = P51 used as SCLKI00
//        <25=> 25: P60 = P60 used as SCLKI00
//        <26=> 26: P61 = P61 used as SCLKI00
//        <27=> 27: P62 = P62 used as SCLKI00
//        <28=> 28: P63 = P63 used as SCLKI00
//        <29=> 29: P70 = P70 used as SCLKI00
//        <30=> 30: P71 = P71 used as SCLKI00
//        <31=> 31: P72 = P72 used as SCLKI00
//        <32=> 32: P73 = P73 used as SCLKI00
//        <33=> 33: P74 = P74 used as SCLKI00
//        <34=> 34: P75 = P75 used as SCLKI00
//        <35=> 35: P120 = P120 used as SCLKI00
//        <36=> 36: P121 = P121 used as SCLKI00
//        <37=> 37: P122 = P122 used as SCLKI00
//        <38=> 38: P123 = P123 used as SCLKI00
//        <39=> 39: P124 = P124 used as SCLKI00
//        <40=> 40: P130 = P130 used as SCLKI00
//        <41=> 41: P136 = P136 used as SCLKI00
//        <42=> 42: P137 = P137 used as SCLKI00
//        <43=> 43: P140 = P140 used as SCLKI00
//        <44=> 44: P146 = P146 used as SCLKI00
//        <45=> 45: P147 = P147 used as SCLKI00
//        <46=> 46: 
//        <47=> 47: 
//        <48=> 48: 
//        <49=> 49: 
//        <50=> 50: 
//        <51=> 51: 
//        <52=> 52: 
//        <53=> 53: 
//        <54=> 54: 
//        <55=> 55: 
//        <56=> 56: 
//        <57=> 57: 
//        <58=> 58: 
//        <59=> 59: 
//        <60=> 60: 
//        <61=> 61: 
//        <62=> 62: 
//        <63=> 63: 
//    </combo>
//  </item>
//  


// ----------------------------  Register RTree: PORT_SCLKI00PCFG  --------------------------------
// SVD Line: 4415

//  <rtree> SFDITEM_REG__PORT_SCLKI00PCFG
//    <name> SCLKI00PCFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40040869) SCLKI00 alternate function pin configuration register </i>
//    <loc> ( (unsigned char)((PORT_SCLKI00PCFG >> 0) & 0xFF), ((PORT_SCLKI00PCFG = (PORT_SCLKI00PCFG & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_SCLKI00PCFG_CFG </item>
//  </rtree>
//  


// --------------------------  Register Item Address: PORT_SS00PCFG  ------------------------------
// SVD Line: 4657

unsigned char PORT_SS00PCFG __AT (0x4004086A);



// ------------------------------  Field Item: PORT_SS00PCFG_CFG  ---------------------------------
// SVD Line: 4665

//  <item> SFDITEM_FIELD__PORT_SS00PCFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 5..0] RW (@ 0x4004086A) \nCFG\n0 : Reserved - do not use\n1 : P00 = P00 used as SS00\n2 : P01 = P01 used as SS00\n3 : P10 = P10 used as SS00\n4 : P11 = P11 used as SS00\n5 : P12 = P12 used as SS00\n6 : P13 = P13 used as SS00\n7 : P14 = P14 used as SS00\n8 : P15 = P15 used as SS00\n9 : P16 = P16 used as SS00\n10 : P17 = P17 used as SS00\n11 : P20 = P20 used as SS00\n12 : P21 = P21 used as SS00\n13 : P22 = P22 used as SS00\n14 : P23 = P23 used as SS00\n15 : P24 = P24 used as SS00\n16 : P25 = P25 used as SS00\n17 : P26 = P26 used as SS00\n18 : P27 = P27 used as SS00\n19 : P30 = P30 used as SS00\n20 : P31 = P31 used as SS00\n21 : P40 = P40 used as SS00\n22 : P41 = P41 used as SS00\n23 : P50 = P50 used as SS00\n24 : P51 = P51 used as SS00\n25 : P60 = P60 used as SS00\n26 : P61 = P61 used as SS00\n27 : P62 = P62 used as SS00\n28 : P63 = P63 used as SS00\n29 : P70 = P70 used as SS00\n30 : P71 = P71 used as SS00\n31 : P72 = P72 used as SS00\n32 : P73 = P73 used as SS00\n33 : P74 = P74 used as SS00\n34 : P75 = P75 used as SS00\n35 : P120 = P120 used as SS00\n36 : P121 = P121 used as SS00\n37 : P122 = P122 used as SS00\n38 : P123 = P123 used as SS00\n39 : P124 = P124 used as SS00\n40 : P130 = P130 used as SS00\n41 : P136 = P136 used as SS00\n42 : P137 = P137 used as SS00\n43 : P140 = P140 used as SS00\n44 : P146 = P146 used as SS00\n45 : P147 = P147 used as SS00\n46 : Reserved - do not use\n47 : Reserved - do not use\n48 : Reserved - do not use\n49 : Reserved - do not use\n50 : Reserved - do not use\n51 : Reserved - do not use\n52 : Reserved - do not use\n53 : Reserved - do not use\n54 : Reserved - do not use\n55 : Reserved - do not use\n56 : Reserved - do not use\n57 : Reserved - do not use\n58 : Reserved - do not use\n59 : Reserved - do not use\n60 : Reserved - do not use\n61 : Reserved - do not use\n62 : Reserved - do not use\n63 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_SS00PCFG ) </loc>
//      <o.5..0> CFG
//        <0=> 0: 
//        <1=> 1: P00 = P00 used as SS00
//        <2=> 2: P01 = P01 used as SS00
//        <3=> 3: P10 = P10 used as SS00
//        <4=> 4: P11 = P11 used as SS00
//        <5=> 5: P12 = P12 used as SS00
//        <6=> 6: P13 = P13 used as SS00
//        <7=> 7: P14 = P14 used as SS00
//        <8=> 8: P15 = P15 used as SS00
//        <9=> 9: P16 = P16 used as SS00
//        <10=> 10: P17 = P17 used as SS00
//        <11=> 11: P20 = P20 used as SS00
//        <12=> 12: P21 = P21 used as SS00
//        <13=> 13: P22 = P22 used as SS00
//        <14=> 14: P23 = P23 used as SS00
//        <15=> 15: P24 = P24 used as SS00
//        <16=> 16: P25 = P25 used as SS00
//        <17=> 17: P26 = P26 used as SS00
//        <18=> 18: P27 = P27 used as SS00
//        <19=> 19: P30 = P30 used as SS00
//        <20=> 20: P31 = P31 used as SS00
//        <21=> 21: P40 = P40 used as SS00
//        <22=> 22: P41 = P41 used as SS00
//        <23=> 23: P50 = P50 used as SS00
//        <24=> 24: P51 = P51 used as SS00
//        <25=> 25: P60 = P60 used as SS00
//        <26=> 26: P61 = P61 used as SS00
//        <27=> 27: P62 = P62 used as SS00
//        <28=> 28: P63 = P63 used as SS00
//        <29=> 29: P70 = P70 used as SS00
//        <30=> 30: P71 = P71 used as SS00
//        <31=> 31: P72 = P72 used as SS00
//        <32=> 32: P73 = P73 used as SS00
//        <33=> 33: P74 = P74 used as SS00
//        <34=> 34: P75 = P75 used as SS00
//        <35=> 35: P120 = P120 used as SS00
//        <36=> 36: P121 = P121 used as SS00
//        <37=> 37: P122 = P122 used as SS00
//        <38=> 38: P123 = P123 used as SS00
//        <39=> 39: P124 = P124 used as SS00
//        <40=> 40: P130 = P130 used as SS00
//        <41=> 41: P136 = P136 used as SS00
//        <42=> 42: P137 = P137 used as SS00
//        <43=> 43: P140 = P140 used as SS00
//        <44=> 44: P146 = P146 used as SS00
//        <45=> 45: P147 = P147 used as SS00
//        <46=> 46: 
//        <47=> 47: 
//        <48=> 48: 
//        <49=> 49: 
//        <50=> 50: 
//        <51=> 51: 
//        <52=> 52: 
//        <53=> 53: 
//        <54=> 54: 
//        <55=> 55: 
//        <56=> 56: 
//        <57=> 57: 
//        <58=> 58: 
//        <59=> 59: 
//        <60=> 60: 
//        <61=> 61: 
//        <62=> 62: 
//        <63=> 63: 
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: PORT_SS00PCFG  ---------------------------------
// SVD Line: 4657

//  <rtree> SFDITEM_REG__PORT_SS00PCFG
//    <name> SS00PCFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4004086A) SS00 alternate function pin configuration register </i>
//    <loc> ( (unsigned char)((PORT_SS00PCFG >> 0) & 0xFF), ((PORT_SS00PCFG = (PORT_SS00PCFG & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_SS00PCFG_CFG </item>
//  </rtree>
//  


// --------------------------  Register Item Address: PORT_SDI20PCFG  -----------------------------
// SVD Line: 4899

unsigned char PORT_SDI20PCFG __AT (0x4004086B);



// -----------------------------  Field Item: PORT_SDI20PCFG_CFG  ---------------------------------
// SVD Line: 4907

//  <item> SFDITEM_FIELD__PORT_SDI20PCFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 5..0] RW (@ 0x4004086B) \nCFG\n0 : Reserved - do not use\n1 : P00 = P00 used as SDI20/RXD2/IrRXD\n2 : P01 = P01 used as SDI20/RXD2/IrRXD\n3 : P10 = P10 used as SDI20/RXD2/IrRXD\n4 : P11 = P11 used as SDI20/RXD2/IrRXD\n5 : P12 = P12 used as SDI20/RXD2/IrRXD\n6 : P13 = P13 used as SDI20/RXD2/IrRXD\n7 : P14 = P14 used as SDI20/RXD2/IrRXD\n8 : P15 = P15 used as SDI20/RXD2/IrRXD\n9 : P16 = P16 used as SDI20/RXD2/IrRXD\n10 : P17 = P17 used as SDI20/RXD2/IrRXD\n11 : P20 = P20 used as SDI20/RXD2/IrRXD\n12 : P21 = P21 used as SDI20/RXD2/IrRXD\n13 : P22 = P22 used as SDI20/RXD2/IrRXD\n14 : P23 = P23 used as SDI20/RXD2/IrRXD\n15 : P24 = P24 used as SDI20/RXD2/IrRXD\n16 : P25 = P25 used as SDI20/RXD2/IrRXD\n17 : P26 = P26 used as SDI20/RXD2/IrRXD\n18 : P27 = P27 used as SDI20/RXD2/IrRXD\n19 : P30 = P30 used as SDI20/RXD2/IrRXD\n20 : P31 = P31 used as SDI20/RXD2/IrRXD\n21 : P40 = P40 used as SDI20/RXD2/IrRXD\n22 : P41 = P41 used as SDI20/RXD2/IrRXD\n23 : P50 = P50 used as SDI20/RXD2/IrRXD\n24 : P51 = P51 used as SDI20/RXD2/IrRXD\n25 : P60 = P60 used as SDI20/RXD2/IrRXD\n26 : P61 = P61 used as SDI20/RXD2/IrRXD\n27 : P62 = P62 used as SDI20/RXD2/IrRXD\n28 : P63 = P63 used as SDI20/RXD2/IrRXD\n29 : P70 = P70 used as SDI20/RXD2/IrRXD\n30 : P71 = P71 used as SDI20/RXD2/IrRXD\n31 : P72 = P72 used as SDI20/RXD2/IrRXD\n32 : P73 = P73 used as SDI20/RXD2/IrRXD\n33 : P74 = P74 used as SDI20/RXD2/IrRXD\n34 : P75 = P75 used as SDI20/RXD2/IrRXD\n35 : P120 = P120 used as SDI20/RXD2/IrRXD\n36 : P121 = P121 used as SDI20/RXD2/IrRXD\n37 : P122 = P122 used as SDI20/RXD2/IrRXD\n38 : P123 = P123 used as SDI20/RXD2/IrRXD\n39 : P124 = P124 used as SDI20/RXD2/IrRXD\n40 : P130 = P130 used as SDI20/RXD2/IrRXD\n41 : P136 = P136 used as SDI20/RXD2/IrRXD\n42 : P137 = P137 used as SDI20/RXD2/IrRXD\n43 : P140 = P140 used as SDI20/RXD2/IrRXD\n44 : P146 = P146 used as SDI20/RXD2/IrRXD\n45 : P147 = P147 used as SDI20/RXD2/IrRXD\n46 : Reserved - do not use\n47 : Reserved - do not use\n48 : Reserved - do not use\n49 : Reserved - do not use\n50 : Reserved - do not use\n51 : Reserved - do not use\n52 : Reserved - do not use\n53 : Reserved - do not use\n54 : Reserved - do not use\n55 : Reserved - do not use\n56 : Reserved - do not use\n57 : Reserved - do not use\n58 : Reserved - do not use\n59 : Reserved - do not use\n60 : Reserved - do not use\n61 : Reserved - do not use\n62 : Reserved - do not use\n63 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_SDI20PCFG ) </loc>
//      <o.5..0> CFG
//        <0=> 0: 
//        <1=> 1: P00 = P00 used as SDI20/RXD2/IrRXD
//        <2=> 2: P01 = P01 used as SDI20/RXD2/IrRXD
//        <3=> 3: P10 = P10 used as SDI20/RXD2/IrRXD
//        <4=> 4: P11 = P11 used as SDI20/RXD2/IrRXD
//        <5=> 5: P12 = P12 used as SDI20/RXD2/IrRXD
//        <6=> 6: P13 = P13 used as SDI20/RXD2/IrRXD
//        <7=> 7: P14 = P14 used as SDI20/RXD2/IrRXD
//        <8=> 8: P15 = P15 used as SDI20/RXD2/IrRXD
//        <9=> 9: P16 = P16 used as SDI20/RXD2/IrRXD
//        <10=> 10: P17 = P17 used as SDI20/RXD2/IrRXD
//        <11=> 11: P20 = P20 used as SDI20/RXD2/IrRXD
//        <12=> 12: P21 = P21 used as SDI20/RXD2/IrRXD
//        <13=> 13: P22 = P22 used as SDI20/RXD2/IrRXD
//        <14=> 14: P23 = P23 used as SDI20/RXD2/IrRXD
//        <15=> 15: P24 = P24 used as SDI20/RXD2/IrRXD
//        <16=> 16: P25 = P25 used as SDI20/RXD2/IrRXD
//        <17=> 17: P26 = P26 used as SDI20/RXD2/IrRXD
//        <18=> 18: P27 = P27 used as SDI20/RXD2/IrRXD
//        <19=> 19: P30 = P30 used as SDI20/RXD2/IrRXD
//        <20=> 20: P31 = P31 used as SDI20/RXD2/IrRXD
//        <21=> 21: P40 = P40 used as SDI20/RXD2/IrRXD
//        <22=> 22: P41 = P41 used as SDI20/RXD2/IrRXD
//        <23=> 23: P50 = P50 used as SDI20/RXD2/IrRXD
//        <24=> 24: P51 = P51 used as SDI20/RXD2/IrRXD
//        <25=> 25: P60 = P60 used as SDI20/RXD2/IrRXD
//        <26=> 26: P61 = P61 used as SDI20/RXD2/IrRXD
//        <27=> 27: P62 = P62 used as SDI20/RXD2/IrRXD
//        <28=> 28: P63 = P63 used as SDI20/RXD2/IrRXD
//        <29=> 29: P70 = P70 used as SDI20/RXD2/IrRXD
//        <30=> 30: P71 = P71 used as SDI20/RXD2/IrRXD
//        <31=> 31: P72 = P72 used as SDI20/RXD2/IrRXD
//        <32=> 32: P73 = P73 used as SDI20/RXD2/IrRXD
//        <33=> 33: P74 = P74 used as SDI20/RXD2/IrRXD
//        <34=> 34: P75 = P75 used as SDI20/RXD2/IrRXD
//        <35=> 35: P120 = P120 used as SDI20/RXD2/IrRXD
//        <36=> 36: P121 = P121 used as SDI20/RXD2/IrRXD
//        <37=> 37: P122 = P122 used as SDI20/RXD2/IrRXD
//        <38=> 38: P123 = P123 used as SDI20/RXD2/IrRXD
//        <39=> 39: P124 = P124 used as SDI20/RXD2/IrRXD
//        <40=> 40: P130 = P130 used as SDI20/RXD2/IrRXD
//        <41=> 41: P136 = P136 used as SDI20/RXD2/IrRXD
//        <42=> 42: P137 = P137 used as SDI20/RXD2/IrRXD
//        <43=> 43: P140 = P140 used as SDI20/RXD2/IrRXD
//        <44=> 44: P146 = P146 used as SDI20/RXD2/IrRXD
//        <45=> 45: P147 = P147 used as SDI20/RXD2/IrRXD
//        <46=> 46: 
//        <47=> 47: 
//        <48=> 48: 
//        <49=> 49: 
//        <50=> 50: 
//        <51=> 51: 
//        <52=> 52: 
//        <53=> 53: 
//        <54=> 54: 
//        <55=> 55: 
//        <56=> 56: 
//        <57=> 57: 
//        <58=> 58: 
//        <59=> 59: 
//        <60=> 60: 
//        <61=> 61: 
//        <62=> 62: 
//        <63=> 63: 
//    </combo>
//  </item>
//  


// -----------------------------  Register RTree: PORT_SDI20PCFG  ---------------------------------
// SVD Line: 4899

//  <rtree> SFDITEM_REG__PORT_SDI20PCFG
//    <name> SDI20PCFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4004086B) SDI20/RXD2/IrRXD alternate function pin configuration register </i>
//    <loc> ( (unsigned char)((PORT_SDI20PCFG >> 0) & 0xFF), ((PORT_SDI20PCFG = (PORT_SDI20PCFG & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_SDI20PCFG_CFG </item>
//  </rtree>
//  


// --------------------------  Register Item Address: PORT_IRRXDPCFG  -----------------------------
// SVD Line: 5141

unsigned char PORT_IRRXDPCFG __AT (0x4004086B);



// ------------------------------  Register Item: PORT_IRRXDPCFG  ---------------------------------
// SVD Line: 5141

//  <item> SFDITEM_REG__PORT_IRRXDPCFG
//    <name> IRRXDPCFG </name>
//    <i> [Bits 7..0] RW (@ 0x4004086B) SDI20/RXD2/IrRXD alternate function pin configuration register </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_IRRXDPCFG >> 0) & 0xFFFFFFFF), ((PORT_IRRXDPCFG = (PORT_IRRXDPCFG & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register Item Address: PORT_RXD2PCFG  ------------------------------
// SVD Line: 5148

unsigned char PORT_RXD2PCFG __AT (0x4004086B);



// ------------------------------  Register Item: PORT_RXD2PCFG  ----------------------------------
// SVD Line: 5148

//  <item> SFDITEM_REG__PORT_RXD2PCFG
//    <name> RXD2PCFG </name>
//    <i> [Bits 7..0] RW (@ 0x4004086B) SDI20/RXD2/IrRXD alternate function pin configuration register </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_RXD2PCFG >> 0) & 0xFFFFFFFF), ((PORT_RXD2PCFG = (PORT_RXD2PCFG & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: PORT_SCLKI20PCFG  ----------------------------
// SVD Line: 5155

unsigned char PORT_SCLKI20PCFG __AT (0x4004086C);



// ----------------------------  Field Item: PORT_SCLKI20PCFG_CFG  --------------------------------
// SVD Line: 5163

//  <item> SFDITEM_FIELD__PORT_SCLKI20PCFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 5..0] RW (@ 0x4004086C) \nCFG\n0 : Reserved - do not use\n1 : P00 = P00 used as SCLKI20\n2 : P01 = P01 used as SCLKI20\n3 : P10 = P10 used as SCLKI20\n4 : P11 = P11 used as SCLKI20\n5 : P12 = P12 used as SCLKI20\n6 : P13 = P13 used as SCLKI20\n7 : P14 = P14 used as SCLKI20\n8 : P15 = P15 used as SCLKI20\n9 : P16 = P16 used as SCLKI20\n10 : P17 = P17 used as SCLKI20\n11 : P20 = P20 used as SCLKI20\n12 : P21 = P21 used as SCLKI20\n13 : P22 = P22 used as SCLKI20\n14 : P23 = P23 used as SCLKI20\n15 : P24 = P24 used as SCLKI20\n16 : P25 = P25 used as SCLKI20\n17 : P26 = P26 used as SCLKI20\n18 : P27 = P27 used as SCLKI20\n19 : P30 = P30 used as SCLKI20\n20 : P31 = P31 used as SCLKI20\n21 : P40 = P40 used as SCLKI20\n22 : P41 = P41 used as SCLKI20\n23 : P50 = P50 used as SCLKI20\n24 : P51 = P51 used as SCLKI20\n25 : P60 = P60 used as SCLKI20\n26 : P61 = P61 used as SCLKI20\n27 : P62 = P62 used as SCLKI20\n28 : P63 = P63 used as SCLKI20\n29 : P70 = P70 used as SCLKI20\n30 : P71 = P71 used as SCLKI20\n31 : P72 = P72 used as SCLKI20\n32 : P73 = P73 used as SCLKI20\n33 : P74 = P74 used as SCLKI20\n34 : P75 = P75 used as SCLKI20\n35 : P120 = P120 used as SCLKI20\n36 : P121 = P121 used as SCLKI20\n37 : P122 = P122 used as SCLKI20\n38 : P123 = P123 used as SCLKI20\n39 : P124 = P124 used as SCLKI20\n40 : P130 = P130 used as SCLKI20\n41 : P136 = P136 used as SCLKI20\n42 : P137 = P137 used as SCLKI20\n43 : P140 = P140 used as SCLKI20\n44 : P146 = P146 used as SCLKI20\n45 : P147 = P147 used as SCLKI20\n46 : Reserved - do not use\n47 : Reserved - do not use\n48 : Reserved - do not use\n49 : Reserved - do not use\n50 : Reserved - do not use\n51 : Reserved - do not use\n52 : Reserved - do not use\n53 : Reserved - do not use\n54 : Reserved - do not use\n55 : Reserved - do not use\n56 : Reserved - do not use\n57 : Reserved - do not use\n58 : Reserved - do not use\n59 : Reserved - do not use\n60 : Reserved - do not use\n61 : Reserved - do not use\n62 : Reserved - do not use\n63 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_SCLKI20PCFG ) </loc>
//      <o.5..0> CFG
//        <0=> 0: 
//        <1=> 1: P00 = P00 used as SCLKI20
//        <2=> 2: P01 = P01 used as SCLKI20
//        <3=> 3: P10 = P10 used as SCLKI20
//        <4=> 4: P11 = P11 used as SCLKI20
//        <5=> 5: P12 = P12 used as SCLKI20
//        <6=> 6: P13 = P13 used as SCLKI20
//        <7=> 7: P14 = P14 used as SCLKI20
//        <8=> 8: P15 = P15 used as SCLKI20
//        <9=> 9: P16 = P16 used as SCLKI20
//        <10=> 10: P17 = P17 used as SCLKI20
//        <11=> 11: P20 = P20 used as SCLKI20
//        <12=> 12: P21 = P21 used as SCLKI20
//        <13=> 13: P22 = P22 used as SCLKI20
//        <14=> 14: P23 = P23 used as SCLKI20
//        <15=> 15: P24 = P24 used as SCLKI20
//        <16=> 16: P25 = P25 used as SCLKI20
//        <17=> 17: P26 = P26 used as SCLKI20
//        <18=> 18: P27 = P27 used as SCLKI20
//        <19=> 19: P30 = P30 used as SCLKI20
//        <20=> 20: P31 = P31 used as SCLKI20
//        <21=> 21: P40 = P40 used as SCLKI20
//        <22=> 22: P41 = P41 used as SCLKI20
//        <23=> 23: P50 = P50 used as SCLKI20
//        <24=> 24: P51 = P51 used as SCLKI20
//        <25=> 25: P60 = P60 used as SCLKI20
//        <26=> 26: P61 = P61 used as SCLKI20
//        <27=> 27: P62 = P62 used as SCLKI20
//        <28=> 28: P63 = P63 used as SCLKI20
//        <29=> 29: P70 = P70 used as SCLKI20
//        <30=> 30: P71 = P71 used as SCLKI20
//        <31=> 31: P72 = P72 used as SCLKI20
//        <32=> 32: P73 = P73 used as SCLKI20
//        <33=> 33: P74 = P74 used as SCLKI20
//        <34=> 34: P75 = P75 used as SCLKI20
//        <35=> 35: P120 = P120 used as SCLKI20
//        <36=> 36: P121 = P121 used as SCLKI20
//        <37=> 37: P122 = P122 used as SCLKI20
//        <38=> 38: P123 = P123 used as SCLKI20
//        <39=> 39: P124 = P124 used as SCLKI20
//        <40=> 40: P130 = P130 used as SCLKI20
//        <41=> 41: P136 = P136 used as SCLKI20
//        <42=> 42: P137 = P137 used as SCLKI20
//        <43=> 43: P140 = P140 used as SCLKI20
//        <44=> 44: P146 = P146 used as SCLKI20
//        <45=> 45: P147 = P147 used as SCLKI20
//        <46=> 46: 
//        <47=> 47: 
//        <48=> 48: 
//        <49=> 49: 
//        <50=> 50: 
//        <51=> 51: 
//        <52=> 52: 
//        <53=> 53: 
//        <54=> 54: 
//        <55=> 55: 
//        <56=> 56: 
//        <57=> 57: 
//        <58=> 58: 
//        <59=> 59: 
//        <60=> 60: 
//        <61=> 61: 
//        <62=> 62: 
//        <63=> 63: 
//    </combo>
//  </item>
//  


// ----------------------------  Register RTree: PORT_SCLKI20PCFG  --------------------------------
// SVD Line: 5155

//  <rtree> SFDITEM_REG__PORT_SCLKI20PCFG
//    <name> SCLKI20PCFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4004086C) SCLKI20 alternate function pin configuration register </i>
//    <loc> ( (unsigned char)((PORT_SCLKI20PCFG >> 0) & 0xFF), ((PORT_SCLKI20PCFG = (PORT_SCLKI20PCFG & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_SCLKI20PCFG_CFG </item>
//  </rtree>
//  


// --------------------------  Register Item Address: PORT_RXD1PCFG  ------------------------------
// SVD Line: 5397

unsigned char PORT_RXD1PCFG __AT (0x4004086F);



// ------------------------------  Field Item: PORT_RXD1PCFG_CFG  ---------------------------------
// SVD Line: 5405

//  <item> SFDITEM_FIELD__PORT_RXD1PCFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 5..0] RW (@ 0x4004086F) \nCFG\n0 : Reserved - do not use\n1 : P00 = P00 used as RXD1\n2 : P01 = P01 used as RXD1\n3 : P10 = P10 used as RXD1\n4 : P11 = P11 used as RXD1\n5 : P12 = P12 used as RXD1\n6 : P13 = P13 used as RXD1\n7 : P14 = P14 used as RXD1\n8 : P15 = P15 used as RXD1\n9 : P16 = P16 used as RXD1\n10 : P17 = P17 used as RXD1\n11 : P20 = P20 used as RXD1\n12 : P21 = P21 used as RXD1\n13 : P22 = P22 used as RXD1\n14 : P23 = P23 used as RXD1\n15 : P24 = P24 used as RXD1\n16 : P25 = P25 used as RXD1\n17 : P26 = P26 used as RXD1\n18 : P27 = P27 used as RXD1\n19 : P30 = P30 used as RXD1\n20 : P31 = P31 used as RXD1\n21 : P40 = P40 used as RXD1\n22 : P41 = P41 used as RXD1\n23 : P50 = P50 used as RXD1\n24 : P51 = P51 used as RXD1\n25 : P60 = P60 used as RXD1\n26 : P61 = P61 used as RXD1\n27 : P62 = P62 used as RXD1\n28 : P63 = P63 used as RXD1\n29 : P70 = P70 used as RXD1\n30 : P71 = P71 used as RXD1\n31 : P72 = P72 used as RXD1\n32 : P73 = P73 used as RXD1\n33 : P74 = P74 used as RXD1\n34 : P75 = P75 used as RXD1\n35 : P120 = P120 used as RXD1\n36 : P121 = P121 used as RXD1\n37 : P122 = P122 used as RXD1\n38 : P123 = P123 used as RXD1\n39 : P124 = P124 used as RXD1\n40 : P130 = P130 used as RXD1\n41 : P136 = P136 used as RXD1\n42 : P137 = P137 used as RXD1\n43 : P140 = P140 used as RXD1\n44 : P146 = P146 used as RXD1\n45 : P147 = P147 used as RXD1\n46 : Reserved - do not use\n47 : Reserved - do not use\n48 : Reserved - do not use\n49 : Reserved - do not use\n50 : Reserved - do not use\n51 : Reserved - do not use\n52 : Reserved - do not use\n53 : Reserved - do not use\n54 : Reserved - do not use\n55 : Reserved - do not use\n56 : Reserved - do not use\n57 : Reserved - do not use\n58 : Reserved - do not use\n59 : Reserved - do not use\n60 : Reserved - do not use\n61 : Reserved - do not use\n62 : Reserved - do not use\n63 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_RXD1PCFG ) </loc>
//      <o.5..0> CFG
//        <0=> 0: 
//        <1=> 1: P00 = P00 used as RXD1
//        <2=> 2: P01 = P01 used as RXD1
//        <3=> 3: P10 = P10 used as RXD1
//        <4=> 4: P11 = P11 used as RXD1
//        <5=> 5: P12 = P12 used as RXD1
//        <6=> 6: P13 = P13 used as RXD1
//        <7=> 7: P14 = P14 used as RXD1
//        <8=> 8: P15 = P15 used as RXD1
//        <9=> 9: P16 = P16 used as RXD1
//        <10=> 10: P17 = P17 used as RXD1
//        <11=> 11: P20 = P20 used as RXD1
//        <12=> 12: P21 = P21 used as RXD1
//        <13=> 13: P22 = P22 used as RXD1
//        <14=> 14: P23 = P23 used as RXD1
//        <15=> 15: P24 = P24 used as RXD1
//        <16=> 16: P25 = P25 used as RXD1
//        <17=> 17: P26 = P26 used as RXD1
//        <18=> 18: P27 = P27 used as RXD1
//        <19=> 19: P30 = P30 used as RXD1
//        <20=> 20: P31 = P31 used as RXD1
//        <21=> 21: P40 = P40 used as RXD1
//        <22=> 22: P41 = P41 used as RXD1
//        <23=> 23: P50 = P50 used as RXD1
//        <24=> 24: P51 = P51 used as RXD1
//        <25=> 25: P60 = P60 used as RXD1
//        <26=> 26: P61 = P61 used as RXD1
//        <27=> 27: P62 = P62 used as RXD1
//        <28=> 28: P63 = P63 used as RXD1
//        <29=> 29: P70 = P70 used as RXD1
//        <30=> 30: P71 = P71 used as RXD1
//        <31=> 31: P72 = P72 used as RXD1
//        <32=> 32: P73 = P73 used as RXD1
//        <33=> 33: P74 = P74 used as RXD1
//        <34=> 34: P75 = P75 used as RXD1
//        <35=> 35: P120 = P120 used as RXD1
//        <36=> 36: P121 = P121 used as RXD1
//        <37=> 37: P122 = P122 used as RXD1
//        <38=> 38: P123 = P123 used as RXD1
//        <39=> 39: P124 = P124 used as RXD1
//        <40=> 40: P130 = P130 used as RXD1
//        <41=> 41: P136 = P136 used as RXD1
//        <42=> 42: P137 = P137 used as RXD1
//        <43=> 43: P140 = P140 used as RXD1
//        <44=> 44: P146 = P146 used as RXD1
//        <45=> 45: P147 = P147 used as RXD1
//        <46=> 46: 
//        <47=> 47: 
//        <48=> 48: 
//        <49=> 49: 
//        <50=> 50: 
//        <51=> 51: 
//        <52=> 52: 
//        <53=> 53: 
//        <54=> 54: 
//        <55=> 55: 
//        <56=> 56: 
//        <57=> 57: 
//        <58=> 58: 
//        <59=> 59: 
//        <60=> 60: 
//        <61=> 61: 
//        <62=> 62: 
//        <63=> 63: 
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: PORT_RXD1PCFG  ---------------------------------
// SVD Line: 5397

//  <rtree> SFDITEM_REG__PORT_RXD1PCFG
//    <name> RXD1PCFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4004086F) RXD1 alternate function pin configuration register </i>
//    <loc> ( (unsigned char)((PORT_RXD1PCFG >> 0) & 0xFF), ((PORT_RXD1PCFG = (PORT_RXD1PCFG & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_RXD1PCFG_CFG </item>
//  </rtree>
//  


// --------------------------  Register Item Address: PORT_SDA10PCFG  -----------------------------
// SVD Line: 5639

unsigned char PORT_SDA10PCFG __AT (0x4004086F);



// ------------------------------  Register Item: PORT_SDA10PCFG  ---------------------------------
// SVD Line: 5639

//  <item> SFDITEM_REG__PORT_SDA10PCFG
//    <name> SDA10PCFG </name>
//    <i> [Bits 7..0] RW (@ 0x4004086F) SDA10 alternate function pin configuration register </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_SDA10PCFG >> 0) & 0xFFFFFFFF), ((PORT_SDA10PCFG = (PORT_SDA10PCFG & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register Item Address: PORT_SDI10PCFG  -----------------------------
// SVD Line: 5646

unsigned char PORT_SDI10PCFG __AT (0x4004086F);



// ------------------------------  Register Item: PORT_SDI10PCFG  ---------------------------------
// SVD Line: 5646

//  <item> SFDITEM_REG__PORT_SDI10PCFG
//    <name> SDI10PCFG </name>
//    <i> [Bits 7..0] RW (@ 0x4004086F) SDI10 alternate function pin configuration register </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_SDI10PCFG >> 0) & 0xFFFFFFFF), ((PORT_SDI10PCFG = (PORT_SDI10PCFG & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register Item Address: PORT_SDAA0PCFG  -----------------------------
// SVD Line: 5653

unsigned char PORT_SDAA0PCFG __AT (0x4004086D);



// -----------------------------  Field Item: PORT_SDAA0PCFG_CFG  ---------------------------------
// SVD Line: 5661

//  <item> SFDITEM_FIELD__PORT_SDAA0PCFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 5..0] RW (@ 0x4004086D) \nCFG\n0 : Reserved - do not use\n1 : P00 = P00 used as SDAA0\n2 : P01 = P01 used as SDAA0\n3 : P10 = P10 used as SDAA0\n4 : P11 = P11 used as SDAA0\n5 : P12 = P12 used as SDAA0\n6 : P13 = P13 used as SDAA0\n7 : P14 = P14 used as SDAA0\n8 : P15 = P15 used as SDAA0\n9 : P16 = P16 used as SDAA0\n10 : P17 = P17 used as SDAA0\n11 : P20 = P20 used as SDAA0\n12 : P21 = P21 used as SDAA0\n13 : P22 = P22 used as SDAA0\n14 : P23 = P23 used as SDAA0\n15 : P24 = P24 used as SDAA0\n16 : P25 = P25 used as SDAA0\n17 : P26 = P26 used as SDAA0\n18 : P27 = P27 used as SDAA0\n19 : P30 = P30 used as SDAA0\n20 : P31 = P31 used as SDAA0\n21 : P40 = P40 used as SDAA0\n22 : P41 = P41 used as SDAA0\n23 : P50 = P50 used as SDAA0\n24 : P51 = P51 used as SDAA0\n25 : P60 = P60 used as SDAA0\n26 : P61 = P61 used as SDAA0\n27 : P62 = P62 used as SDAA0\n28 : P63 = P63 used as SDAA0\n29 : P70 = P70 used as SDAA0\n30 : P71 = P71 used as SDAA0\n31 : P72 = P72 used as SDAA0\n32 : P73 = P73 used as SDAA0\n33 : P74 = P74 used as SDAA0\n34 : P75 = P75 used as SDAA0\n35 : P120 = P120 used as SDAA0\n36 : P121 = P121 used as SDAA0\n37 : P122 = P122 used as SDAA0\n38 : P123 = P123 used as SDAA0\n39 : P124 = P124 used as SDAA0\n40 : P130 = P130 used as SDAA0\n41 : P136 = P136 used as SDAA0\n42 : P137 = P137 used as SDAA0\n43 : P140 = P140 used as SDAA0\n44 : P146 = P146 used as SDAA0\n45 : P147 = P147 used as SDAA0\n46 : Reserved - do not use\n47 : Reserved - do not use\n48 : Reserved - do not use\n49 : Reserved - do not use\n50 : Reserved - do not use\n51 : Reserved - do not use\n52 : Reserved - do not use\n53 : Reserved - do not use\n54 : Reserved - do not use\n55 : Reserved - do not use\n56 : Reserved - do not use\n57 : Reserved - do not use\n58 : Reserved - do not use\n59 : Reserved - do not use\n60 : Reserved - do not use\n61 : Reserved - do not use\n62 : Reserved - do not use\n63 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_SDAA0PCFG ) </loc>
//      <o.5..0> CFG
//        <0=> 0: 
//        <1=> 1: P00 = P00 used as SDAA0
//        <2=> 2: P01 = P01 used as SDAA0
//        <3=> 3: P10 = P10 used as SDAA0
//        <4=> 4: P11 = P11 used as SDAA0
//        <5=> 5: P12 = P12 used as SDAA0
//        <6=> 6: P13 = P13 used as SDAA0
//        <7=> 7: P14 = P14 used as SDAA0
//        <8=> 8: P15 = P15 used as SDAA0
//        <9=> 9: P16 = P16 used as SDAA0
//        <10=> 10: P17 = P17 used as SDAA0
//        <11=> 11: P20 = P20 used as SDAA0
//        <12=> 12: P21 = P21 used as SDAA0
//        <13=> 13: P22 = P22 used as SDAA0
//        <14=> 14: P23 = P23 used as SDAA0
//        <15=> 15: P24 = P24 used as SDAA0
//        <16=> 16: P25 = P25 used as SDAA0
//        <17=> 17: P26 = P26 used as SDAA0
//        <18=> 18: P27 = P27 used as SDAA0
//        <19=> 19: P30 = P30 used as SDAA0
//        <20=> 20: P31 = P31 used as SDAA0
//        <21=> 21: P40 = P40 used as SDAA0
//        <22=> 22: P41 = P41 used as SDAA0
//        <23=> 23: P50 = P50 used as SDAA0
//        <24=> 24: P51 = P51 used as SDAA0
//        <25=> 25: P60 = P60 used as SDAA0
//        <26=> 26: P61 = P61 used as SDAA0
//        <27=> 27: P62 = P62 used as SDAA0
//        <28=> 28: P63 = P63 used as SDAA0
//        <29=> 29: P70 = P70 used as SDAA0
//        <30=> 30: P71 = P71 used as SDAA0
//        <31=> 31: P72 = P72 used as SDAA0
//        <32=> 32: P73 = P73 used as SDAA0
//        <33=> 33: P74 = P74 used as SDAA0
//        <34=> 34: P75 = P75 used as SDAA0
//        <35=> 35: P120 = P120 used as SDAA0
//        <36=> 36: P121 = P121 used as SDAA0
//        <37=> 37: P122 = P122 used as SDAA0
//        <38=> 38: P123 = P123 used as SDAA0
//        <39=> 39: P124 = P124 used as SDAA0
//        <40=> 40: P130 = P130 used as SDAA0
//        <41=> 41: P136 = P136 used as SDAA0
//        <42=> 42: P137 = P137 used as SDAA0
//        <43=> 43: P140 = P140 used as SDAA0
//        <44=> 44: P146 = P146 used as SDAA0
//        <45=> 45: P147 = P147 used as SDAA0
//        <46=> 46: 
//        <47=> 47: 
//        <48=> 48: 
//        <49=> 49: 
//        <50=> 50: 
//        <51=> 51: 
//        <52=> 52: 
//        <53=> 53: 
//        <54=> 54: 
//        <55=> 55: 
//        <56=> 56: 
//        <57=> 57: 
//        <58=> 58: 
//        <59=> 59: 
//        <60=> 60: 
//        <61=> 61: 
//        <62=> 62: 
//        <63=> 63: 
//    </combo>
//  </item>
//  


// -----------------------------  Register RTree: PORT_SDAA0PCFG  ---------------------------------
// SVD Line: 5653

//  <rtree> SFDITEM_REG__PORT_SDAA0PCFG
//    <name> SDAA0PCFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4004086D) SDAA0 alternate function pin configuration register </i>
//    <loc> ( (unsigned char)((PORT_SDAA0PCFG >> 0) & 0xFF), ((PORT_SDAA0PCFG = (PORT_SDAA0PCFG & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_SDAA0PCFG_CFG </item>
//  </rtree>
//  


// --------------------------  Register Item Address: PORT_SCLA0PCFG  -----------------------------
// SVD Line: 5895

unsigned char PORT_SCLA0PCFG __AT (0x4004086E);



// -----------------------------  Field Item: PORT_SCLA0PCFG_CFG  ---------------------------------
// SVD Line: 5903

//  <item> SFDITEM_FIELD__PORT_SCLA0PCFG_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 5..0] RW (@ 0x4004086E) \nCFG\n0 : Reserved - do not use\n1 : P00 = P00 used as SCLA0\n2 : P01 = P01 used as SCLA0\n3 : P10 = P10 used as SCLA0\n4 : P11 = P11 used as SCLA0\n5 : P12 = P12 used as SCLA0\n6 : P13 = P13 used as SCLA0\n7 : P14 = P14 used as SCLA0\n8 : P15 = P15 used as SCLA0\n9 : P16 = P16 used as SCLA0\n10 : P17 = P17 used as SCLA0\n11 : P20 = P20 used as SCLA0\n12 : P21 = P21 used as SCLA0\n13 : P22 = P22 used as SCLA0\n14 : P23 = P23 used as SCLA0\n15 : P24 = P24 used as SCLA0\n16 : P25 = P25 used as SCLA0\n17 : P26 = P26 used as SCLA0\n18 : P27 = P27 used as SCLA0\n19 : P30 = P30 used as SCLA0\n20 : P31 = P31 used as SCLA0\n21 : P40 = P40 used as SCLA0\n22 : P41 = P41 used as SCLA0\n23 : P50 = P50 used as SCLA0\n24 : P51 = P51 used as SCLA0\n25 : P60 = P60 used as SCLA0\n26 : P61 = P61 used as SCLA0\n27 : P62 = P62 used as SCLA0\n28 : P63 = P63 used as SCLA0\n29 : P70 = P70 used as SCLA0\n30 : P71 = P71 used as SCLA0\n31 : P72 = P72 used as SCLA0\n32 : P73 = P73 used as SCLA0\n33 : P74 = P74 used as SCLA0\n34 : P75 = P75 used as SCLA0\n35 : P120 = P120 used as SCLA0\n36 : P121 = P121 used as SCLA0\n37 : P122 = P122 used as SCLA0\n38 : P123 = P123 used as SCLA0\n39 : P124 = P124 used as SCLA0\n40 : P130 = P130 used as SCLA0\n41 : P136 = P136 used as SCLA0\n42 : P137 = P137 used as SCLA0\n43 : P140 = P140 used as SCLA0\n44 : P146 = P146 used as SCLA0\n45 : P147 = P147 used as SCLA0\n46 : Reserved - do not use\n47 : Reserved - do not use\n48 : Reserved - do not use\n49 : Reserved - do not use\n50 : Reserved - do not use\n51 : Reserved - do not use\n52 : Reserved - do not use\n53 : Reserved - do not use\n54 : Reserved - do not use\n55 : Reserved - do not use\n56 : Reserved - do not use\n57 : Reserved - do not use\n58 : Reserved - do not use\n59 : Reserved - do not use\n60 : Reserved - do not use\n61 : Reserved - do not use\n62 : Reserved - do not use\n63 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) PORT_SCLA0PCFG ) </loc>
//      <o.5..0> CFG
//        <0=> 0: 
//        <1=> 1: P00 = P00 used as SCLA0
//        <2=> 2: P01 = P01 used as SCLA0
//        <3=> 3: P10 = P10 used as SCLA0
//        <4=> 4: P11 = P11 used as SCLA0
//        <5=> 5: P12 = P12 used as SCLA0
//        <6=> 6: P13 = P13 used as SCLA0
//        <7=> 7: P14 = P14 used as SCLA0
//        <8=> 8: P15 = P15 used as SCLA0
//        <9=> 9: P16 = P16 used as SCLA0
//        <10=> 10: P17 = P17 used as SCLA0
//        <11=> 11: P20 = P20 used as SCLA0
//        <12=> 12: P21 = P21 used as SCLA0
//        <13=> 13: P22 = P22 used as SCLA0
//        <14=> 14: P23 = P23 used as SCLA0
//        <15=> 15: P24 = P24 used as SCLA0
//        <16=> 16: P25 = P25 used as SCLA0
//        <17=> 17: P26 = P26 used as SCLA0
//        <18=> 18: P27 = P27 used as SCLA0
//        <19=> 19: P30 = P30 used as SCLA0
//        <20=> 20: P31 = P31 used as SCLA0
//        <21=> 21: P40 = P40 used as SCLA0
//        <22=> 22: P41 = P41 used as SCLA0
//        <23=> 23: P50 = P50 used as SCLA0
//        <24=> 24: P51 = P51 used as SCLA0
//        <25=> 25: P60 = P60 used as SCLA0
//        <26=> 26: P61 = P61 used as SCLA0
//        <27=> 27: P62 = P62 used as SCLA0
//        <28=> 28: P63 = P63 used as SCLA0
//        <29=> 29: P70 = P70 used as SCLA0
//        <30=> 30: P71 = P71 used as SCLA0
//        <31=> 31: P72 = P72 used as SCLA0
//        <32=> 32: P73 = P73 used as SCLA0
//        <33=> 33: P74 = P74 used as SCLA0
//        <34=> 34: P75 = P75 used as SCLA0
//        <35=> 35: P120 = P120 used as SCLA0
//        <36=> 36: P121 = P121 used as SCLA0
//        <37=> 37: P122 = P122 used as SCLA0
//        <38=> 38: P123 = P123 used as SCLA0
//        <39=> 39: P124 = P124 used as SCLA0
//        <40=> 40: P130 = P130 used as SCLA0
//        <41=> 41: P136 = P136 used as SCLA0
//        <42=> 42: P137 = P137 used as SCLA0
//        <43=> 43: P140 = P140 used as SCLA0
//        <44=> 44: P146 = P146 used as SCLA0
//        <45=> 45: P147 = P147 used as SCLA0
//        <46=> 46: 
//        <47=> 47: 
//        <48=> 48: 
//        <49=> 49: 
//        <50=> 50: 
//        <51=> 51: 
//        <52=> 52: 
//        <53=> 53: 
//        <54=> 54: 
//        <55=> 55: 
//        <56=> 56: 
//        <57=> 57: 
//        <58=> 58: 
//        <59=> 59: 
//        <60=> 60: 
//        <61=> 61: 
//        <62=> 62: 
//        <63=> 63: 
//    </combo>
//  </item>
//  


// -----------------------------  Register RTree: PORT_SCLA0PCFG  ---------------------------------
// SVD Line: 5895

//  <rtree> SFDITEM_REG__PORT_SCLA0PCFG
//    <name> SCLA0PCFG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4004086E) SCLA0 alternate function pin configuration register </i>
//    <loc> ( (unsigned char)((PORT_SCLA0PCFG >> 0) & 0xFF), ((PORT_SCLA0PCFG = (PORT_SCLA0PCFG & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PORT_SCLA0PCFG_CFG </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: PORT_PMS  --------------------------------
// SVD Line: 6137

unsigned char PORT_PMS __AT (0x4004087B);



// ---------------------------------  Register Item: PORT_PMS  ------------------------------------
// SVD Line: 6137

//  <item> SFDITEM_REG__PORT_PMS
//    <name> PMS </name>
//    <i> [Bits 7..0] RW (@ 0x4004087B) Port mode select register </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_PMS >> 0) & 0xFFFFFFFF), ((PORT_PMS = (PORT_PMS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: PORT_SPIPCFG  ------------------------------
// SVD Line: 6146

unsigned char PORT_SPIPCFG __AT (0x4004087E);



// -------------------------------  Register Item: PORT_SPIPCFG  ----------------------------------
// SVD Line: 6146

//  <item> SFDITEM_REG__PORT_SPIPCFG
//    <name> SPIPCFG </name>
//    <i> [Bits 7..0] RW (@ 0x4004087E) SPI alternate function pins configuration register </i>
//    <edit> 
//      <loc> ( (unsigned char)((PORT_SPIPCFG >> 0) & 0xFFFFFFFF), ((PORT_SPIPCFG = (PORT_SPIPCFG & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------------  Peripheral View: PORT  -------------------------------------
// SVD Line: 1140

//  <view> PORT
//    <name> PORT </name>
//    <item> SFDITEM_REG__PORT_PM0 </item>
//    <item> SFDITEM_REG__PORT_PM1 </item>
//    <item> SFDITEM_REG__PORT_PM2 </item>
//    <item> SFDITEM_REG__PORT_PM3 </item>
//    <item> SFDITEM_REG__PORT_PM4 </item>
//    <item> SFDITEM_REG__PORT_PM5 </item>
//    <item> SFDITEM_REG__PORT_PM6 </item>
//    <item> SFDITEM_REG__PORT_PM7 </item>
//    <item> SFDITEM_REG__PORT_PM12 </item>
//    <item> SFDITEM_REG__PORT_PM13 </item>
//    <item> SFDITEM_REG__PORT_PM14 </item>
//    <item> SFDITEM_REG__PORT_P0 </item>
//    <item> SFDITEM_REG__PORT_P1 </item>
//    <item> SFDITEM_REG__PORT_P2 </item>
//    <item> SFDITEM_REG__PORT_P3 </item>
//    <item> SFDITEM_REG__PORT_P4 </item>
//    <item> SFDITEM_REG__PORT_P5 </item>
//    <item> SFDITEM_REG__PORT_P6 </item>
//    <item> SFDITEM_REG__PORT_P7 </item>
//    <item> SFDITEM_REG__PORT_P12 </item>
//    <item> SFDITEM_REG__PORT_P13 </item>
//    <item> SFDITEM_REG__PORT_P14 </item>
//    <item> SFDITEM_REG__PORT_PU0 </item>
//    <item> SFDITEM_REG__PORT_PU1 </item>
//    <item> SFDITEM_REG__PORT_PU2 </item>
//    <item> SFDITEM_REG__PORT_PU3 </item>
//    <item> SFDITEM_REG__PORT_PU4 </item>
//    <item> SFDITEM_REG__PORT_PU5 </item>
//    <item> SFDITEM_REG__PORT_PU6 </item>
//    <item> SFDITEM_REG__PORT_PU7 </item>
//    <item> SFDITEM_REG__PORT_PU12 </item>
//    <item> SFDITEM_REG__PORT_PU13 </item>
//    <item> SFDITEM_REG__PORT_PU14 </item>
//    <item> SFDITEM_REG__PORT_PD0 </item>
//    <item> SFDITEM_REG__PORT_PD1 </item>
//    <item> SFDITEM_REG__PORT_PD2 </item>
//    <item> SFDITEM_REG__PORT_PD3 </item>
//    <item> SFDITEM_REG__PORT_PD5 </item>
//    <item> SFDITEM_REG__PORT_PD6 </item>
//    <item> SFDITEM_REG__PORT_PD7 </item>
//    <item> SFDITEM_REG__PORT_PD12 </item>
//    <item> SFDITEM_REG__PORT_PD13 </item>
//    <item> SFDITEM_REG__PORT_PD14 </item>
//    <item> SFDITEM_REG__PORT_POM0 </item>
//    <item> SFDITEM_REG__PORT_POM1 </item>
//    <item> SFDITEM_REG__PORT_POM2 </item>
//    <item> SFDITEM_REG__PORT_POM3 </item>
//    <item> SFDITEM_REG__PORT_POM4 </item>
//    <item> SFDITEM_REG__PORT_POM5 </item>
//    <item> SFDITEM_REG__PORT_POM6 </item>
//    <item> SFDITEM_REG__PORT_POM7 </item>
//    <item> SFDITEM_REG__PORT_POM12 </item>
//    <item> SFDITEM_REG__PORT_POM13 </item>
//    <item> SFDITEM_REG__PORT_POM14 </item>
//    <item> SFDITEM_REG__PORT_PMC0 </item>
//    <item> SFDITEM_REG__PORT_PMC1 </item>
//    <item> SFDITEM_REG__PORT_PMC2 </item>
//    <item> SFDITEM_REG__PORT_PMC3 </item>
//    <item> SFDITEM_REG__PORT_PMC5 </item>
//    <item> SFDITEM_REG__PORT_PMC6 </item>
//    <item> SFDITEM_REG__PORT_PMC7 </item>
//    <item> SFDITEM_REG__PORT_PMC12 </item>
//    <item> SFDITEM_REG__PORT_PMC13 </item>
//    <item> SFDITEM_REG__PORT_PMC14 </item>
//    <item> SFDITEM_REG__PORT_PSET0 </item>
//    <item> SFDITEM_REG__PORT_PSET1 </item>
//    <item> SFDITEM_REG__PORT_PSET2 </item>
//    <item> SFDITEM_REG__PORT_PSET3 </item>
//    <item> SFDITEM_REG__PORT_PSET4 </item>
//    <item> SFDITEM_REG__PORT_PSET5 </item>
//    <item> SFDITEM_REG__PORT_PSET6 </item>
//    <item> SFDITEM_REG__PORT_PSET7 </item>
//    <item> SFDITEM_REG__PORT_PSET12 </item>
//    <item> SFDITEM_REG__PORT_PSET13 </item>
//    <item> SFDITEM_REG__PORT_PSET14 </item>
//    <item> SFDITEM_REG__PORT_PCLR0 </item>
//    <item> SFDITEM_REG__PORT_PCLR1 </item>
//    <item> SFDITEM_REG__PORT_PCLR2 </item>
//    <item> SFDITEM_REG__PORT_PCLR3 </item>
//    <item> SFDITEM_REG__PORT_PCLR4 </item>
//    <item> SFDITEM_REG__PORT_PCLR5 </item>
//    <item> SFDITEM_REG__PORT_PCLR6 </item>
//    <item> SFDITEM_REG__PORT_PCLR7 </item>
//    <item> SFDITEM_REG__PORT_PCLR12 </item>
//    <item> SFDITEM_REG__PORT_PCLR13 </item>
//    <item> SFDITEM_REG__PORT_PCLR14 </item>
//    <item> SFDITEM_REG__PORT_P00CFG </item>
//    <item> SFDITEM_REG__PORT_P01CFG </item>
//    <item> SFDITEM_REG__PORT_P10CFG </item>
//    <item> SFDITEM_REG__PORT_P11CFG </item>
//    <item> SFDITEM_REG__PORT_P12CFG </item>
//    <item> SFDITEM_REG__PORT_P13CFG </item>
//    <item> SFDITEM_REG__PORT_P14CFG </item>
//    <item> SFDITEM_REG__PORT_P15CFG </item>
//    <item> SFDITEM_REG__PORT_P16CFG </item>
//    <item> SFDITEM_REG__PORT_P17CFG </item>
//    <item> SFDITEM_REG__PORT_P20CFG </item>
//    <item> SFDITEM_REG__PORT_P21CFG </item>
//    <item> SFDITEM_REG__PORT_P22CFG </item>
//    <item> SFDITEM_REG__PORT_P23CFG </item>
//    <item> SFDITEM_REG__PORT_P24CFG </item>
//    <item> SFDITEM_REG__PORT_P25CFG </item>
//    <item> SFDITEM_REG__PORT_P26CFG </item>
//    <item> SFDITEM_REG__PORT_P27CFG </item>
//    <item> SFDITEM_REG__PORT_P30CFG </item>
//    <item> SFDITEM_REG__PORT_P31CFG </item>
//    <item> SFDITEM_REG__PORT_P40CFG </item>
//    <item> SFDITEM_REG__PORT_P41CFG </item>
//    <item> SFDITEM_REG__PORT_P50CFG </item>
//    <item> SFDITEM_REG__PORT_P51CFG </item>
//    <item> SFDITEM_REG__PORT_P60CFG </item>
//    <item> SFDITEM_REG__PORT_P61CFG </item>
//    <item> SFDITEM_REG__PORT_P62CFG </item>
//    <item> SFDITEM_REG__PORT_P63CFG </item>
//    <item> SFDITEM_REG__PORT_P70CFG </item>
//    <item> SFDITEM_REG__PORT_P71CFG </item>
//    <item> SFDITEM_REG__PORT_P72CFG </item>
//    <item> SFDITEM_REG__PORT_P73CFG </item>
//    <item> SFDITEM_REG__PORT_P74CFG </item>
//    <item> SFDITEM_REG__PORT_P75CFG </item>
//    <item> SFDITEM_REG__PORT_P120CFG </item>
//    <item> SFDITEM_REG__PORT_P121CFG </item>
//    <item> SFDITEM_REG__PORT_P122CFG </item>
//    <item> SFDITEM_REG__PORT_P123CFG </item>
//    <item> SFDITEM_REG__PORT_P124CFG </item>
//    <item> SFDITEM_REG__PORT_P130CFG </item>
//    <item> SFDITEM_REG__PORT_P136CFG </item>
//    <item> SFDITEM_REG__PORT_P137CFG </item>
//    <item> SFDITEM_REG__PORT_P140CFG </item>
//    <item> SFDITEM_REG__PORT_P146CFG </item>
//    <item> SFDITEM_REG__PORT_P147CFG </item>
//    <item> SFDITEM_REG__PORT_TI10PCFG </item>
//    <item> SFDITEM_REG__PORT_TI11PCFG </item>
//    <item> SFDITEM_REG__PORT_TI12PCFG </item>
//    <item> SFDITEM_REG__PORT_TI13PCFG </item>
//    <item> SFDITEM_REG__PORT_INTP0PCFG </item>
//    <item> SFDITEM_REG__PORT_INTP1PCFG </item>
//    <item> SFDITEM_REG__PORT_INTP2PCFG </item>
//    <item> SFDITEM_REG__PORT_INTP3PCFG </item>
//    <item> SFDITEM_REG__PORT_SDI00PCFG </item>
//    <item> SFDITEM_REG__PORT_SDA00PCFG </item>
//    <item> SFDITEM_REG__PORT_RXD0PCFG </item>
//    <item> SFDITEM_REG__PORT_SCLKI00PCFG </item>
//    <item> SFDITEM_REG__PORT_SS00PCFG </item>
//    <item> SFDITEM_REG__PORT_SDI20PCFG </item>
//    <item> SFDITEM_REG__PORT_IRRXDPCFG </item>
//    <item> SFDITEM_REG__PORT_RXD2PCFG </item>
//    <item> SFDITEM_REG__PORT_SCLKI20PCFG </item>
//    <item> SFDITEM_REG__PORT_RXD1PCFG </item>
//    <item> SFDITEM_REG__PORT_SDA10PCFG </item>
//    <item> SFDITEM_REG__PORT_SDI10PCFG </item>
//    <item> SFDITEM_REG__PORT_SDAA0PCFG </item>
//    <item> SFDITEM_REG__PORT_SCLA0PCFG </item>
//    <item> SFDITEM_REG__PORT_PMS </item>
//    <item> SFDITEM_REG__PORT_SPIPCFG </item>
//  </view>
//  


// -----------------------  Register Item Address: TM40_TCR0_TCR0_TCR00  --------------------------
// SVD Line: 6213

unsigned short TM40_TCR0_TCR0_TCR00 __AT (0x40041D80);



// ---------------------------  Register Item: TM40_TCR0_TCR0_TCR00  ------------------------------
// SVD Line: 6213

//  <item> SFDITEM_REG__TM40_TCR0_TCR0_TCR00
//    <name> TCR00 </name>
//    <i> [Bits 15..0] RO (@ 0x40041D80) Timer count register 00 </i>
//    <edit> 
//      <loc> ( (unsigned short)((TM40_TCR0_TCR0_TCR00 >> 0) & 0xFFFFFFFF), ((TM40_TCR0_TCR0_TCR00 = (TM40_TCR0_TCR0_TCR00 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: TM40_TCR0_TCR0_TCR01  --------------------------
// SVD Line: 6213

unsigned short TM40_TCR0_TCR0_TCR01 __AT (0x40041D82);



// ---------------------------  Register Item: TM40_TCR0_TCR0_TCR01  ------------------------------
// SVD Line: 6213

//  <item> SFDITEM_REG__TM40_TCR0_TCR0_TCR01
//    <name> TCR01 </name>
//    <i> [Bits 15..0] RO (@ 0x40041D82) Timer count register 01 </i>
//    <edit> 
//      <loc> ( (unsigned short)((TM40_TCR0_TCR0_TCR01 >> 0) & 0xFFFFFFFF), ((TM40_TCR0_TCR0_TCR01 = (TM40_TCR0_TCR0_TCR01 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: TM40_TCR0_TCR0_TCR02  --------------------------
// SVD Line: 6213

unsigned short TM40_TCR0_TCR0_TCR02 __AT (0x40041D84);



// ---------------------------  Register Item: TM40_TCR0_TCR0_TCR02  ------------------------------
// SVD Line: 6213

//  <item> SFDITEM_REG__TM40_TCR0_TCR0_TCR02
//    <name> TCR02 </name>
//    <i> [Bits 15..0] RO (@ 0x40041D84) Timer count register 02 </i>
//    <edit> 
//      <loc> ( (unsigned short)((TM40_TCR0_TCR0_TCR02 >> 0) & 0xFFFFFFFF), ((TM40_TCR0_TCR0_TCR02 = (TM40_TCR0_TCR0_TCR02 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: TM40_TCR0_TCR0_TCR03  --------------------------
// SVD Line: 6213

unsigned short TM40_TCR0_TCR0_TCR03 __AT (0x40041D86);



// ---------------------------  Register Item: TM40_TCR0_TCR0_TCR03  ------------------------------
// SVD Line: 6213

//  <item> SFDITEM_REG__TM40_TCR0_TCR0_TCR03
//    <name> TCR03 </name>
//    <i> [Bits 15..0] RO (@ 0x40041D86) Timer count register 03 </i>
//    <edit> 
//      <loc> ( (unsigned short)((TM40_TCR0_TCR0_TCR03 >> 0) & 0xFFFFFFFF), ((TM40_TCR0_TCR0_TCR03 = (TM40_TCR0_TCR0_TCR03 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: TM40_TMR00  -------------------------------
// SVD Line: 6225

unsigned short TM40_TMR00 __AT (0x40041D90);



// --------------------------------  Field Item: TM40_TMR00_MD  -----------------------------------
// SVD Line: 6234

//  <item> SFDITEM_FIELD__TM40_TMR00_MD
//    <name> MD </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40041D90) Operation mode of channel n </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM40_TMR00 >> 0) & 0xF), ((TM40_TMR00 = (TM40_TMR00 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TM40_TMR00_CIS  -----------------------------------
// SVD Line: 6241

//  <item> SFDITEM_FIELD__TM40_TMR00_CIS
//    <name> CIS </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x40041D90) Selection of TImn pin input valid edge </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM40_TMR00 >> 6) & 0x3), ((TM40_TMR00 = (TM40_TMR00 & ~(0x3UL << 6 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 6 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TM40_TMR00_STS  -----------------------------------
// SVD Line: 6248

//  <item> SFDITEM_FIELD__TM40_TMR00_STS
//    <name> STS </name>
//    <rw> 
//    <i> [Bits 10..8] RW (@ 0x40041D90) Setting of start trigger or capture trigger of channel n </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM40_TMR00 >> 8) & 0x7), ((TM40_TMR00 = (TM40_TMR00 & ~(0x7UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TM40_TMR00_CCS  -----------------------------------
// SVD Line: 6255

//  <item> SFDITEM_FIELD__TM40_TMR00_CCS
//    <name> CCS </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x40041D90) Selection of count clock (fTCLK) of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) TM40_TMR00 ) </loc>
//      <o.12..12> CCS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TM40_TMR00_CKS  -----------------------------------
// SVD Line: 6262

//  <item> SFDITEM_FIELD__TM40_TMR00_CKS
//    <name> CKS </name>
//    <rw> 
//    <i> [Bits 15..14] RW (@ 0x40041D90) Selection of operation clock (fMCK) of channel n </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM40_TMR00 >> 14) & 0x3), ((TM40_TMR00 = (TM40_TMR00 & ~(0x3UL << 14 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 14 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: TM40_TMR00  -----------------------------------
// SVD Line: 6225

//  <rtree> SFDITEM_REG__TM40_TMR00
//    <name> TMR00 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40041D90) Timer mode register mn </i>
//    <loc> ( (unsigned short)((TM40_TMR00 >> 0) & 0xFFFF), ((TM40_TMR00 = (TM40_TMR00 & ~(0xD7CFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xD7CF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TM40_TMR00_MD </item>
//    <item> SFDITEM_FIELD__TM40_TMR00_CIS </item>
//    <item> SFDITEM_FIELD__TM40_TMR00_STS </item>
//    <item> SFDITEM_FIELD__TM40_TMR00_CCS </item>
//    <item> SFDITEM_FIELD__TM40_TMR00_CKS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TM40_TMR01  -------------------------------
// SVD Line: 6271

unsigned short TM40_TMR01 __AT (0x40041D92);



// --------------------------------  Field Item: TM40_TMR01_MD  -----------------------------------
// SVD Line: 6280

//  <item> SFDITEM_FIELD__TM40_TMR01_MD
//    <name> MD </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40041D92) Operation mode of channel n </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM40_TMR01 >> 0) & 0xF), ((TM40_TMR01 = (TM40_TMR01 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TM40_TMR01_CIS  -----------------------------------
// SVD Line: 6287

//  <item> SFDITEM_FIELD__TM40_TMR01_CIS
//    <name> CIS </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x40041D92) Selection of TImn pin input valid edge </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM40_TMR01 >> 6) & 0x3), ((TM40_TMR01 = (TM40_TMR01 & ~(0x3UL << 6 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 6 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TM40_TMR01_STS  -----------------------------------
// SVD Line: 6294

//  <item> SFDITEM_FIELD__TM40_TMR01_STS
//    <name> STS </name>
//    <rw> 
//    <i> [Bits 10..8] RW (@ 0x40041D92) Setting of start trigger or capture trigger of channel n </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM40_TMR01 >> 8) & 0x7), ((TM40_TMR01 = (TM40_TMR01 & ~(0x7UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: TM40_TMR01_SPLIT  ----------------------------------
// SVD Line: 6301

//  <item> SFDITEM_FIELD__TM40_TMR01_SPLIT
//    <name> SPLIT </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40041D92) Selection of 8 or 16-bit timer operation for channels 1 and 3 </i>
//    <check> 
//      <loc> ( (unsigned short) TM40_TMR01 ) </loc>
//      <o.11..11> SPLIT
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TM40_TMR01_CCS  -----------------------------------
// SVD Line: 6308

//  <item> SFDITEM_FIELD__TM40_TMR01_CCS
//    <name> CCS </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x40041D92) Selection of count clock (fTCLK) of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) TM40_TMR01 ) </loc>
//      <o.12..12> CCS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TM40_TMR01_CKS  -----------------------------------
// SVD Line: 6315

//  <item> SFDITEM_FIELD__TM40_TMR01_CKS
//    <name> CKS </name>
//    <rw> 
//    <i> [Bits 15..14] RW (@ 0x40041D92) Selection of operation clock (fMCK) of channel n </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM40_TMR01 >> 14) & 0x3), ((TM40_TMR01 = (TM40_TMR01 & ~(0x3UL << 14 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 14 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: TM40_TMR01  -----------------------------------
// SVD Line: 6271

//  <rtree> SFDITEM_REG__TM40_TMR01
//    <name> TMR01 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40041D92) Timer mode register mn </i>
//    <loc> ( (unsigned short)((TM40_TMR01 >> 0) & 0xFFFF), ((TM40_TMR01 = (TM40_TMR01 & ~(0xDFCFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xDFCF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TM40_TMR01_MD </item>
//    <item> SFDITEM_FIELD__TM40_TMR01_CIS </item>
//    <item> SFDITEM_FIELD__TM40_TMR01_STS </item>
//    <item> SFDITEM_FIELD__TM40_TMR01_SPLIT </item>
//    <item> SFDITEM_FIELD__TM40_TMR01_CCS </item>
//    <item> SFDITEM_FIELD__TM40_TMR01_CKS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TM40_TMR02  -------------------------------
// SVD Line: 6324

unsigned short TM40_TMR02 __AT (0x40041D94);



// --------------------------------  Field Item: TM40_TMR02_MD  -----------------------------------
// SVD Line: 6333

//  <item> SFDITEM_FIELD__TM40_TMR02_MD
//    <name> MD </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40041D94) Operation mode of channel n </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM40_TMR02 >> 0) & 0xF), ((TM40_TMR02 = (TM40_TMR02 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TM40_TMR02_CIS  -----------------------------------
// SVD Line: 6340

//  <item> SFDITEM_FIELD__TM40_TMR02_CIS
//    <name> CIS </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x40041D94) Selection of TImn pin input valid edge </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM40_TMR02 >> 6) & 0x3), ((TM40_TMR02 = (TM40_TMR02 & ~(0x3UL << 6 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 6 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TM40_TMR02_STS  -----------------------------------
// SVD Line: 6347

//  <item> SFDITEM_FIELD__TM40_TMR02_STS
//    <name> STS </name>
//    <rw> 
//    <i> [Bits 10..8] RW (@ 0x40041D94) Setting of start trigger or capture trigger of channel n </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM40_TMR02 >> 8) & 0x7), ((TM40_TMR02 = (TM40_TMR02 & ~(0x7UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: TM40_TMR02_MASTER  ---------------------------------
// SVD Line: 6354

//  <item> SFDITEM_FIELD__TM40_TMR02_MASTER
//    <name> MASTER </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40041D94) Selection between using channel n independently or simultaneously with another channel (as a slave or master) </i>
//    <check> 
//      <loc> ( (unsigned short) TM40_TMR02 ) </loc>
//      <o.11..11> MASTER
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TM40_TMR02_CCS  -----------------------------------
// SVD Line: 6361

//  <item> SFDITEM_FIELD__TM40_TMR02_CCS
//    <name> CCS </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x40041D94) Selection of count clock (fTCLK) of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) TM40_TMR02 ) </loc>
//      <o.12..12> CCS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TM40_TMR02_CKS  -----------------------------------
// SVD Line: 6368

//  <item> SFDITEM_FIELD__TM40_TMR02_CKS
//    <name> CKS </name>
//    <rw> 
//    <i> [Bits 15..14] RW (@ 0x40041D94) Selection of operation clock (fMCK) of channel n </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM40_TMR02 >> 14) & 0x3), ((TM40_TMR02 = (TM40_TMR02 & ~(0x3UL << 14 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 14 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: TM40_TMR02  -----------------------------------
// SVD Line: 6324

//  <rtree> SFDITEM_REG__TM40_TMR02
//    <name> TMR02 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40041D94) Timer mode register mn </i>
//    <loc> ( (unsigned short)((TM40_TMR02 >> 0) & 0xFFFF), ((TM40_TMR02 = (TM40_TMR02 & ~(0xDFCFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xDFCF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TM40_TMR02_MD </item>
//    <item> SFDITEM_FIELD__TM40_TMR02_CIS </item>
//    <item> SFDITEM_FIELD__TM40_TMR02_STS </item>
//    <item> SFDITEM_FIELD__TM40_TMR02_MASTER </item>
//    <item> SFDITEM_FIELD__TM40_TMR02_CCS </item>
//    <item> SFDITEM_FIELD__TM40_TMR02_CKS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TM40_TMR03  -------------------------------
// SVD Line: 6377

unsigned short TM40_TMR03 __AT (0x40041D96);



// --------------------------------  Field Item: TM40_TMR03_MD  -----------------------------------
// SVD Line: 6386

//  <item> SFDITEM_FIELD__TM40_TMR03_MD
//    <name> MD </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40041D96) Operation mode of channel n </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM40_TMR03 >> 0) & 0xF), ((TM40_TMR03 = (TM40_TMR03 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TM40_TMR03_CIS  -----------------------------------
// SVD Line: 6393

//  <item> SFDITEM_FIELD__TM40_TMR03_CIS
//    <name> CIS </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x40041D96) Selection of TImn pin input valid edge </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM40_TMR03 >> 6) & 0x3), ((TM40_TMR03 = (TM40_TMR03 & ~(0x3UL << 6 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 6 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TM40_TMR03_STS  -----------------------------------
// SVD Line: 6400

//  <item> SFDITEM_FIELD__TM40_TMR03_STS
//    <name> STS </name>
//    <rw> 
//    <i> [Bits 10..8] RW (@ 0x40041D96) Setting of start trigger or capture trigger of channel n </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM40_TMR03 >> 8) & 0x7), ((TM40_TMR03 = (TM40_TMR03 & ~(0x7UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: TM40_TMR03_SPLIT  ----------------------------------
// SVD Line: 6407

//  <item> SFDITEM_FIELD__TM40_TMR03_SPLIT
//    <name> SPLIT </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40041D96) Selection of 8 or 16-bit timer operation for channels 1 and 3 </i>
//    <check> 
//      <loc> ( (unsigned short) TM40_TMR03 ) </loc>
//      <o.11..11> SPLIT
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TM40_TMR03_CCS  -----------------------------------
// SVD Line: 6414

//  <item> SFDITEM_FIELD__TM40_TMR03_CCS
//    <name> CCS </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x40041D96) Selection of count clock (fTCLK) of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) TM40_TMR03 ) </loc>
//      <o.12..12> CCS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TM40_TMR03_CKS  -----------------------------------
// SVD Line: 6421

//  <item> SFDITEM_FIELD__TM40_TMR03_CKS
//    <name> CKS </name>
//    <rw> 
//    <i> [Bits 15..14] RW (@ 0x40041D96) Selection of operation clock (fMCK) of channel n </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM40_TMR03 >> 14) & 0x3), ((TM40_TMR03 = (TM40_TMR03 & ~(0x3UL << 14 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 14 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: TM40_TMR03  -----------------------------------
// SVD Line: 6377

//  <rtree> SFDITEM_REG__TM40_TMR03
//    <name> TMR03 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40041D96) Timer mode register mn </i>
//    <loc> ( (unsigned short)((TM40_TMR03 >> 0) & 0xFFFF), ((TM40_TMR03 = (TM40_TMR03 & ~(0xDFCFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xDFCF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TM40_TMR03_MD </item>
//    <item> SFDITEM_FIELD__TM40_TMR03_CIS </item>
//    <item> SFDITEM_FIELD__TM40_TMR03_STS </item>
//    <item> SFDITEM_FIELD__TM40_TMR03_SPLIT </item>
//    <item> SFDITEM_FIELD__TM40_TMR03_CCS </item>
//    <item> SFDITEM_FIELD__TM40_TMR03_CKS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TM40_TSR00  -------------------------------
// SVD Line: 6430

unsigned short TM40_TSR00 __AT (0x40041DA0);



// -------------------------------  Field Item: TM40_TSR00_OVF  -----------------------------------
// SVD Line: 6439

//  <item> SFDITEM_FIELD__TM40_TSR00_OVF
//    <name> OVF </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x40041DA0) Counter overflow status of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) TM40_TSR00 ) </loc>
//      <o.0..0> OVF
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: TM40_TSR00  -----------------------------------
// SVD Line: 6430

//  <rtree> SFDITEM_REG__TM40_TSR00
//    <name> TSR00 </name>
//    <r> 
//    <i> [Bits 15..0] RO (@ 0x40041DA0) Timer status register mn </i>
//    <loc> ( (unsigned short)((TM40_TSR00 >> 0) & 0xFFFF) ) </loc>
//    <item> SFDITEM_FIELD__TM40_TSR00_OVF </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TM40_TSR01  -------------------------------
// SVD Line: 6448

unsigned short TM40_TSR01 __AT (0x40041DA2);



// -------------------------------  Field Item: TM40_TSR01_OVF  -----------------------------------
// SVD Line: 6439

//  <item> SFDITEM_FIELD__TM40_TSR01_OVF
//    <name> OVF </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x40041DA2) Counter overflow status of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) TM40_TSR01 ) </loc>
//      <o.0..0> OVF
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: TM40_TSR01  -----------------------------------
// SVD Line: 6448

//  <rtree> SFDITEM_REG__TM40_TSR01
//    <name> TSR01 </name>
//    <r> 
//    <i> [Bits 15..0] RO (@ 0x40041DA2) Timer status register mn </i>
//    <loc> ( (unsigned short)((TM40_TSR01 >> 0) & 0xFFFF) ) </loc>
//    <item> SFDITEM_FIELD__TM40_TSR01_OVF </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TM40_TSR02  -------------------------------
// SVD Line: 6454

unsigned short TM40_TSR02 __AT (0x40041DA4);



// -------------------------------  Field Item: TM40_TSR02_OVF  -----------------------------------
// SVD Line: 6439

//  <item> SFDITEM_FIELD__TM40_TSR02_OVF
//    <name> OVF </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x40041DA4) Counter overflow status of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) TM40_TSR02 ) </loc>
//      <o.0..0> OVF
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: TM40_TSR02  -----------------------------------
// SVD Line: 6454

//  <rtree> SFDITEM_REG__TM40_TSR02
//    <name> TSR02 </name>
//    <r> 
//    <i> [Bits 15..0] RO (@ 0x40041DA4) Timer status register mn </i>
//    <loc> ( (unsigned short)((TM40_TSR02 >> 0) & 0xFFFF) ) </loc>
//    <item> SFDITEM_FIELD__TM40_TSR02_OVF </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TM40_TSR03  -------------------------------
// SVD Line: 6460

unsigned short TM40_TSR03 __AT (0x40041DA6);



// -------------------------------  Field Item: TM40_TSR03_OVF  -----------------------------------
// SVD Line: 6439

//  <item> SFDITEM_FIELD__TM40_TSR03_OVF
//    <name> OVF </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x40041DA6) Counter overflow status of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) TM40_TSR03 ) </loc>
//      <o.0..0> OVF
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: TM40_TSR03  -----------------------------------
// SVD Line: 6460

//  <rtree> SFDITEM_REG__TM40_TSR03
//    <name> TSR03 </name>
//    <r> 
//    <i> [Bits 15..0] RO (@ 0x40041DA6) Timer status register mn </i>
//    <loc> ( (unsigned short)((TM40_TSR03 >> 0) & 0xFFFF) ) </loc>
//    <item> SFDITEM_FIELD__TM40_TSR03_OVF </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: TM40_TE0  --------------------------------
// SVD Line: 6466

unsigned short TM40_TE0 __AT (0x40041DB0);



// --------------------------------  Field Item: TM40_TE0_TE00  -----------------------------------
// SVD Line: 6475

//  <item> SFDITEM_FIELD__TM40_TE0_TE00
//    <name> TE00 </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x40041DB0) Indication of operation enable/stop status of channel 0 </i>
//    <check> 
//      <loc> ( (unsigned short) TM40_TE0 ) </loc>
//      <o.0..0> TE00
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TM40_TE0_TE01  -----------------------------------
// SVD Line: 6481

//  <item> SFDITEM_FIELD__TM40_TE0_TE01
//    <name> TE01 </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x40041DB0) Indication of operation enable/stop status of channel 1 </i>
//    <check> 
//      <loc> ( (unsigned short) TM40_TE0 ) </loc>
//      <o.1..1> TE01
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TM40_TE0_TE02  -----------------------------------
// SVD Line: 6487

//  <item> SFDITEM_FIELD__TM40_TE0_TE02
//    <name> TE02 </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x40041DB0) Indication of operation enable/stop status of channel 2 </i>
//    <check> 
//      <loc> ( (unsigned short) TM40_TE0 ) </loc>
//      <o.2..2> TE02
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TM40_TE0_TE03  -----------------------------------
// SVD Line: 6493

//  <item> SFDITEM_FIELD__TM40_TE0_TE03
//    <name> TE03 </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x40041DB0) Indication of operation enable/stop status of channel 3 </i>
//    <check> 
//      <loc> ( (unsigned short) TM40_TE0 ) </loc>
//      <o.3..3> TE03
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TM40_TE0_TEH01  -----------------------------------
// SVD Line: 6499

//  <item> SFDITEM_FIELD__TM40_TE0_TEH01
//    <name> TEH01 </name>
//    <r> 
//    <i> [Bit 9] RO (@ 0x40041DB0) Indication of whether operation of the higher 8-bit timer is enabled or stopped when channel 1 is in the 8-bit timer mode </i>
//    <check> 
//      <loc> ( (unsigned short) TM40_TE0 ) </loc>
//      <o.9..9> TEH01
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TM40_TE0_TEH03  -----------------------------------
// SVD Line: 6505

//  <item> SFDITEM_FIELD__TM40_TE0_TEH03
//    <name> TEH03 </name>
//    <r> 
//    <i> [Bit 11] RO (@ 0x40041DB0) Indication of whether operation of the higher 8-bit timer is enabled or stopped when channel 3 is in the 8-bit timer mode </i>
//    <check> 
//      <loc> ( (unsigned short) TM40_TE0 ) </loc>
//      <o.11..11> TEH03
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: TM40_TE0  ------------------------------------
// SVD Line: 6466

//  <rtree> SFDITEM_REG__TM40_TE0
//    <name> TE0 </name>
//    <r> 
//    <i> [Bits 15..0] RO (@ 0x40041DB0) Timer channel enable status register m </i>
//    <loc> ( (unsigned short)((TM40_TE0 >> 0) & 0xFFFF) ) </loc>
//    <item> SFDITEM_FIELD__TM40_TE0_TE00 </item>
//    <item> SFDITEM_FIELD__TM40_TE0_TE01 </item>
//    <item> SFDITEM_FIELD__TM40_TE0_TE02 </item>
//    <item> SFDITEM_FIELD__TM40_TE0_TE03 </item>
//    <item> SFDITEM_FIELD__TM40_TE0_TEH01 </item>
//    <item> SFDITEM_FIELD__TM40_TE0_TEH03 </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: TM40_TS0  --------------------------------
// SVD Line: 6513

unsigned short TM40_TS0 __AT (0x40041DB2);



// --------------------------------  Field Item: TM40_TS0_TS00  -----------------------------------
// SVD Line: 6522

//  <item> SFDITEM_FIELD__TM40_TS0_TS00
//    <name> TS00 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40041DB2) Operation enable (start) trigger of channel 0 </i>
//    <check> 
//      <loc> ( (unsigned short) TM40_TS0 ) </loc>
//      <o.0..0> TS00
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TM40_TS0_TS01  -----------------------------------
// SVD Line: 6528

//  <item> SFDITEM_FIELD__TM40_TS0_TS01
//    <name> TS01 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40041DB2) Operation enable (start) trigger of channel 1 </i>
//    <check> 
//      <loc> ( (unsigned short) TM40_TS0 ) </loc>
//      <o.1..1> TS01
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TM40_TS0_TS02  -----------------------------------
// SVD Line: 6534

//  <item> SFDITEM_FIELD__TM40_TS0_TS02
//    <name> TS02 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40041DB2) Operation enable (start) trigger of channel 2 </i>
//    <check> 
//      <loc> ( (unsigned short) TM40_TS0 ) </loc>
//      <o.2..2> TS02
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TM40_TS0_TS03  -----------------------------------
// SVD Line: 6540

//  <item> SFDITEM_FIELD__TM40_TS0_TS03
//    <name> TS03 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40041DB2) Operation enable (start) trigger of channel 3 </i>
//    <check> 
//      <loc> ( (unsigned short) TM40_TS0 ) </loc>
//      <o.3..3> TS03
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TM40_TS0_TSH01  -----------------------------------
// SVD Line: 6546

//  <item> SFDITEM_FIELD__TM40_TS0_TSH01
//    <name> TSH01 </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40041DB2) Trigger to enable operation (start operation) of the higher 8-bit timer when channel 1 is in the 8-bit timer mode </i>
//    <check> 
//      <loc> ( (unsigned short) TM40_TS0 ) </loc>
//      <o.9..9> TSH01
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TM40_TS0_TSH03  -----------------------------------
// SVD Line: 6552

//  <item> SFDITEM_FIELD__TM40_TS0_TSH03
//    <name> TSH03 </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40041DB2) Trigger to enable operation (start operation) of the higher 8-bit timer when channel 3 is in the 8-bit timer mode </i>
//    <check> 
//      <loc> ( (unsigned short) TM40_TS0 ) </loc>
//      <o.11..11> TSH03
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: TM40_TS0  ------------------------------------
// SVD Line: 6513

//  <rtree> SFDITEM_REG__TM40_TS0
//    <name> TS0 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40041DB2) Timer channel start register 0 </i>
//    <loc> ( (unsigned short)((TM40_TS0 >> 0) & 0xFFFF), ((TM40_TS0 = (TM40_TS0 & ~(0xA0FUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xA0F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TM40_TS0_TS00 </item>
//    <item> SFDITEM_FIELD__TM40_TS0_TS01 </item>
//    <item> SFDITEM_FIELD__TM40_TS0_TS02 </item>
//    <item> SFDITEM_FIELD__TM40_TS0_TS03 </item>
//    <item> SFDITEM_FIELD__TM40_TS0_TSH01 </item>
//    <item> SFDITEM_FIELD__TM40_TS0_TSH03 </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: TM40_TT0  --------------------------------
// SVD Line: 6560

unsigned short TM40_TT0 __AT (0x40041DB4);



// --------------------------------  Field Item: TM40_TT0_TT00  -----------------------------------
// SVD Line: 6569

//  <item> SFDITEM_FIELD__TM40_TT0_TT00
//    <name> TT00 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40041DB4) Operation stop trigger of channel 0 </i>
//    <check> 
//      <loc> ( (unsigned short) TM40_TT0 ) </loc>
//      <o.0..0> TT00
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TM40_TT0_TT01  -----------------------------------
// SVD Line: 6575

//  <item> SFDITEM_FIELD__TM40_TT0_TT01
//    <name> TT01 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40041DB4) Operation stop trigger of channel 1 </i>
//    <check> 
//      <loc> ( (unsigned short) TM40_TT0 ) </loc>
//      <o.1..1> TT01
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TM40_TT0_TT02  -----------------------------------
// SVD Line: 6581

//  <item> SFDITEM_FIELD__TM40_TT0_TT02
//    <name> TT02 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40041DB4) Operation stop trigger of channel 2 </i>
//    <check> 
//      <loc> ( (unsigned short) TM40_TT0 ) </loc>
//      <o.2..2> TT02
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TM40_TT0_TT03  -----------------------------------
// SVD Line: 6587

//  <item> SFDITEM_FIELD__TM40_TT0_TT03
//    <name> TT03 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40041DB4) Operation stop trigger of channel 3 </i>
//    <check> 
//      <loc> ( (unsigned short) TM40_TT0 ) </loc>
//      <o.3..3> TT03
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TM40_TT0_TTH01  -----------------------------------
// SVD Line: 6593

//  <item> SFDITEM_FIELD__TM40_TT0_TTH01
//    <name> TTH01 </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40041DB4) Trigger to stop operation of the higher 8-bit timer when channel 1 is in the 8-bit timer mode </i>
//    <check> 
//      <loc> ( (unsigned short) TM40_TT0 ) </loc>
//      <o.9..9> TTH01
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TM40_TT0_TTH03  -----------------------------------
// SVD Line: 6599

//  <item> SFDITEM_FIELD__TM40_TT0_TTH03
//    <name> TTH03 </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40041DB4) Trigger to stop operation of the higher 8-bit timer when channel 3 is in the 8-bit timer mode </i>
//    <check> 
//      <loc> ( (unsigned short) TM40_TT0 ) </loc>
//      <o.11..11> TTH03
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: TM40_TT0  ------------------------------------
// SVD Line: 6560

//  <rtree> SFDITEM_REG__TM40_TT0
//    <name> TT0 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40041DB4) Timer channel stop register 0 </i>
//    <loc> ( (unsigned short)((TM40_TT0 >> 0) & 0xFFFF), ((TM40_TT0 = (TM40_TT0 & ~(0xA0FUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xA0F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TM40_TT0_TT00 </item>
//    <item> SFDITEM_FIELD__TM40_TT0_TT01 </item>
//    <item> SFDITEM_FIELD__TM40_TT0_TT02 </item>
//    <item> SFDITEM_FIELD__TM40_TT0_TT03 </item>
//    <item> SFDITEM_FIELD__TM40_TT0_TTH01 </item>
//    <item> SFDITEM_FIELD__TM40_TT0_TTH03 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TM40_TPS0  --------------------------------
// SVD Line: 6607

unsigned short TM40_TPS0 __AT (0x40041DB6);



// -------------------------------  Field Item: TM40_TPS0_PRS00  ----------------------------------
// SVD Line: 6616

//  <item> SFDITEM_FIELD__TM40_TPS0_PRS00
//    <name> PRS00 </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40041DB6) Prescaler 0 </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM40_TPS0 >> 0) & 0xF), ((TM40_TPS0 = (TM40_TPS0 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TM40_TPS0_PRS01  ----------------------------------
// SVD Line: 6622

//  <item> SFDITEM_FIELD__TM40_TPS0_PRS01
//    <name> PRS01 </name>
//    <rw> 
//    <i> [Bits 7..4] RW (@ 0x40041DB6) Prescaler 1 </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM40_TPS0 >> 4) & 0xF), ((TM40_TPS0 = (TM40_TPS0 & ~(0xFUL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TM40_TPS0_PRS02  ----------------------------------
// SVD Line: 6628

//  <item> SFDITEM_FIELD__TM40_TPS0_PRS02
//    <name> PRS02 </name>
//    <rw> 
//    <i> [Bits 9..8] RW (@ 0x40041DB6) Prescaler 2 </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM40_TPS0 >> 8) & 0x3), ((TM40_TPS0 = (TM40_TPS0 & ~(0x3UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TM40_TPS0_PRS03  ----------------------------------
// SVD Line: 6634

//  <item> SFDITEM_FIELD__TM40_TPS0_PRS03
//    <name> PRS03 </name>
//    <rw> 
//    <i> [Bits 13..12] RW (@ 0x40041DB6) Prescaler 3 </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM40_TPS0 >> 12) & 0x3), ((TM40_TPS0 = (TM40_TPS0 & ~(0x3UL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: TM40_TPS0  -----------------------------------
// SVD Line: 6607

//  <rtree> SFDITEM_REG__TM40_TPS0
//    <name> TPS0 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40041DB6) Timer clock select register 0 </i>
//    <loc> ( (unsigned short)((TM40_TPS0 >> 0) & 0xFFFF), ((TM40_TPS0 = (TM40_TPS0 & ~(0x33FFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x33FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TM40_TPS0_PRS00 </item>
//    <item> SFDITEM_FIELD__TM40_TPS0_PRS01 </item>
//    <item> SFDITEM_FIELD__TM40_TPS0_PRS02 </item>
//    <item> SFDITEM_FIELD__TM40_TPS0_PRS03 </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: TM40_TO0  --------------------------------
// SVD Line: 6642

unsigned short TM40_TO0 __AT (0x40041DB8);



// --------------------------------  Field Item: TM40_TO0_TO00  -----------------------------------
// SVD Line: 6651

//  <item> SFDITEM_FIELD__TM40_TO0_TO00
//    <name> TO00 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40041DB8) Timer output of channel 0 </i>
//    <check> 
//      <loc> ( (unsigned short) TM40_TO0 ) </loc>
//      <o.0..0> TO00
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TM40_TO0_TO01  -----------------------------------
// SVD Line: 6657

//  <item> SFDITEM_FIELD__TM40_TO0_TO01
//    <name> TO01 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40041DB8) Timer output of channel 1 </i>
//    <check> 
//      <loc> ( (unsigned short) TM40_TO0 ) </loc>
//      <o.1..1> TO01
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TM40_TO0_TO02  -----------------------------------
// SVD Line: 6663

//  <item> SFDITEM_FIELD__TM40_TO0_TO02
//    <name> TO02 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40041DB8) Timer output of channel 2 </i>
//    <check> 
//      <loc> ( (unsigned short) TM40_TO0 ) </loc>
//      <o.2..2> TO02
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TM40_TO0_TO03  -----------------------------------
// SVD Line: 6669

//  <item> SFDITEM_FIELD__TM40_TO0_TO03
//    <name> TO03 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40041DB8) Timer output of channel 3 </i>
//    <check> 
//      <loc> ( (unsigned short) TM40_TO0 ) </loc>
//      <o.3..3> TO03
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: TM40_TO0  ------------------------------------
// SVD Line: 6642

//  <rtree> SFDITEM_REG__TM40_TO0
//    <name> TO0 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40041DB8) Timer output register 0 </i>
//    <loc> ( (unsigned short)((TM40_TO0 >> 0) & 0xFFFF), ((TM40_TO0 = (TM40_TO0 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TM40_TO0_TO00 </item>
//    <item> SFDITEM_FIELD__TM40_TO0_TO01 </item>
//    <item> SFDITEM_FIELD__TM40_TO0_TO02 </item>
//    <item> SFDITEM_FIELD__TM40_TO0_TO03 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TM40_TOE0  --------------------------------
// SVD Line: 6677

unsigned short TM40_TOE0 __AT (0x40041DBA);



// -------------------------------  Field Item: TM40_TOE0_TOE00  ----------------------------------
// SVD Line: 6686

//  <item> SFDITEM_FIELD__TM40_TOE0_TOE00
//    <name> TOE00 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40041DBA) Timer output enable of channel 0 </i>
//    <check> 
//      <loc> ( (unsigned short) TM40_TOE0 ) </loc>
//      <o.0..0> TOE00
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TM40_TOE0_TOE01  ----------------------------------
// SVD Line: 6692

//  <item> SFDITEM_FIELD__TM40_TOE0_TOE01
//    <name> TOE01 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40041DBA) Timer output enable of channel 1 </i>
//    <check> 
//      <loc> ( (unsigned short) TM40_TOE0 ) </loc>
//      <o.1..1> TOE01
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TM40_TOE0_TOE02  ----------------------------------
// SVD Line: 6698

//  <item> SFDITEM_FIELD__TM40_TOE0_TOE02
//    <name> TOE02 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40041DBA) Timer output enable of channel 2 </i>
//    <check> 
//      <loc> ( (unsigned short) TM40_TOE0 ) </loc>
//      <o.2..2> TOE02
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TM40_TOE0_TOE03  ----------------------------------
// SVD Line: 6704

//  <item> SFDITEM_FIELD__TM40_TOE0_TOE03
//    <name> TOE03 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40041DBA) Timer output enable of channel 3 </i>
//    <check> 
//      <loc> ( (unsigned short) TM40_TOE0 ) </loc>
//      <o.3..3> TOE03
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: TM40_TOE0  -----------------------------------
// SVD Line: 6677

//  <rtree> SFDITEM_REG__TM40_TOE0
//    <name> TOE0 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40041DBA) Timer output enable register 0 </i>
//    <loc> ( (unsigned short)((TM40_TOE0 >> 0) & 0xFFFF), ((TM40_TOE0 = (TM40_TOE0 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TM40_TOE0_TOE00 </item>
//    <item> SFDITEM_FIELD__TM40_TOE0_TOE01 </item>
//    <item> SFDITEM_FIELD__TM40_TOE0_TOE02 </item>
//    <item> SFDITEM_FIELD__TM40_TOE0_TOE03 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TM40_TOL0  --------------------------------
// SVD Line: 6712

unsigned short TM40_TOL0 __AT (0x40041DBC);



// -------------------------------  Field Item: TM40_TOL0_TOL01  ----------------------------------
// SVD Line: 6721

//  <item> SFDITEM_FIELD__TM40_TOL0_TOL01
//    <name> TOL01 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40041DBC) Control of timer output level of channel 1 </i>
//    <check> 
//      <loc> ( (unsigned short) TM40_TOL0 ) </loc>
//      <o.1..1> TOL01
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TM40_TOL0_TOL02  ----------------------------------
// SVD Line: 6727

//  <item> SFDITEM_FIELD__TM40_TOL0_TOL02
//    <name> TOL02 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40041DBC) Control of timer output level of channel 2 </i>
//    <check> 
//      <loc> ( (unsigned short) TM40_TOL0 ) </loc>
//      <o.2..2> TOL02
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TM40_TOL0_TOL03  ----------------------------------
// SVD Line: 6733

//  <item> SFDITEM_FIELD__TM40_TOL0_TOL03
//    <name> TOL03 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40041DBC) Control of timer output level of channel 3 </i>
//    <check> 
//      <loc> ( (unsigned short) TM40_TOL0 ) </loc>
//      <o.3..3> TOL03
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: TM40_TOL0  -----------------------------------
// SVD Line: 6712

//  <rtree> SFDITEM_REG__TM40_TOL0
//    <name> TOL0 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40041DBC) Timer output level register 0 </i>
//    <loc> ( (unsigned short)((TM40_TOL0 >> 0) & 0xFFFF), ((TM40_TOL0 = (TM40_TOL0 & ~(0xEUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xE) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TM40_TOL0_TOL01 </item>
//    <item> SFDITEM_FIELD__TM40_TOL0_TOL02 </item>
//    <item> SFDITEM_FIELD__TM40_TOL0_TOL03 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TM40_TOM0  --------------------------------
// SVD Line: 6741

unsigned short TM40_TOM0 __AT (0x40041DBE);



// -------------------------------  Field Item: TM40_TOM0_TOM01  ----------------------------------
// SVD Line: 6750

//  <item> SFDITEM_FIELD__TM40_TOM0_TOM01
//    <name> TOM01 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40041DBE) Control of timer output mode of channel 1 </i>
//    <check> 
//      <loc> ( (unsigned short) TM40_TOM0 ) </loc>
//      <o.1..1> TOM01
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TM40_TOM0_TOM02  ----------------------------------
// SVD Line: 6756

//  <item> SFDITEM_FIELD__TM40_TOM0_TOM02
//    <name> TOM02 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40041DBE) Control of timer output mode of channel 2 </i>
//    <check> 
//      <loc> ( (unsigned short) TM40_TOM0 ) </loc>
//      <o.2..2> TOM02
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TM40_TOM0_TOM03  ----------------------------------
// SVD Line: 6762

//  <item> SFDITEM_FIELD__TM40_TOM0_TOM03
//    <name> TOM03 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40041DBE) Control of timer output mode of channel 3 </i>
//    <check> 
//      <loc> ( (unsigned short) TM40_TOM0 ) </loc>
//      <o.3..3> TOM03
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: TM40_TOM0  -----------------------------------
// SVD Line: 6741

//  <rtree> SFDITEM_REG__TM40_TOM0
//    <name> TOM0 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40041DBE) Timer output mode register 0 </i>
//    <loc> ( (unsigned short)((TM40_TOM0 >> 0) & 0xFFFF), ((TM40_TOM0 = (TM40_TOM0 & ~(0xEUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xE) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TM40_TOM0_TOM01 </item>
//    <item> SFDITEM_FIELD__TM40_TOM0_TOM02 </item>
//    <item> SFDITEM_FIELD__TM40_TOM0_TOM03 </item>
//  </rtree>
//  


// -----------------------  Register Item Address: TM40_TDR0_TDR0_TDR00  --------------------------
// SVD Line: 6770

unsigned short TM40_TDR0_TDR0_TDR00 __AT (0x40041F18);



// ---------------------------  Register Item: TM40_TDR0_TDR0_TDR00  ------------------------------
// SVD Line: 6770

//  <item> SFDITEM_REG__TM40_TDR0_TDR0_TDR00
//    <name> TDR00 </name>
//    <i> [Bits 15..0] RW (@ 0x40041F18) Timer data register 00 </i>
//    <edit> 
//      <loc> ( (unsigned short)((TM40_TDR0_TDR0_TDR00 >> 0) & 0xFFFFFFFF), ((TM40_TDR0_TDR0_TDR00 = (TM40_TDR0_TDR0_TDR00 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: TM40_TDR0_TDR0_TDR01  --------------------------
// SVD Line: 6770

unsigned short TM40_TDR0_TDR0_TDR01 __AT (0x40041F1A);



// ---------------------------  Register Item: TM40_TDR0_TDR0_TDR01  ------------------------------
// SVD Line: 6770

//  <item> SFDITEM_REG__TM40_TDR0_TDR0_TDR01
//    <name> TDR01 </name>
//    <i> [Bits 15..0] RW (@ 0x40041F1A) Timer data register 01 </i>
//    <edit> 
//      <loc> ( (unsigned short)((TM40_TDR0_TDR0_TDR01 >> 0) & 0xFFFFFFFF), ((TM40_TDR0_TDR0_TDR01 = (TM40_TDR0_TDR0_TDR01 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: TM40_TDR0_TDR0_TDR02  --------------------------
// SVD Line: 6782

unsigned short TM40_TDR0_TDR0_TDR02 __AT (0x40041F64);



// ---------------------------  Register Item: TM40_TDR0_TDR0_TDR02  ------------------------------
// SVD Line: 6782

//  <item> SFDITEM_REG__TM40_TDR0_TDR0_TDR02
//    <name> TDR02 </name>
//    <i> [Bits 15..0] RW (@ 0x40041F64) Timer data register 02 </i>
//    <edit> 
//      <loc> ( (unsigned short)((TM40_TDR0_TDR0_TDR02 >> 0) & 0xFFFFFFFF), ((TM40_TDR0_TDR0_TDR02 = (TM40_TDR0_TDR0_TDR02 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: TM40_TDR0_TDR0_TDR03  --------------------------
// SVD Line: 6782

unsigned short TM40_TDR0_TDR0_TDR03 __AT (0x40041F66);



// ---------------------------  Register Item: TM40_TDR0_TDR0_TDR03  ------------------------------
// SVD Line: 6782

//  <item> SFDITEM_REG__TM40_TDR0_TDR0_TDR03
//    <name> TDR03 </name>
//    <i> [Bits 15..0] RW (@ 0x40041F66) Timer data register 03 </i>
//    <edit> 
//      <loc> ( (unsigned short)((TM40_TDR0_TDR0_TDR03 >> 0) & 0xFFFFFFFF), ((TM40_TDR0_TDR0_TDR03 = (TM40_TDR0_TDR0_TDR03 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: TM40_TDR01L  -------------------------------
// SVD Line: 6794

unsigned char TM40_TDR01L __AT (0x40041F1A);



// -------------------------------  Register Item: TM40_TDR01L  -----------------------------------
// SVD Line: 6794

//  <item> SFDITEM_REG__TM40_TDR01L
//    <name> TDR01L </name>
//    <i> [Bits 7..0] RW (@ 0x40041F1A) Timer data lower register 01 </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM40_TDR01L >> 0) & 0xFFFFFFFF), ((TM40_TDR01L = (TM40_TDR01L & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: TM40_TDR01H  -------------------------------
// SVD Line: 6802

unsigned char TM40_TDR01H __AT (0x40041F1B);



// -------------------------------  Register Item: TM40_TDR01H  -----------------------------------
// SVD Line: 6802

//  <item> SFDITEM_REG__TM40_TDR01H
//    <name> TDR01H </name>
//    <i> [Bits 7..0] RW (@ 0x40041F1B) Timer data higher register 01 </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM40_TDR01H >> 0) & 0xFFFFFFFF), ((TM40_TDR01H = (TM40_TDR01H & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: TM40_TDR03L  -------------------------------
// SVD Line: 6810

unsigned char TM40_TDR03L __AT (0x40041F66);



// -------------------------------  Register Item: TM40_TDR03L  -----------------------------------
// SVD Line: 6810

//  <item> SFDITEM_REG__TM40_TDR03L
//    <name> TDR03L </name>
//    <i> [Bits 7..0] RW (@ 0x40041F66) Timer data lower register 03 </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM40_TDR03L >> 0) & 0xFFFFFFFF), ((TM40_TDR03L = (TM40_TDR03L & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: TM40_TDR03H  -------------------------------
// SVD Line: 6818

unsigned char TM40_TDR03H __AT (0x40041F67);



// -------------------------------  Register Item: TM40_TDR03H  -----------------------------------
// SVD Line: 6818

//  <item> SFDITEM_REG__TM40_TDR03H
//    <name> TDR03H </name>
//    <i> [Bits 7..0] RW (@ 0x40041F67) Timer data higher register 03 </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM40_TDR03H >> 0) & 0xFFFFFFFF), ((TM40_TDR03H = (TM40_TDR03H & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------------  Peripheral View: TM40  -------------------------------------
// SVD Line: 6159

//  <view> TM40
//    <name> TM40 </name>
//    <item> SFDITEM_REG__TM40_TCR0_TCR0_TCR00 </item>
//    <item> SFDITEM_REG__TM40_TCR0_TCR0_TCR01 </item>
//    <item> SFDITEM_REG__TM40_TCR0_TCR0_TCR02 </item>
//    <item> SFDITEM_REG__TM40_TCR0_TCR0_TCR03 </item>
//    <item> SFDITEM_REG__TM40_TMR00 </item>
//    <item> SFDITEM_REG__TM40_TMR01 </item>
//    <item> SFDITEM_REG__TM40_TMR02 </item>
//    <item> SFDITEM_REG__TM40_TMR03 </item>
//    <item> SFDITEM_REG__TM40_TSR00 </item>
//    <item> SFDITEM_REG__TM40_TSR01 </item>
//    <item> SFDITEM_REG__TM40_TSR02 </item>
//    <item> SFDITEM_REG__TM40_TSR03 </item>
//    <item> SFDITEM_REG__TM40_TE0 </item>
//    <item> SFDITEM_REG__TM40_TS0 </item>
//    <item> SFDITEM_REG__TM40_TT0 </item>
//    <item> SFDITEM_REG__TM40_TPS0 </item>
//    <item> SFDITEM_REG__TM40_TO0 </item>
//    <item> SFDITEM_REG__TM40_TOE0 </item>
//    <item> SFDITEM_REG__TM40_TOL0 </item>
//    <item> SFDITEM_REG__TM40_TOM0 </item>
//    <item> SFDITEM_REG__TM40_TDR0_TDR0_TDR00 </item>
//    <item> SFDITEM_REG__TM40_TDR0_TDR0_TDR01 </item>
//    <item> SFDITEM_REG__TM40_TDR0_TDR0_TDR02 </item>
//    <item> SFDITEM_REG__TM40_TDR0_TDR0_TDR03 </item>
//    <item> SFDITEM_REG__TM40_TDR01L </item>
//    <item> SFDITEM_REG__TM40_TDR01H </item>
//    <item> SFDITEM_REG__TM40_TDR03L </item>
//    <item> SFDITEM_REG__TM40_TDR03H </item>
//  </view>
//  


// -----------------------  Register Item Address: TM41_TCR1_TCR1_TCR10  --------------------------
// SVD Line: 6870

unsigned short TM41_TCR1_TCR1_TCR10 __AT (0x40042180);



// ---------------------------  Register Item: TM41_TCR1_TCR1_TCR10  ------------------------------
// SVD Line: 6870

//  <item> SFDITEM_REG__TM41_TCR1_TCR1_TCR10
//    <name> TCR10 </name>
//    <i> [Bits 15..0] RO (@ 0x40042180) Timer count register 00 </i>
//    <edit> 
//      <loc> ( (unsigned short)((TM41_TCR1_TCR1_TCR10 >> 0) & 0xFFFFFFFF), ((TM41_TCR1_TCR1_TCR10 = (TM41_TCR1_TCR1_TCR10 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: TM41_TCR1_TCR1_TCR11  --------------------------
// SVD Line: 6870

unsigned short TM41_TCR1_TCR1_TCR11 __AT (0x40042182);



// ---------------------------  Register Item: TM41_TCR1_TCR1_TCR11  ------------------------------
// SVD Line: 6870

//  <item> SFDITEM_REG__TM41_TCR1_TCR1_TCR11
//    <name> TCR11 </name>
//    <i> [Bits 15..0] RO (@ 0x40042182) Timer count register 01 </i>
//    <edit> 
//      <loc> ( (unsigned short)((TM41_TCR1_TCR1_TCR11 >> 0) & 0xFFFFFFFF), ((TM41_TCR1_TCR1_TCR11 = (TM41_TCR1_TCR1_TCR11 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: TM41_TCR1_TCR1_TCR12  --------------------------
// SVD Line: 6870

unsigned short TM41_TCR1_TCR1_TCR12 __AT (0x40042184);



// ---------------------------  Register Item: TM41_TCR1_TCR1_TCR12  ------------------------------
// SVD Line: 6870

//  <item> SFDITEM_REG__TM41_TCR1_TCR1_TCR12
//    <name> TCR12 </name>
//    <i> [Bits 15..0] RO (@ 0x40042184) Timer count register 02 </i>
//    <edit> 
//      <loc> ( (unsigned short)((TM41_TCR1_TCR1_TCR12 >> 0) & 0xFFFFFFFF), ((TM41_TCR1_TCR1_TCR12 = (TM41_TCR1_TCR1_TCR12 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: TM41_TCR1_TCR1_TCR13  --------------------------
// SVD Line: 6870

unsigned short TM41_TCR1_TCR1_TCR13 __AT (0x40042186);



// ---------------------------  Register Item: TM41_TCR1_TCR1_TCR13  ------------------------------
// SVD Line: 6870

//  <item> SFDITEM_REG__TM41_TCR1_TCR1_TCR13
//    <name> TCR13 </name>
//    <i> [Bits 15..0] RO (@ 0x40042186) Timer count register 03 </i>
//    <edit> 
//      <loc> ( (unsigned short)((TM41_TCR1_TCR1_TCR13 >> 0) & 0xFFFFFFFF), ((TM41_TCR1_TCR1_TCR13 = (TM41_TCR1_TCR1_TCR13 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: TM41_TMR10  -------------------------------
// SVD Line: 6882

unsigned short TM41_TMR10 __AT (0x40042190);



// --------------------------------  Field Item: TM41_TMR10_MD  -----------------------------------
// SVD Line: 6891

//  <item> SFDITEM_FIELD__TM41_TMR10_MD
//    <name> MD </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40042190) Operation mode of channel n </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM41_TMR10 >> 0) & 0xF), ((TM41_TMR10 = (TM41_TMR10 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TM41_TMR10_CIS  -----------------------------------
// SVD Line: 6898

//  <item> SFDITEM_FIELD__TM41_TMR10_CIS
//    <name> CIS </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x40042190) Selection of TImn pin input valid edge </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM41_TMR10 >> 6) & 0x3), ((TM41_TMR10 = (TM41_TMR10 & ~(0x3UL << 6 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 6 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TM41_TMR10_STS  -----------------------------------
// SVD Line: 6905

//  <item> SFDITEM_FIELD__TM41_TMR10_STS
//    <name> STS </name>
//    <rw> 
//    <i> [Bits 10..8] RW (@ 0x40042190) Setting of start trigger or capture trigger of channel n </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM41_TMR10 >> 8) & 0x7), ((TM41_TMR10 = (TM41_TMR10 & ~(0x7UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TM41_TMR10_CCS  -----------------------------------
// SVD Line: 6912

//  <item> SFDITEM_FIELD__TM41_TMR10_CCS
//    <name> CCS </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x40042190) Selection of count clock (fTCLK) of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) TM41_TMR10 ) </loc>
//      <o.12..12> CCS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TM41_TMR10_CKS  -----------------------------------
// SVD Line: 6919

//  <item> SFDITEM_FIELD__TM41_TMR10_CKS
//    <name> CKS </name>
//    <rw> 
//    <i> [Bits 15..14] RW (@ 0x40042190) Selection of operation clock (fMCK) of channel n </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM41_TMR10 >> 14) & 0x3), ((TM41_TMR10 = (TM41_TMR10 & ~(0x3UL << 14 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 14 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: TM41_TMR10  -----------------------------------
// SVD Line: 6882

//  <rtree> SFDITEM_REG__TM41_TMR10
//    <name> TMR10 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40042190) Timer mode register mn </i>
//    <loc> ( (unsigned short)((TM41_TMR10 >> 0) & 0xFFFF), ((TM41_TMR10 = (TM41_TMR10 & ~(0xD7CFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xD7CF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TM41_TMR10_MD </item>
//    <item> SFDITEM_FIELD__TM41_TMR10_CIS </item>
//    <item> SFDITEM_FIELD__TM41_TMR10_STS </item>
//    <item> SFDITEM_FIELD__TM41_TMR10_CCS </item>
//    <item> SFDITEM_FIELD__TM41_TMR10_CKS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TM41_TMR11  -------------------------------
// SVD Line: 6928

unsigned short TM41_TMR11 __AT (0x40042192);



// --------------------------------  Field Item: TM41_TMR11_MD  -----------------------------------
// SVD Line: 6937

//  <item> SFDITEM_FIELD__TM41_TMR11_MD
//    <name> MD </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40042192) Operation mode of channel n </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM41_TMR11 >> 0) & 0xF), ((TM41_TMR11 = (TM41_TMR11 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TM41_TMR11_CIS  -----------------------------------
// SVD Line: 6944

//  <item> SFDITEM_FIELD__TM41_TMR11_CIS
//    <name> CIS </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x40042192) Selection of TImn pin input valid edge </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM41_TMR11 >> 6) & 0x3), ((TM41_TMR11 = (TM41_TMR11 & ~(0x3UL << 6 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 6 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TM41_TMR11_STS  -----------------------------------
// SVD Line: 6951

//  <item> SFDITEM_FIELD__TM41_TMR11_STS
//    <name> STS </name>
//    <rw> 
//    <i> [Bits 10..8] RW (@ 0x40042192) Setting of start trigger or capture trigger of channel n </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM41_TMR11 >> 8) & 0x7), ((TM41_TMR11 = (TM41_TMR11 & ~(0x7UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: TM41_TMR11_SPLIT  ----------------------------------
// SVD Line: 6958

//  <item> SFDITEM_FIELD__TM41_TMR11_SPLIT
//    <name> SPLIT </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40042192) Selection of 8 or 16-bit timer operation for channels 1 and 3 </i>
//    <check> 
//      <loc> ( (unsigned short) TM41_TMR11 ) </loc>
//      <o.11..11> SPLIT
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TM41_TMR11_CCS  -----------------------------------
// SVD Line: 6965

//  <item> SFDITEM_FIELD__TM41_TMR11_CCS
//    <name> CCS </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x40042192) Selection of count clock (fTCLK) of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) TM41_TMR11 ) </loc>
//      <o.12..12> CCS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TM41_TMR11_CKS  -----------------------------------
// SVD Line: 6972

//  <item> SFDITEM_FIELD__TM41_TMR11_CKS
//    <name> CKS </name>
//    <rw> 
//    <i> [Bits 15..14] RW (@ 0x40042192) Selection of operation clock (fMCK) of channel n </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM41_TMR11 >> 14) & 0x3), ((TM41_TMR11 = (TM41_TMR11 & ~(0x3UL << 14 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 14 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: TM41_TMR11  -----------------------------------
// SVD Line: 6928

//  <rtree> SFDITEM_REG__TM41_TMR11
//    <name> TMR11 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40042192) Timer mode register mn </i>
//    <loc> ( (unsigned short)((TM41_TMR11 >> 0) & 0xFFFF), ((TM41_TMR11 = (TM41_TMR11 & ~(0xDFCFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xDFCF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TM41_TMR11_MD </item>
//    <item> SFDITEM_FIELD__TM41_TMR11_CIS </item>
//    <item> SFDITEM_FIELD__TM41_TMR11_STS </item>
//    <item> SFDITEM_FIELD__TM41_TMR11_SPLIT </item>
//    <item> SFDITEM_FIELD__TM41_TMR11_CCS </item>
//    <item> SFDITEM_FIELD__TM41_TMR11_CKS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TM41_TMR12  -------------------------------
// SVD Line: 6981

unsigned short TM41_TMR12 __AT (0x40042194);



// --------------------------------  Field Item: TM41_TMR12_MD  -----------------------------------
// SVD Line: 6990

//  <item> SFDITEM_FIELD__TM41_TMR12_MD
//    <name> MD </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40042194) Operation mode of channel n </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM41_TMR12 >> 0) & 0xF), ((TM41_TMR12 = (TM41_TMR12 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TM41_TMR12_CIS  -----------------------------------
// SVD Line: 6997

//  <item> SFDITEM_FIELD__TM41_TMR12_CIS
//    <name> CIS </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x40042194) Selection of TImn pin input valid edge </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM41_TMR12 >> 6) & 0x3), ((TM41_TMR12 = (TM41_TMR12 & ~(0x3UL << 6 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 6 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TM41_TMR12_STS  -----------------------------------
// SVD Line: 7004

//  <item> SFDITEM_FIELD__TM41_TMR12_STS
//    <name> STS </name>
//    <rw> 
//    <i> [Bits 10..8] RW (@ 0x40042194) Setting of start trigger or capture trigger of channel n </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM41_TMR12 >> 8) & 0x7), ((TM41_TMR12 = (TM41_TMR12 & ~(0x7UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: TM41_TMR12_MASTER  ---------------------------------
// SVD Line: 7011

//  <item> SFDITEM_FIELD__TM41_TMR12_MASTER
//    <name> MASTER </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40042194) Selection between using channel n independently or simultaneously with another channel (as a slave or master) </i>
//    <check> 
//      <loc> ( (unsigned short) TM41_TMR12 ) </loc>
//      <o.11..11> MASTER
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TM41_TMR12_CCS  -----------------------------------
// SVD Line: 7018

//  <item> SFDITEM_FIELD__TM41_TMR12_CCS
//    <name> CCS </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x40042194) Selection of count clock (fTCLK) of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) TM41_TMR12 ) </loc>
//      <o.12..12> CCS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TM41_TMR12_CKS  -----------------------------------
// SVD Line: 7025

//  <item> SFDITEM_FIELD__TM41_TMR12_CKS
//    <name> CKS </name>
//    <rw> 
//    <i> [Bits 15..14] RW (@ 0x40042194) Selection of operation clock (fMCK) of channel n </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM41_TMR12 >> 14) & 0x3), ((TM41_TMR12 = (TM41_TMR12 & ~(0x3UL << 14 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 14 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: TM41_TMR12  -----------------------------------
// SVD Line: 6981

//  <rtree> SFDITEM_REG__TM41_TMR12
//    <name> TMR12 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40042194) Timer mode register mn </i>
//    <loc> ( (unsigned short)((TM41_TMR12 >> 0) & 0xFFFF), ((TM41_TMR12 = (TM41_TMR12 & ~(0xDFCFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xDFCF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TM41_TMR12_MD </item>
//    <item> SFDITEM_FIELD__TM41_TMR12_CIS </item>
//    <item> SFDITEM_FIELD__TM41_TMR12_STS </item>
//    <item> SFDITEM_FIELD__TM41_TMR12_MASTER </item>
//    <item> SFDITEM_FIELD__TM41_TMR12_CCS </item>
//    <item> SFDITEM_FIELD__TM41_TMR12_CKS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TM41_TMR13  -------------------------------
// SVD Line: 7034

unsigned short TM41_TMR13 __AT (0x40042196);



// --------------------------------  Field Item: TM41_TMR13_MD  -----------------------------------
// SVD Line: 7043

//  <item> SFDITEM_FIELD__TM41_TMR13_MD
//    <name> MD </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40042196) Operation mode of channel n </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM41_TMR13 >> 0) & 0xF), ((TM41_TMR13 = (TM41_TMR13 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TM41_TMR13_CIS  -----------------------------------
// SVD Line: 7050

//  <item> SFDITEM_FIELD__TM41_TMR13_CIS
//    <name> CIS </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x40042196) Selection of TImn pin input valid edge </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM41_TMR13 >> 6) & 0x3), ((TM41_TMR13 = (TM41_TMR13 & ~(0x3UL << 6 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 6 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TM41_TMR13_STS  -----------------------------------
// SVD Line: 7057

//  <item> SFDITEM_FIELD__TM41_TMR13_STS
//    <name> STS </name>
//    <rw> 
//    <i> [Bits 10..8] RW (@ 0x40042196) Setting of start trigger or capture trigger of channel n </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM41_TMR13 >> 8) & 0x7), ((TM41_TMR13 = (TM41_TMR13 & ~(0x7UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: TM41_TMR13_SPLIT  ----------------------------------
// SVD Line: 7064

//  <item> SFDITEM_FIELD__TM41_TMR13_SPLIT
//    <name> SPLIT </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40042196) Selection of 8 or 16-bit timer operation for channels 1 and 3 </i>
//    <check> 
//      <loc> ( (unsigned short) TM41_TMR13 ) </loc>
//      <o.11..11> SPLIT
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TM41_TMR13_CCS  -----------------------------------
// SVD Line: 7071

//  <item> SFDITEM_FIELD__TM41_TMR13_CCS
//    <name> CCS </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x40042196) Selection of count clock (fTCLK) of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) TM41_TMR13 ) </loc>
//      <o.12..12> CCS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TM41_TMR13_CKS  -----------------------------------
// SVD Line: 7078

//  <item> SFDITEM_FIELD__TM41_TMR13_CKS
//    <name> CKS </name>
//    <rw> 
//    <i> [Bits 15..14] RW (@ 0x40042196) Selection of operation clock (fMCK) of channel n </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM41_TMR13 >> 14) & 0x3), ((TM41_TMR13 = (TM41_TMR13 & ~(0x3UL << 14 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 14 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: TM41_TMR13  -----------------------------------
// SVD Line: 7034

//  <rtree> SFDITEM_REG__TM41_TMR13
//    <name> TMR13 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40042196) Timer mode register mn </i>
//    <loc> ( (unsigned short)((TM41_TMR13 >> 0) & 0xFFFF), ((TM41_TMR13 = (TM41_TMR13 & ~(0xDFCFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xDFCF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TM41_TMR13_MD </item>
//    <item> SFDITEM_FIELD__TM41_TMR13_CIS </item>
//    <item> SFDITEM_FIELD__TM41_TMR13_STS </item>
//    <item> SFDITEM_FIELD__TM41_TMR13_SPLIT </item>
//    <item> SFDITEM_FIELD__TM41_TMR13_CCS </item>
//    <item> SFDITEM_FIELD__TM41_TMR13_CKS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TM41_TSR10  -------------------------------
// SVD Line: 7087

unsigned short TM41_TSR10 __AT (0x400421A0);



// -------------------------------  Field Item: TM41_TSR10_OVF  -----------------------------------
// SVD Line: 7096

//  <item> SFDITEM_FIELD__TM41_TSR10_OVF
//    <name> OVF </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x400421A0) Counter overflow status of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) TM41_TSR10 ) </loc>
//      <o.0..0> OVF
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: TM41_TSR10  -----------------------------------
// SVD Line: 7087

//  <rtree> SFDITEM_REG__TM41_TSR10
//    <name> TSR10 </name>
//    <r> 
//    <i> [Bits 15..0] RO (@ 0x400421A0) Timer status register mn </i>
//    <loc> ( (unsigned short)((TM41_TSR10 >> 0) & 0xFFFF) ) </loc>
//    <item> SFDITEM_FIELD__TM41_TSR10_OVF </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TM41_TSR11  -------------------------------
// SVD Line: 7104

unsigned short TM41_TSR11 __AT (0x400421A2);



// -------------------------------  Field Item: TM41_TSR11_OVF  -----------------------------------
// SVD Line: 7096

//  <item> SFDITEM_FIELD__TM41_TSR11_OVF
//    <name> OVF </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x400421A2) Counter overflow status of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) TM41_TSR11 ) </loc>
//      <o.0..0> OVF
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: TM41_TSR11  -----------------------------------
// SVD Line: 7104

//  <rtree> SFDITEM_REG__TM41_TSR11
//    <name> TSR11 </name>
//    <r> 
//    <i> [Bits 15..0] RO (@ 0x400421A2) Timer status register mn </i>
//    <loc> ( (unsigned short)((TM41_TSR11 >> 0) & 0xFFFF) ) </loc>
//    <item> SFDITEM_FIELD__TM41_TSR11_OVF </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TM41_TSR12  -------------------------------
// SVD Line: 7110

unsigned short TM41_TSR12 __AT (0x400421A4);



// -------------------------------  Field Item: TM41_TSR12_OVF  -----------------------------------
// SVD Line: 7096

//  <item> SFDITEM_FIELD__TM41_TSR12_OVF
//    <name> OVF </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x400421A4) Counter overflow status of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) TM41_TSR12 ) </loc>
//      <o.0..0> OVF
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: TM41_TSR12  -----------------------------------
// SVD Line: 7110

//  <rtree> SFDITEM_REG__TM41_TSR12
//    <name> TSR12 </name>
//    <r> 
//    <i> [Bits 15..0] RO (@ 0x400421A4) Timer status register mn </i>
//    <loc> ( (unsigned short)((TM41_TSR12 >> 0) & 0xFFFF) ) </loc>
//    <item> SFDITEM_FIELD__TM41_TSR12_OVF </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TM41_TSR13  -------------------------------
// SVD Line: 7116

unsigned short TM41_TSR13 __AT (0x400421A6);



// -------------------------------  Field Item: TM41_TSR13_OVF  -----------------------------------
// SVD Line: 7096

//  <item> SFDITEM_FIELD__TM41_TSR13_OVF
//    <name> OVF </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x400421A6) Counter overflow status of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) TM41_TSR13 ) </loc>
//      <o.0..0> OVF
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: TM41_TSR13  -----------------------------------
// SVD Line: 7116

//  <rtree> SFDITEM_REG__TM41_TSR13
//    <name> TSR13 </name>
//    <r> 
//    <i> [Bits 15..0] RO (@ 0x400421A6) Timer status register mn </i>
//    <loc> ( (unsigned short)((TM41_TSR13 >> 0) & 0xFFFF) ) </loc>
//    <item> SFDITEM_FIELD__TM41_TSR13_OVF </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: TM41_TE1  --------------------------------
// SVD Line: 7122

unsigned short TM41_TE1 __AT (0x400421B0);



// --------------------------------  Field Item: TM41_TE1_TE10  -----------------------------------
// SVD Line: 7131

//  <item> SFDITEM_FIELD__TM41_TE1_TE10
//    <name> TE10 </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x400421B0) Indication of operation enable/stop status of channel 0 </i>
//    <check> 
//      <loc> ( (unsigned short) TM41_TE1 ) </loc>
//      <o.0..0> TE10
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TM41_TE1_TE11  -----------------------------------
// SVD Line: 7137

//  <item> SFDITEM_FIELD__TM41_TE1_TE11
//    <name> TE11 </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x400421B0) Indication of operation enable/stop status of channel 1 </i>
//    <check> 
//      <loc> ( (unsigned short) TM41_TE1 ) </loc>
//      <o.1..1> TE11
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TM41_TE1_TE12  -----------------------------------
// SVD Line: 7143

//  <item> SFDITEM_FIELD__TM41_TE1_TE12
//    <name> TE12 </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x400421B0) Indication of operation enable/stop status of channel 2 </i>
//    <check> 
//      <loc> ( (unsigned short) TM41_TE1 ) </loc>
//      <o.2..2> TE12
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TM41_TE1_TE13  -----------------------------------
// SVD Line: 7149

//  <item> SFDITEM_FIELD__TM41_TE1_TE13
//    <name> TE13 </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x400421B0) Indication of operation enable/stop status of channel 3 </i>
//    <check> 
//      <loc> ( (unsigned short) TM41_TE1 ) </loc>
//      <o.3..3> TE13
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TM41_TE1_TEH11  -----------------------------------
// SVD Line: 7155

//  <item> SFDITEM_FIELD__TM41_TE1_TEH11
//    <name> TEH11 </name>
//    <r> 
//    <i> [Bit 9] RO (@ 0x400421B0) Indication of whether operation of the higher 8-bit timer is enabled or stopped when channel 1 is in the 8-bit timer mode </i>
//    <check> 
//      <loc> ( (unsigned short) TM41_TE1 ) </loc>
//      <o.9..9> TEH11
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TM41_TE1_TEH13  -----------------------------------
// SVD Line: 7161

//  <item> SFDITEM_FIELD__TM41_TE1_TEH13
//    <name> TEH13 </name>
//    <r> 
//    <i> [Bit 11] RO (@ 0x400421B0) Indication of whether operation of the higher 8-bit timer is enabled or stopped when channel 3 is in the 8-bit timer mode </i>
//    <check> 
//      <loc> ( (unsigned short) TM41_TE1 ) </loc>
//      <o.11..11> TEH13
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: TM41_TE1  ------------------------------------
// SVD Line: 7122

//  <rtree> SFDITEM_REG__TM41_TE1
//    <name> TE1 </name>
//    <r> 
//    <i> [Bits 15..0] RO (@ 0x400421B0) Timer channel enable status register m </i>
//    <loc> ( (unsigned short)((TM41_TE1 >> 0) & 0xFFFF) ) </loc>
//    <item> SFDITEM_FIELD__TM41_TE1_TE10 </item>
//    <item> SFDITEM_FIELD__TM41_TE1_TE11 </item>
//    <item> SFDITEM_FIELD__TM41_TE1_TE12 </item>
//    <item> SFDITEM_FIELD__TM41_TE1_TE13 </item>
//    <item> SFDITEM_FIELD__TM41_TE1_TEH11 </item>
//    <item> SFDITEM_FIELD__TM41_TE1_TEH13 </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: TM41_TS1  --------------------------------
// SVD Line: 7169

unsigned short TM41_TS1 __AT (0x400421B2);



// --------------------------------  Field Item: TM41_TS1_TS10  -----------------------------------
// SVD Line: 7178

//  <item> SFDITEM_FIELD__TM41_TS1_TS10
//    <name> TS10 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x400421B2) Operation enable (start) trigger of channel 0 </i>
//    <check> 
//      <loc> ( (unsigned short) TM41_TS1 ) </loc>
//      <o.0..0> TS10
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TM41_TS1_TS11  -----------------------------------
// SVD Line: 7184

//  <item> SFDITEM_FIELD__TM41_TS1_TS11
//    <name> TS11 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x400421B2) Operation enable (start) trigger of channel 1 </i>
//    <check> 
//      <loc> ( (unsigned short) TM41_TS1 ) </loc>
//      <o.1..1> TS11
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TM41_TS1_TS12  -----------------------------------
// SVD Line: 7190

//  <item> SFDITEM_FIELD__TM41_TS1_TS12
//    <name> TS12 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x400421B2) Operation enable (start) trigger of channel 2 </i>
//    <check> 
//      <loc> ( (unsigned short) TM41_TS1 ) </loc>
//      <o.2..2> TS12
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TM41_TS1_TS13  -----------------------------------
// SVD Line: 7196

//  <item> SFDITEM_FIELD__TM41_TS1_TS13
//    <name> TS13 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x400421B2) Operation enable (start) trigger of channel 3 </i>
//    <check> 
//      <loc> ( (unsigned short) TM41_TS1 ) </loc>
//      <o.3..3> TS13
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TM41_TS1_TSH11  -----------------------------------
// SVD Line: 7202

//  <item> SFDITEM_FIELD__TM41_TS1_TSH11
//    <name> TSH11 </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x400421B2) Trigger to enable operation (start operation) of the higher 8-bit timer when channel 1 is in the 8-bit timer mode </i>
//    <check> 
//      <loc> ( (unsigned short) TM41_TS1 ) </loc>
//      <o.9..9> TSH11
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TM41_TS1_TSH13  -----------------------------------
// SVD Line: 7208

//  <item> SFDITEM_FIELD__TM41_TS1_TSH13
//    <name> TSH13 </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x400421B2) Trigger to enable operation (start operation) of the higher 8-bit timer when channel 3 is in the 8-bit timer mode </i>
//    <check> 
//      <loc> ( (unsigned short) TM41_TS1 ) </loc>
//      <o.11..11> TSH13
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: TM41_TS1  ------------------------------------
// SVD Line: 7169

//  <rtree> SFDITEM_REG__TM41_TS1
//    <name> TS1 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x400421B2) Timer channel start register 0 </i>
//    <loc> ( (unsigned short)((TM41_TS1 >> 0) & 0xFFFF), ((TM41_TS1 = (TM41_TS1 & ~(0xA0FUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xA0F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TM41_TS1_TS10 </item>
//    <item> SFDITEM_FIELD__TM41_TS1_TS11 </item>
//    <item> SFDITEM_FIELD__TM41_TS1_TS12 </item>
//    <item> SFDITEM_FIELD__TM41_TS1_TS13 </item>
//    <item> SFDITEM_FIELD__TM41_TS1_TSH11 </item>
//    <item> SFDITEM_FIELD__TM41_TS1_TSH13 </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: TM41_TT1  --------------------------------
// SVD Line: 7216

unsigned short TM41_TT1 __AT (0x400421B4);



// --------------------------------  Field Item: TM41_TT1_TT10  -----------------------------------
// SVD Line: 7225

//  <item> SFDITEM_FIELD__TM41_TT1_TT10
//    <name> TT10 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x400421B4) Operation stop trigger of channel 0 </i>
//    <check> 
//      <loc> ( (unsigned short) TM41_TT1 ) </loc>
//      <o.0..0> TT10
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TM41_TT1_TT11  -----------------------------------
// SVD Line: 7231

//  <item> SFDITEM_FIELD__TM41_TT1_TT11
//    <name> TT11 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x400421B4) Operation stop trigger of channel 1 </i>
//    <check> 
//      <loc> ( (unsigned short) TM41_TT1 ) </loc>
//      <o.1..1> TT11
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TM41_TT1_TT12  -----------------------------------
// SVD Line: 7237

//  <item> SFDITEM_FIELD__TM41_TT1_TT12
//    <name> TT12 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x400421B4) Operation stop trigger of channel 2 </i>
//    <check> 
//      <loc> ( (unsigned short) TM41_TT1 ) </loc>
//      <o.2..2> TT12
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TM41_TT1_TT13  -----------------------------------
// SVD Line: 7243

//  <item> SFDITEM_FIELD__TM41_TT1_TT13
//    <name> TT13 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x400421B4) Operation stop trigger of channel 3 </i>
//    <check> 
//      <loc> ( (unsigned short) TM41_TT1 ) </loc>
//      <o.3..3> TT13
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TM41_TT1_TTH11  -----------------------------------
// SVD Line: 7249

//  <item> SFDITEM_FIELD__TM41_TT1_TTH11
//    <name> TTH11 </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x400421B4) Trigger to stop operation of the higher 8-bit timer when channel 1 is in the 8-bit timer mode </i>
//    <check> 
//      <loc> ( (unsigned short) TM41_TT1 ) </loc>
//      <o.9..9> TTH11
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TM41_TT1_TTH13  -----------------------------------
// SVD Line: 7255

//  <item> SFDITEM_FIELD__TM41_TT1_TTH13
//    <name> TTH13 </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x400421B4) Trigger to stop operation of the higher 8-bit timer when channel 3 is in the 8-bit timer mode </i>
//    <check> 
//      <loc> ( (unsigned short) TM41_TT1 ) </loc>
//      <o.11..11> TTH13
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: TM41_TT1  ------------------------------------
// SVD Line: 7216

//  <rtree> SFDITEM_REG__TM41_TT1
//    <name> TT1 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x400421B4) Timer channel stop register 0 </i>
//    <loc> ( (unsigned short)((TM41_TT1 >> 0) & 0xFFFF), ((TM41_TT1 = (TM41_TT1 & ~(0xA0FUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xA0F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TM41_TT1_TT10 </item>
//    <item> SFDITEM_FIELD__TM41_TT1_TT11 </item>
//    <item> SFDITEM_FIELD__TM41_TT1_TT12 </item>
//    <item> SFDITEM_FIELD__TM41_TT1_TT13 </item>
//    <item> SFDITEM_FIELD__TM41_TT1_TTH11 </item>
//    <item> SFDITEM_FIELD__TM41_TT1_TTH13 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TM41_TPS1  --------------------------------
// SVD Line: 7263

unsigned short TM41_TPS1 __AT (0x400421B6);



// -------------------------------  Field Item: TM41_TPS1_PRS10  ----------------------------------
// SVD Line: 7272

//  <item> SFDITEM_FIELD__TM41_TPS1_PRS10
//    <name> PRS10 </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x400421B6) Prescaler 0 </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM41_TPS1 >> 0) & 0xF), ((TM41_TPS1 = (TM41_TPS1 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TM41_TPS1_PRS11  ----------------------------------
// SVD Line: 7278

//  <item> SFDITEM_FIELD__TM41_TPS1_PRS11
//    <name> PRS11 </name>
//    <rw> 
//    <i> [Bits 7..4] RW (@ 0x400421B6) Prescaler 1 </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM41_TPS1 >> 4) & 0xF), ((TM41_TPS1 = (TM41_TPS1 & ~(0xFUL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TM41_TPS1_PRS12  ----------------------------------
// SVD Line: 7284

//  <item> SFDITEM_FIELD__TM41_TPS1_PRS12
//    <name> PRS12 </name>
//    <rw> 
//    <i> [Bits 9..8] RW (@ 0x400421B6) Prescaler 2 </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM41_TPS1 >> 8) & 0x3), ((TM41_TPS1 = (TM41_TPS1 & ~(0x3UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TM41_TPS1_PRS13  ----------------------------------
// SVD Line: 7290

//  <item> SFDITEM_FIELD__TM41_TPS1_PRS13
//    <name> PRS13 </name>
//    <rw> 
//    <i> [Bits 13..12] RW (@ 0x400421B6) Prescaler 3 </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM41_TPS1 >> 12) & 0x3), ((TM41_TPS1 = (TM41_TPS1 & ~(0x3UL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: TM41_TPS1  -----------------------------------
// SVD Line: 7263

//  <rtree> SFDITEM_REG__TM41_TPS1
//    <name> TPS1 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x400421B6) Timer clock select register 0 </i>
//    <loc> ( (unsigned short)((TM41_TPS1 >> 0) & 0xFFFF), ((TM41_TPS1 = (TM41_TPS1 & ~(0x33FFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x33FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TM41_TPS1_PRS10 </item>
//    <item> SFDITEM_FIELD__TM41_TPS1_PRS11 </item>
//    <item> SFDITEM_FIELD__TM41_TPS1_PRS12 </item>
//    <item> SFDITEM_FIELD__TM41_TPS1_PRS13 </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: TM41_TO1  --------------------------------
// SVD Line: 7298

unsigned short TM41_TO1 __AT (0x400421B8);



// --------------------------------  Field Item: TM41_TO1_TO10  -----------------------------------
// SVD Line: 7307

//  <item> SFDITEM_FIELD__TM41_TO1_TO10
//    <name> TO10 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x400421B8) Timer output of channel 0 </i>
//    <check> 
//      <loc> ( (unsigned short) TM41_TO1 ) </loc>
//      <o.0..0> TO10
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TM41_TO1_TO11  -----------------------------------
// SVD Line: 7313

//  <item> SFDITEM_FIELD__TM41_TO1_TO11
//    <name> TO11 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x400421B8) Timer output of channel 1 </i>
//    <check> 
//      <loc> ( (unsigned short) TM41_TO1 ) </loc>
//      <o.1..1> TO11
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TM41_TO1_TO12  -----------------------------------
// SVD Line: 7319

//  <item> SFDITEM_FIELD__TM41_TO1_TO12
//    <name> TO12 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x400421B8) Timer output of channel 2 </i>
//    <check> 
//      <loc> ( (unsigned short) TM41_TO1 ) </loc>
//      <o.2..2> TO12
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TM41_TO1_TO13  -----------------------------------
// SVD Line: 7325

//  <item> SFDITEM_FIELD__TM41_TO1_TO13
//    <name> TO13 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x400421B8) Timer output of channel 3 </i>
//    <check> 
//      <loc> ( (unsigned short) TM41_TO1 ) </loc>
//      <o.3..3> TO13
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: TM41_TO1  ------------------------------------
// SVD Line: 7298

//  <rtree> SFDITEM_REG__TM41_TO1
//    <name> TO1 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x400421B8) Timer output register 0 </i>
//    <loc> ( (unsigned short)((TM41_TO1 >> 0) & 0xFFFF), ((TM41_TO1 = (TM41_TO1 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TM41_TO1_TO10 </item>
//    <item> SFDITEM_FIELD__TM41_TO1_TO11 </item>
//    <item> SFDITEM_FIELD__TM41_TO1_TO12 </item>
//    <item> SFDITEM_FIELD__TM41_TO1_TO13 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TM41_TOE1  --------------------------------
// SVD Line: 7333

unsigned short TM41_TOE1 __AT (0x400421BA);



// -------------------------------  Field Item: TM41_TOE1_TOE10  ----------------------------------
// SVD Line: 7342

//  <item> SFDITEM_FIELD__TM41_TOE1_TOE10
//    <name> TOE10 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x400421BA) Timer output enable of channel 0 </i>
//    <check> 
//      <loc> ( (unsigned short) TM41_TOE1 ) </loc>
//      <o.0..0> TOE10
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TM41_TOE1_TOE11  ----------------------------------
// SVD Line: 7348

//  <item> SFDITEM_FIELD__TM41_TOE1_TOE11
//    <name> TOE11 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x400421BA) Timer output enable of channel 1 </i>
//    <check> 
//      <loc> ( (unsigned short) TM41_TOE1 ) </loc>
//      <o.1..1> TOE11
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TM41_TOE1_TOE12  ----------------------------------
// SVD Line: 7354

//  <item> SFDITEM_FIELD__TM41_TOE1_TOE12
//    <name> TOE12 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x400421BA) Timer output enable of channel 2 </i>
//    <check> 
//      <loc> ( (unsigned short) TM41_TOE1 ) </loc>
//      <o.2..2> TOE12
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TM41_TOE1_TOE13  ----------------------------------
// SVD Line: 7360

//  <item> SFDITEM_FIELD__TM41_TOE1_TOE13
//    <name> TOE13 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x400421BA) Timer output enable of channel 3 </i>
//    <check> 
//      <loc> ( (unsigned short) TM41_TOE1 ) </loc>
//      <o.3..3> TOE13
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: TM41_TOE1  -----------------------------------
// SVD Line: 7333

//  <rtree> SFDITEM_REG__TM41_TOE1
//    <name> TOE1 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x400421BA) Timer output enable register 0 </i>
//    <loc> ( (unsigned short)((TM41_TOE1 >> 0) & 0xFFFF), ((TM41_TOE1 = (TM41_TOE1 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TM41_TOE1_TOE10 </item>
//    <item> SFDITEM_FIELD__TM41_TOE1_TOE11 </item>
//    <item> SFDITEM_FIELD__TM41_TOE1_TOE12 </item>
//    <item> SFDITEM_FIELD__TM41_TOE1_TOE13 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TM41_TOL1  --------------------------------
// SVD Line: 7368

unsigned short TM41_TOL1 __AT (0x400421BC);



// -------------------------------  Field Item: TM41_TOL1_TOL11  ----------------------------------
// SVD Line: 7377

//  <item> SFDITEM_FIELD__TM41_TOL1_TOL11
//    <name> TOL11 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x400421BC) Control of timer output level of channel 1 </i>
//    <check> 
//      <loc> ( (unsigned short) TM41_TOL1 ) </loc>
//      <o.1..1> TOL11
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TM41_TOL1_TOL12  ----------------------------------
// SVD Line: 7383

//  <item> SFDITEM_FIELD__TM41_TOL1_TOL12
//    <name> TOL12 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x400421BC) Control of timer output level of channel 2 </i>
//    <check> 
//      <loc> ( (unsigned short) TM41_TOL1 ) </loc>
//      <o.2..2> TOL12
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TM41_TOL1_TOL13  ----------------------------------
// SVD Line: 7389

//  <item> SFDITEM_FIELD__TM41_TOL1_TOL13
//    <name> TOL13 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x400421BC) Control of timer output level of channel 3 </i>
//    <check> 
//      <loc> ( (unsigned short) TM41_TOL1 ) </loc>
//      <o.3..3> TOL13
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: TM41_TOL1  -----------------------------------
// SVD Line: 7368

//  <rtree> SFDITEM_REG__TM41_TOL1
//    <name> TOL1 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x400421BC) Timer output level register 0 </i>
//    <loc> ( (unsigned short)((TM41_TOL1 >> 0) & 0xFFFF), ((TM41_TOL1 = (TM41_TOL1 & ~(0xEUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xE) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TM41_TOL1_TOL11 </item>
//    <item> SFDITEM_FIELD__TM41_TOL1_TOL12 </item>
//    <item> SFDITEM_FIELD__TM41_TOL1_TOL13 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TM41_TOM1  --------------------------------
// SVD Line: 7397

unsigned short TM41_TOM1 __AT (0x400421BE);



// -------------------------------  Field Item: TM41_TOM1_TOM11  ----------------------------------
// SVD Line: 7406

//  <item> SFDITEM_FIELD__TM41_TOM1_TOM11
//    <name> TOM11 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x400421BE) Control of timer output mode of channel 1 </i>
//    <check> 
//      <loc> ( (unsigned short) TM41_TOM1 ) </loc>
//      <o.1..1> TOM11
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TM41_TOM1_TOM12  ----------------------------------
// SVD Line: 7412

//  <item> SFDITEM_FIELD__TM41_TOM1_TOM12
//    <name> TOM12 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x400421BE) Control of timer output mode of channel 2 </i>
//    <check> 
//      <loc> ( (unsigned short) TM41_TOM1 ) </loc>
//      <o.2..2> TOM12
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TM41_TOM1_TOM13  ----------------------------------
// SVD Line: 7418

//  <item> SFDITEM_FIELD__TM41_TOM1_TOM13
//    <name> TOM13 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x400421BE) Control of timer output mode of channel 3 </i>
//    <check> 
//      <loc> ( (unsigned short) TM41_TOM1 ) </loc>
//      <o.3..3> TOM13
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: TM41_TOM1  -----------------------------------
// SVD Line: 7397

//  <rtree> SFDITEM_REG__TM41_TOM1
//    <name> TOM1 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x400421BE) Timer output mode register 0 </i>
//    <loc> ( (unsigned short)((TM41_TOM1 >> 0) & 0xFFFF), ((TM41_TOM1 = (TM41_TOM1 & ~(0xEUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xE) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TM41_TOM1_TOM11 </item>
//    <item> SFDITEM_FIELD__TM41_TOM1_TOM12 </item>
//    <item> SFDITEM_FIELD__TM41_TOM1_TOM13 </item>
//  </rtree>
//  


// -----------------------  Register Item Address: TM41_TDR1_TDR1_TDR10  --------------------------
// SVD Line: 7426

unsigned short TM41_TDR1_TDR1_TDR10 __AT (0x40042318);



// ---------------------------  Register Item: TM41_TDR1_TDR1_TDR10  ------------------------------
// SVD Line: 7426

//  <item> SFDITEM_REG__TM41_TDR1_TDR1_TDR10
//    <name> TDR10 </name>
//    <i> [Bits 15..0] RW (@ 0x40042318) Timer data register 00 </i>
//    <edit> 
//      <loc> ( (unsigned short)((TM41_TDR1_TDR1_TDR10 >> 0) & 0xFFFFFFFF), ((TM41_TDR1_TDR1_TDR10 = (TM41_TDR1_TDR1_TDR10 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: TM41_TDR1_TDR1_TDR11  --------------------------
// SVD Line: 7426

unsigned short TM41_TDR1_TDR1_TDR11 __AT (0x4004231A);



// ---------------------------  Register Item: TM41_TDR1_TDR1_TDR11  ------------------------------
// SVD Line: 7426

//  <item> SFDITEM_REG__TM41_TDR1_TDR1_TDR11
//    <name> TDR11 </name>
//    <i> [Bits 15..0] RW (@ 0x4004231A) Timer data register 01 </i>
//    <edit> 
//      <loc> ( (unsigned short)((TM41_TDR1_TDR1_TDR11 >> 0) & 0xFFFFFFFF), ((TM41_TDR1_TDR1_TDR11 = (TM41_TDR1_TDR1_TDR11 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: TM41_TDR1_TDR1_TDR12  --------------------------
// SVD Line: 7438

unsigned short TM41_TDR1_TDR1_TDR12 __AT (0x40042364);



// ---------------------------  Register Item: TM41_TDR1_TDR1_TDR12  ------------------------------
// SVD Line: 7438

//  <item> SFDITEM_REG__TM41_TDR1_TDR1_TDR12
//    <name> TDR12 </name>
//    <i> [Bits 15..0] RW (@ 0x40042364) Timer data register 02 </i>
//    <edit> 
//      <loc> ( (unsigned short)((TM41_TDR1_TDR1_TDR12 >> 0) & 0xFFFFFFFF), ((TM41_TDR1_TDR1_TDR12 = (TM41_TDR1_TDR1_TDR12 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: TM41_TDR1_TDR1_TDR13  --------------------------
// SVD Line: 7438

unsigned short TM41_TDR1_TDR1_TDR13 __AT (0x40042366);



// ---------------------------  Register Item: TM41_TDR1_TDR1_TDR13  ------------------------------
// SVD Line: 7438

//  <item> SFDITEM_REG__TM41_TDR1_TDR1_TDR13
//    <name> TDR13 </name>
//    <i> [Bits 15..0] RW (@ 0x40042366) Timer data register 03 </i>
//    <edit> 
//      <loc> ( (unsigned short)((TM41_TDR1_TDR1_TDR13 >> 0) & 0xFFFFFFFF), ((TM41_TDR1_TDR1_TDR13 = (TM41_TDR1_TDR1_TDR13 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: TM41_TDR11L  -------------------------------
// SVD Line: 7450

unsigned char TM41_TDR11L __AT (0x4004231A);



// -------------------------------  Register Item: TM41_TDR11L  -----------------------------------
// SVD Line: 7450

//  <item> SFDITEM_REG__TM41_TDR11L
//    <name> TDR11L </name>
//    <i> [Bits 7..0] RW (@ 0x4004231A) Timer data lower register 01 </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM41_TDR11L >> 0) & 0xFFFFFFFF), ((TM41_TDR11L = (TM41_TDR11L & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: TM41_TDR11H  -------------------------------
// SVD Line: 7458

unsigned char TM41_TDR11H __AT (0x4004231B);



// -------------------------------  Register Item: TM41_TDR11H  -----------------------------------
// SVD Line: 7458

//  <item> SFDITEM_REG__TM41_TDR11H
//    <name> TDR11H </name>
//    <i> [Bits 7..0] RW (@ 0x4004231B) Timer data higher register 01 </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM41_TDR11H >> 0) & 0xFFFFFFFF), ((TM41_TDR11H = (TM41_TDR11H & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: TM41_TDR13L  -------------------------------
// SVD Line: 7466

unsigned char TM41_TDR13L __AT (0x40042366);



// -------------------------------  Register Item: TM41_TDR13L  -----------------------------------
// SVD Line: 7466

//  <item> SFDITEM_REG__TM41_TDR13L
//    <name> TDR13L </name>
//    <i> [Bits 7..0] RW (@ 0x40042366) Timer data lower register 03 </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM41_TDR13L >> 0) & 0xFFFFFFFF), ((TM41_TDR13L = (TM41_TDR13L & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: TM41_TDR13H  -------------------------------
// SVD Line: 7474

unsigned char TM41_TDR13H __AT (0x40042367);



// -------------------------------  Register Item: TM41_TDR13H  -----------------------------------
// SVD Line: 7474

//  <item> SFDITEM_REG__TM41_TDR13H
//    <name> TDR13H </name>
//    <i> [Bits 7..0] RW (@ 0x40042367) Timer data higher register 03 </i>
//    <edit> 
//      <loc> ( (unsigned char)((TM41_TDR13H >> 0) & 0xFFFFFFFF), ((TM41_TDR13H = (TM41_TDR13H & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------------  Peripheral View: TM41  -------------------------------------
// SVD Line: 6830

//  <view> TM41
//    <name> TM41 </name>
//    <item> SFDITEM_REG__TM41_TCR1_TCR1_TCR10 </item>
//    <item> SFDITEM_REG__TM41_TCR1_TCR1_TCR11 </item>
//    <item> SFDITEM_REG__TM41_TCR1_TCR1_TCR12 </item>
//    <item> SFDITEM_REG__TM41_TCR1_TCR1_TCR13 </item>
//    <item> SFDITEM_REG__TM41_TMR10 </item>
//    <item> SFDITEM_REG__TM41_TMR11 </item>
//    <item> SFDITEM_REG__TM41_TMR12 </item>
//    <item> SFDITEM_REG__TM41_TMR13 </item>
//    <item> SFDITEM_REG__TM41_TSR10 </item>
//    <item> SFDITEM_REG__TM41_TSR11 </item>
//    <item> SFDITEM_REG__TM41_TSR12 </item>
//    <item> SFDITEM_REG__TM41_TSR13 </item>
//    <item> SFDITEM_REG__TM41_TE1 </item>
//    <item> SFDITEM_REG__TM41_TS1 </item>
//    <item> SFDITEM_REG__TM41_TT1 </item>
//    <item> SFDITEM_REG__TM41_TPS1 </item>
//    <item> SFDITEM_REG__TM41_TO1 </item>
//    <item> SFDITEM_REG__TM41_TOE1 </item>
//    <item> SFDITEM_REG__TM41_TOL1 </item>
//    <item> SFDITEM_REG__TM41_TOM1 </item>
//    <item> SFDITEM_REG__TM41_TDR1_TDR1_TDR10 </item>
//    <item> SFDITEM_REG__TM41_TDR1_TDR1_TDR11 </item>
//    <item> SFDITEM_REG__TM41_TDR1_TDR1_TDR12 </item>
//    <item> SFDITEM_REG__TM41_TDR1_TDR1_TDR13 </item>
//    <item> SFDITEM_REG__TM41_TDR11L </item>
//    <item> SFDITEM_REG__TM41_TDR11H </item>
//    <item> SFDITEM_REG__TM41_TDR13L </item>
//    <item> SFDITEM_REG__TM41_TDR13H </item>
//  </view>
//  


// ---------------------------  Register Item Address: EPWM_EPWMSRC  ------------------------------
// SVD Line: 7502

unsigned short EPWM_EPWMSRC __AT (0x40044400);



// ------------------------  Field Item: EPWM_EPWMSRC_SRC0_SRC0_SRC00  ----------------------------
// SVD Line: 7511

//  <item> SFDITEM_FIELD__EPWM_EPWMSRC_SRC0_SRC0_SRC00
//    <name> SRC00 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40044400) Selsect the source clock of EPWM00 </i>
//    <check> 
//      <loc> ( (unsigned int) EPWM_EPWMSRC ) </loc>
//      <o.0..0> SRC00
//    </check>
//  </item>
//  


// ------------------------  Field Item: EPWM_EPWMSRC_SRC0_SRC0_SRC01  ----------------------------
// SVD Line: 7511

//  <item> SFDITEM_FIELD__EPWM_EPWMSRC_SRC0_SRC0_SRC01
//    <name> SRC01 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40044400) Selsect the source clock of EPWM01 </i>
//    <check> 
//      <loc> ( (unsigned int) EPWM_EPWMSRC ) </loc>
//      <o.1..1> SRC01
//    </check>
//  </item>
//  


// ------------------------  Field Item: EPWM_EPWMSRC_SRC0_SRC0_SRC02  ----------------------------
// SVD Line: 7511

//  <item> SFDITEM_FIELD__EPWM_EPWMSRC_SRC0_SRC0_SRC02
//    <name> SRC02 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40044400) Selsect the source clock of EPWM02 </i>
//    <check> 
//      <loc> ( (unsigned int) EPWM_EPWMSRC ) </loc>
//      <o.2..2> SRC02
//    </check>
//  </item>
//  


// ------------------------  Field Item: EPWM_EPWMSRC_SRC0_SRC0_SRC03  ----------------------------
// SVD Line: 7511

//  <item> SFDITEM_FIELD__EPWM_EPWMSRC_SRC0_SRC0_SRC03
//    <name> SRC03 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40044400) Selsect the source clock of EPWM03 </i>
//    <check> 
//      <loc> ( (unsigned int) EPWM_EPWMSRC ) </loc>
//      <o.3..3> SRC03
//    </check>
//  </item>
//  


// ------------------------  Field Item: EPWM_EPWMSRC_SRC0_SRC0_SRC04  ----------------------------
// SVD Line: 7511

//  <item> SFDITEM_FIELD__EPWM_EPWMSRC_SRC0_SRC0_SRC04
//    <name> SRC04 </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40044400) Selsect the source clock of EPWM04 </i>
//    <check> 
//      <loc> ( (unsigned int) EPWM_EPWMSRC ) </loc>
//      <o.4..4> SRC04
//    </check>
//  </item>
//  


// ------------------------  Field Item: EPWM_EPWMSRC_SRC0_SRC0_SRC05  ----------------------------
// SVD Line: 7511

//  <item> SFDITEM_FIELD__EPWM_EPWMSRC_SRC0_SRC0_SRC05
//    <name> SRC05 </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40044400) Selsect the source clock of EPWM05 </i>
//    <check> 
//      <loc> ( (unsigned int) EPWM_EPWMSRC ) </loc>
//      <o.5..5> SRC05
//    </check>
//  </item>
//  


// ------------------------  Field Item: EPWM_EPWMSRC_SRC0_SRC0_SRC06  ----------------------------
// SVD Line: 7511

//  <item> SFDITEM_FIELD__EPWM_EPWMSRC_SRC0_SRC0_SRC06
//    <name> SRC06 </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40044400) Selsect the source clock of EPWM06 </i>
//    <check> 
//      <loc> ( (unsigned int) EPWM_EPWMSRC ) </loc>
//      <o.6..6> SRC06
//    </check>
//  </item>
//  


// ------------------------  Field Item: EPWM_EPWMSRC_SRC0_SRC0_SRC07  ----------------------------
// SVD Line: 7511

//  <item> SFDITEM_FIELD__EPWM_EPWMSRC_SRC0_SRC0_SRC07
//    <name> SRC07 </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40044400) Selsect the source clock of EPWM07 </i>
//    <check> 
//      <loc> ( (unsigned int) EPWM_EPWMSRC ) </loc>
//      <o.7..7> SRC07
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: EPWM_EPWMSRC  ----------------------------------
// SVD Line: 7502

//  <rtree> SFDITEM_REG__EPWM_EPWMSRC
//    <name> EPWMSRC </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40044400) Input source select register </i>
//    <loc> ( (unsigned short)((EPWM_EPWMSRC >> 0) & 0xFFFF), ((EPWM_EPWMSRC = (EPWM_EPWMSRC & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__EPWM_EPWMSRC_SRC0_SRC0_SRC00 </item>
//    <item> SFDITEM_FIELD__EPWM_EPWMSRC_SRC0_SRC0_SRC01 </item>
//    <item> SFDITEM_FIELD__EPWM_EPWMSRC_SRC0_SRC0_SRC02 </item>
//    <item> SFDITEM_FIELD__EPWM_EPWMSRC_SRC0_SRC0_SRC03 </item>
//    <item> SFDITEM_FIELD__EPWM_EPWMSRC_SRC0_SRC0_SRC04 </item>
//    <item> SFDITEM_FIELD__EPWM_EPWMSRC_SRC0_SRC0_SRC05 </item>
//    <item> SFDITEM_FIELD__EPWM_EPWMSRC_SRC0_SRC0_SRC06 </item>
//    <item> SFDITEM_FIELD__EPWM_EPWMSRC_SRC0_SRC0_SRC07 </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: EPWM_EPWMCTL  ------------------------------
// SVD Line: 7522

unsigned short EPWM_EPWMCTL __AT (0x40044408);



// --------------------------  Field Item: EPWM_EPWMCTL_OE0_OE0_OE00  -----------------------------
// SVD Line: 7531

//  <item> SFDITEM_FIELD__EPWM_EPWMCTL_OE0_OE0_OE00
//    <name> OE00 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40044408) EPWM00 output enable register </i>
//    <check> 
//      <loc> ( (unsigned int) EPWM_EPWMCTL ) </loc>
//      <o.0..0> OE00
//    </check>
//  </item>
//  


// --------------------------  Field Item: EPWM_EPWMCTL_OE0_OE0_OE01  -----------------------------
// SVD Line: 7531

//  <item> SFDITEM_FIELD__EPWM_EPWMCTL_OE0_OE0_OE01
//    <name> OE01 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40044408) EPWM01 output enable register </i>
//    <check> 
//      <loc> ( (unsigned int) EPWM_EPWMCTL ) </loc>
//      <o.1..1> OE01
//    </check>
//  </item>
//  


// --------------------------  Field Item: EPWM_EPWMCTL_OE0_OE0_OE02  -----------------------------
// SVD Line: 7531

//  <item> SFDITEM_FIELD__EPWM_EPWMCTL_OE0_OE0_OE02
//    <name> OE02 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40044408) EPWM02 output enable register </i>
//    <check> 
//      <loc> ( (unsigned int) EPWM_EPWMCTL ) </loc>
//      <o.2..2> OE02
//    </check>
//  </item>
//  


// --------------------------  Field Item: EPWM_EPWMCTL_OE0_OE0_OE03  -----------------------------
// SVD Line: 7531

//  <item> SFDITEM_FIELD__EPWM_EPWMCTL_OE0_OE0_OE03
//    <name> OE03 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40044408) EPWM03 output enable register </i>
//    <check> 
//      <loc> ( (unsigned int) EPWM_EPWMCTL ) </loc>
//      <o.3..3> OE03
//    </check>
//  </item>
//  


// --------------------------  Field Item: EPWM_EPWMCTL_OE0_OE0_OE04  -----------------------------
// SVD Line: 7531

//  <item> SFDITEM_FIELD__EPWM_EPWMCTL_OE0_OE0_OE04
//    <name> OE04 </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40044408) EPWM04 output enable register </i>
//    <check> 
//      <loc> ( (unsigned int) EPWM_EPWMCTL ) </loc>
//      <o.4..4> OE04
//    </check>
//  </item>
//  


// --------------------------  Field Item: EPWM_EPWMCTL_OE0_OE0_OE05  -----------------------------
// SVD Line: 7531

//  <item> SFDITEM_FIELD__EPWM_EPWMCTL_OE0_OE0_OE05
//    <name> OE05 </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40044408) EPWM05 output enable register </i>
//    <check> 
//      <loc> ( (unsigned int) EPWM_EPWMCTL ) </loc>
//      <o.5..5> OE05
//    </check>
//  </item>
//  


// --------------------------  Field Item: EPWM_EPWMCTL_OE0_OE0_OE06  -----------------------------
// SVD Line: 7531

//  <item> SFDITEM_FIELD__EPWM_EPWMCTL_OE0_OE0_OE06
//    <name> OE06 </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40044408) EPWM06 output enable register </i>
//    <check> 
//      <loc> ( (unsigned int) EPWM_EPWMCTL ) </loc>
//      <o.6..6> OE06
//    </check>
//  </item>
//  


// --------------------------  Field Item: EPWM_EPWMCTL_OE0_OE0_OE07  -----------------------------
// SVD Line: 7531

//  <item> SFDITEM_FIELD__EPWM_EPWMCTL_OE0_OE0_OE07
//    <name> OE07 </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40044408) EPWM07 output enable register </i>
//    <check> 
//      <loc> ( (unsigned int) EPWM_EPWMCTL ) </loc>
//      <o.7..7> OE07
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: EPWM_EPWMCTL  ----------------------------------
// SVD Line: 7522

//  <rtree> SFDITEM_REG__EPWM_EPWMCTL
//    <name> EPWMCTL </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40044408) EPWMO0n output control register </i>
//    <loc> ( (unsigned short)((EPWM_EPWMCTL >> 0) & 0xFFFF), ((EPWM_EPWMCTL = (EPWM_EPWMCTL & ~(0x101UL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x101) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__EPWM_EPWMCTL_OE0_OE0_OE00 </item>
//    <item> SFDITEM_FIELD__EPWM_EPWMCTL_OE0_OE0_OE01 </item>
//    <item> SFDITEM_FIELD__EPWM_EPWMCTL_OE0_OE0_OE02 </item>
//    <item> SFDITEM_FIELD__EPWM_EPWMCTL_OE0_OE0_OE03 </item>
//    <item> SFDITEM_FIELD__EPWM_EPWMCTL_OE0_OE0_OE04 </item>
//    <item> SFDITEM_FIELD__EPWM_EPWMCTL_OE0_OE0_OE05 </item>
//    <item> SFDITEM_FIELD__EPWM_EPWMCTL_OE0_OE0_OE06 </item>
//    <item> SFDITEM_FIELD__EPWM_EPWMCTL_OE0_OE0_OE07 </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: EPWM_EPWMSTL  ------------------------------
// SVD Line: 7551

unsigned short EPWM_EPWMSTL __AT (0x4004440C);



// --------------------------  Field Item: EPWM_EPWMSTL_IO0_IO0_IO00  -----------------------------
// SVD Line: 7560

//  <item> SFDITEM_FIELD__EPWM_EPWMSTL_IO0_IO0_IO00
//    <name> IO00 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4004440C) EPWM00 output enable register </i>
//    <check> 
//      <loc> ( (unsigned int) EPWM_EPWMSTL ) </loc>
//      <o.0..0> IO00
//    </check>
//  </item>
//  


// --------------------------  Field Item: EPWM_EPWMSTL_IO0_IO0_IO01  -----------------------------
// SVD Line: 7560

//  <item> SFDITEM_FIELD__EPWM_EPWMSTL_IO0_IO0_IO01
//    <name> IO01 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4004440C) EPWM00 output enable register </i>
//    <check> 
//      <loc> ( (unsigned int) EPWM_EPWMSTL ) </loc>
//      <o.1..1> IO01
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: EPWM_EPWMSTL  ----------------------------------
// SVD Line: 7551

//  <rtree> SFDITEM_REG__EPWM_EPWMSTL
//    <name> EPWMSTL </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4004440C) EPWMO0n cutoff output level register </i>
//    <loc> ( (unsigned short)((EPWM_EPWMSTL >> 0) & 0xFFFF), ((EPWM_EPWMSTL = (EPWM_EPWMSTL & ~(0x5555UL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x5555) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__EPWM_EPWMSTL_IO0_IO0_IO00 </item>
//    <item> SFDITEM_FIELD__EPWM_EPWMSTL_IO0_IO0_IO01 </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: EPWM_EPWMSTC  ------------------------------
// SVD Line: 7635

unsigned short EPWM_EPWMSTC __AT (0x40044404);



// ---------------------  Field Item: EPWM_EPWMSTC_SC_SEL_SC_SEL_SC_SEL0  -------------------------
// SVD Line: 7644

//  <item> SFDITEM_FIELD__EPWM_EPWMSTC_SC_SEL_SC_SEL_SC_SEL0
//    <name> SC_SEL0 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40044404) Cutoff source selection </i>
//    <check> 
//      <loc> ( (unsigned int) EPWM_EPWMSTC ) </loc>
//      <o.0..0> SC_SEL0
//    </check>
//  </item>
//  


// ---------------------  Field Item: EPWM_EPWMSTC_SC_SEL_SC_SEL_SC_SEL1  -------------------------
// SVD Line: 7644

//  <item> SFDITEM_FIELD__EPWM_EPWMSTC_SC_SEL_SC_SEL_SC_SEL1
//    <name> SC_SEL1 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40044404) Cutoff source selection </i>
//    <check> 
//      <loc> ( (unsigned int) EPWM_EPWMSTC ) </loc>
//      <o.1..1> SC_SEL1
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: EPWM_EPWMSTC  ----------------------------------
// SVD Line: 7635

//  <rtree> SFDITEM_REG__EPWM_EPWMSTC
//    <name> EPWMSTC </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40044404) EPWMO0n cutoff control register </i>
//    <loc> ( (unsigned short)((EPWM_EPWMSTC >> 0) & 0xFFFF), ((EPWM_EPWMSTC = (EPWM_EPWMSTC & ~(0x1DUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x1D) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__EPWM_EPWMSTC_SC_SEL_SC_SEL_SC_SEL0 </item>
//    <item> SFDITEM_FIELD__EPWM_EPWMSTC_SC_SEL_SC_SEL_SC_SEL1 </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: EPWM_EPWMSTR  ------------------------------
// SVD Line: 7674

unsigned short EPWM_EPWMSTR __AT (0x40044410);



// -----------------------------  Field Item: EPWM_EPWMSTR_HZCLR  ---------------------------------
// SVD Line: 7683

//  <item> SFDITEM_FIELD__EPWM_EPWMSTR_HZCLR
//    <name> HZCLR </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40044410) software release cutoff register </i>
//    <check> 
//      <loc> ( (unsigned short) EPWM_EPWMSTR ) </loc>
//      <o.0..0> HZCLR
//    </check>
//  </item>
//  


// -----------------------------  Field Item: EPWM_EPWMSTR_SHTFLG  --------------------------------
// SVD Line: 7689

//  <item> SFDITEM_FIELD__EPWM_EPWMSTR_SHTFLG
//    <name> SHTFLG </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40044410) cutoff status register </i>
//    <check> 
//      <loc> ( (unsigned short) EPWM_EPWMSTR ) </loc>
//      <o.1..1> SHTFLG
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: EPWM_EPWMSTR  ----------------------------------
// SVD Line: 7674

//  <rtree> SFDITEM_REG__EPWM_EPWMSTR
//    <name> EPWMSTR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40044410) Status register </i>
//    <loc> ( (unsigned short)((EPWM_EPWMSTR >> 0) & 0xFFFF), ((EPWM_EPWMSTR = (EPWM_EPWMSTR & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__EPWM_EPWMSTR_HZCLR </item>
//    <item> SFDITEM_FIELD__EPWM_EPWMSTR_SHTFLG </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: EPWM  -------------------------------------
// SVD Line: 7486

//  <view> EPWM
//    <name> EPWM </name>
//    <item> SFDITEM_REG__EPWM_EPWMSRC </item>
//    <item> SFDITEM_REG__EPWM_EPWMCTL </item>
//    <item> SFDITEM_REG__EPWM_EPWMSTL </item>
//    <item> SFDITEM_REG__EPWM_EPWMSTC </item>
//    <item> SFDITEM_REG__EPWM_EPWMSTR </item>
//  </view>
//  


// ----------------------------  Register Item Address: RTC_SUBCUD  -------------------------------
// SVD Line: 7728

unsigned short RTC_SUBCUD __AT (0x40044F34);



// --------------------------------  Field Item: RTC_SUBCUD_F  ------------------------------------
// SVD Line: 7737

//  <item> SFDITEM_FIELD__RTC_SUBCUD_F
//    <name> F </name>
//    <rw> 
//    <i> [Bits 12..0] RW (@ 0x40044F34) watch error correction value </i>
//    <edit> 
//      <loc> ( (unsigned short)((RTC_SUBCUD >> 0) & 0x1FFF), ((RTC_SUBCUD = (RTC_SUBCUD & ~(0x1FFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x1FFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: RTC_SUBCUD_DEV  -----------------------------------
// SVD Line: 7743

//  <item> SFDITEM_FIELD__RTC_SUBCUD_DEV
//    <name> DEV </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40044F34) watch error correction timing </i>
//    <check> 
//      <loc> ( (unsigned short) RTC_SUBCUD ) </loc>
//      <o.15..15> DEV
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: RTC_SUBCUD  -----------------------------------
// SVD Line: 7728

//  <rtree> SFDITEM_REG__RTC_SUBCUD
//    <name> SUBCUD </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40044F34) Watch error correction register </i>
//    <loc> ( (unsigned short)((RTC_SUBCUD >> 0) & 0xFFFF), ((RTC_SUBCUD = (RTC_SUBCUD & ~(0x9FFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x9FFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RTC_SUBCUD_F </item>
//    <item> SFDITEM_FIELD__RTC_SUBCUD_DEV </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: RTC_ITMC  --------------------------------
// SVD Line: 7752

unsigned short RTC_ITMC __AT (0x40044F50);



// -------------------------------  Field Item: RTC_ITMC_ITCMP  -----------------------------------
// SVD Line: 7761

//  <item> SFDITEM_FIELD__RTC_ITMC_ITCMP
//    <name> ITCMP </name>
//    <rw> 
//    <i> [Bits 14..0] RW (@ 0x40044F50) 15-bit interval timer compare value </i>
//    <edit> 
//      <loc> ( (unsigned short)((RTC_ITMC >> 0) & 0x7FFF), ((RTC_ITMC = (RTC_ITMC & ~(0x7FFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x7FFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: RTC_ITMC_RINTE  -----------------------------------
// SVD Line: 7767

//  <item> SFDITEM_FIELD__RTC_ITMC_RINTE
//    <name> RINTE </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40044F50) 15-bit interval timer operation control </i>
//    <check> 
//      <loc> ( (unsigned short) RTC_ITMC ) </loc>
//      <o.15..15> RINTE
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: RTC_ITMC  ------------------------------------
// SVD Line: 7752

//  <rtree> SFDITEM_REG__RTC_ITMC
//    <name> ITMC </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40044F50) 15-bit interval timer control register </i>
//    <loc> ( (unsigned short)((RTC_ITMC >> 0) & 0xFFFF), ((RTC_ITMC = (RTC_ITMC & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RTC_ITMC_ITCMP </item>
//    <item> SFDITEM_FIELD__RTC_ITMC_RINTE </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: RTC_SEC  ---------------------------------
// SVD Line: 7775

unsigned char RTC_SEC __AT (0x40044F52);



// ---------------------------------  Register Item: RTC_SEC  -------------------------------------
// SVD Line: 7775

//  <item> SFDITEM_REG__RTC_SEC
//    <name> SEC </name>
//    <i> [Bits 7..0] RW (@ 0x40044F52) Second count register </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTC_SEC >> 0) & 0xFFFFFFFF), ((RTC_SEC = (RTC_SEC & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register Item Address: RTC_MIN  ---------------------------------
// SVD Line: 7784

unsigned char RTC_MIN __AT (0x40044F53);



// ---------------------------------  Register Item: RTC_MIN  -------------------------------------
// SVD Line: 7784

//  <item> SFDITEM_REG__RTC_MIN
//    <name> MIN </name>
//    <i> [Bits 7..0] RW (@ 0x40044F53) Minute count register </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTC_MIN >> 0) & 0xFFFFFFFF), ((RTC_MIN = (RTC_MIN & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register Item Address: RTC_HOUR  --------------------------------
// SVD Line: 7793

unsigned char RTC_HOUR __AT (0x40044F54);



// ---------------------------------  Register Item: RTC_HOUR  ------------------------------------
// SVD Line: 7793

//  <item> SFDITEM_REG__RTC_HOUR
//    <name> HOUR </name>
//    <i> [Bits 7..0] RW (@ 0x40044F54) Hour count register </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTC_HOUR >> 0) & 0xFFFFFFFF), ((RTC_HOUR = (RTC_HOUR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register Item Address: RTC_WEEK  --------------------------------
// SVD Line: 7802

unsigned char RTC_WEEK __AT (0x40044F55);



// ---------------------------------  Register Item: RTC_WEEK  ------------------------------------
// SVD Line: 7802

//  <item> SFDITEM_REG__RTC_WEEK
//    <name> WEEK </name>
//    <i> [Bits 7..0] RW (@ 0x40044F55) Week count register </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTC_WEEK >> 0) & 0xFFFFFFFF), ((RTC_WEEK = (RTC_WEEK & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register Item Address: RTC_DAY  ---------------------------------
// SVD Line: 7811

unsigned char RTC_DAY __AT (0x40044F56);



// ---------------------------------  Register Item: RTC_DAY  -------------------------------------
// SVD Line: 7811

//  <item> SFDITEM_REG__RTC_DAY
//    <name> DAY </name>
//    <i> [Bits 7..0] RW (@ 0x40044F56) Day count register </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTC_DAY >> 0) & 0xFFFFFFFF), ((RTC_DAY = (RTC_DAY & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: RTC_MONTH  --------------------------------
// SVD Line: 7820

unsigned char RTC_MONTH __AT (0x40044F57);



// --------------------------------  Register Item: RTC_MONTH  ------------------------------------
// SVD Line: 7820

//  <item> SFDITEM_REG__RTC_MONTH
//    <name> MONTH </name>
//    <i> [Bits 7..0] RW (@ 0x40044F57) Month count register </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTC_MONTH >> 0) & 0xFFFFFFFF), ((RTC_MONTH = (RTC_MONTH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register Item Address: RTC_YEAR  --------------------------------
// SVD Line: 7829

unsigned char RTC_YEAR __AT (0x40044F58);



// ---------------------------------  Register Item: RTC_YEAR  ------------------------------------
// SVD Line: 7829

//  <item> SFDITEM_REG__RTC_YEAR
//    <name> YEAR </name>
//    <i> [Bits 7..0] RW (@ 0x40044F58) Year count register </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTC_YEAR >> 0) & 0xFFFFFFFF), ((RTC_YEAR = (RTC_YEAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: RTC_ALARMWM  -------------------------------
// SVD Line: 7838

unsigned char RTC_ALARMWM __AT (0x40044F5A);



// -------------------------------  Register Item: RTC_ALARMWM  -----------------------------------
// SVD Line: 7838

//  <item> SFDITEM_REG__RTC_ALARMWM
//    <name> ALARMWM </name>
//    <i> [Bits 7..0] RW (@ 0x40044F5A) Alarm minute register </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTC_ALARMWM >> 0) & 0xFFFFFFFF), ((RTC_ALARMWM = (RTC_ALARMWM & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: RTC_ALARMWH  -------------------------------
// SVD Line: 7847

unsigned char RTC_ALARMWH __AT (0x40044F5B);



// -------------------------------  Register Item: RTC_ALARMWH  -----------------------------------
// SVD Line: 7847

//  <item> SFDITEM_REG__RTC_ALARMWH
//    <name> ALARMWH </name>
//    <i> [Bits 7..0] RW (@ 0x40044F5B) Alarm hour register </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTC_ALARMWH >> 0) & 0xFFFFFFFF), ((RTC_ALARMWH = (RTC_ALARMWH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: RTC_ALARMWW  -------------------------------
// SVD Line: 7856

unsigned char RTC_ALARMWW __AT (0x40044F5C);



// -------------------------------  Register Item: RTC_ALARMWW  -----------------------------------
// SVD Line: 7856

//  <item> SFDITEM_REG__RTC_ALARMWW
//    <name> ALARMWW </name>
//    <i> [Bits 7..0] RW (@ 0x40044F5C) Alarm week register </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTC_ALARMWW >> 0) & 0xFFFFFFFF), ((RTC_ALARMWW = (RTC_ALARMWW & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: RTC_RTCC0  --------------------------------
// SVD Line: 7865

unsigned char RTC_RTCC0 __AT (0x40044F5D);



// --------------------------------  Field Item: RTC_RTCC0_CT  ------------------------------------
// SVD Line: 7874

//  <item> SFDITEM_FIELD__RTC_RTCC0_CT
//    <name> CT </name>
//    <rw> 
//    <i> [Bits 2..0] RW (@ 0x40044F5D) Constant-period interrupt (INTRTC) selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTC_RTCC0 >> 0) & 0x7), ((RTC_RTCC0 = (RTC_RTCC0 & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: RTC_RTCC0_AMPM  -----------------------------------
// SVD Line: 7880

//  <item> SFDITEM_FIELD__RTC_RTCC0_AMPM
//    <name> AMPM </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40044F5D) Selection of 12-/24-hour system </i>
//    <check> 
//      <loc> ( (unsigned char) RTC_RTCC0 ) </loc>
//      <o.3..3> AMPM
//    </check>
//  </item>
//  


// -------------------------------  Field Item: RTC_RTCC0_RCLOE  ----------------------------------
// SVD Line: 7886

//  <item> SFDITEM_FIELD__RTC_RTCC0_RCLOE
//    <name> RCLOE </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40044F5D) RTC1HZ pin output enable </i>
//    <check> 
//      <loc> ( (unsigned char) RTC_RTCC0 ) </loc>
//      <o.5..5> RCLOE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: RTC_RTCC0_RTCE  -----------------------------------
// SVD Line: 7892

//  <item> SFDITEM_FIELD__RTC_RTCC0_RTCE
//    <name> RTCE </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40044F5D) Real-time clock operation control </i>
//    <check> 
//      <loc> ( (unsigned char) RTC_RTCC0 ) </loc>
//      <o.7..7> RTCE
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: RTC_RTCC0  -----------------------------------
// SVD Line: 7865

//  <rtree> SFDITEM_REG__RTC_RTCC0
//    <name> RTCC0 </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40044F5D) Real-time clock control register 0 </i>
//    <loc> ( (unsigned char)((RTC_RTCC0 >> 0) & 0xFF), ((RTC_RTCC0 = (RTC_RTCC0 & ~(0xAFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xAF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RTC_RTCC0_CT </item>
//    <item> SFDITEM_FIELD__RTC_RTCC0_AMPM </item>
//    <item> SFDITEM_FIELD__RTC_RTCC0_RCLOE </item>
//    <item> SFDITEM_FIELD__RTC_RTCC0_RTCE </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: RTC_RTCC1  --------------------------------
// SVD Line: 7900

unsigned char RTC_RTCC1 __AT (0x40044F5E);



// -------------------------------  Field Item: RTC_RTCC1_RWAIT  ----------------------------------
// SVD Line: 7909

//  <item> SFDITEM_FIELD__RTC_RTCC1_RWAIT
//    <name> RWAIT </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40044F5E) Wait control of real-time clock </i>
//    <check> 
//      <loc> ( (unsigned char) RTC_RTCC1 ) </loc>
//      <o.0..0> RWAIT
//    </check>
//  </item>
//  


// -------------------------------  Field Item: RTC_RTCC1_RWST  -----------------------------------
// SVD Line: 7915

//  <item> SFDITEM_FIELD__RTC_RTCC1_RWST
//    <name> RWST </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40044F5E) Wait status flag of real-time clock </i>
//    <check> 
//      <loc> ( (unsigned char) RTC_RTCC1 ) </loc>
//      <o.1..1> RWST
//    </check>
//  </item>
//  


// -------------------------------  Field Item: RTC_RTCC1_RIFG  -----------------------------------
// SVD Line: 7921

//  <item> SFDITEM_FIELD__RTC_RTCC1_RIFG
//    <name> RIFG </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40044F5E) Constant-period interrupt status flag </i>
//    <check> 
//      <loc> ( (unsigned char) RTC_RTCC1 ) </loc>
//      <o.3..3> RIFG
//    </check>
//  </item>
//  


// -------------------------------  Field Item: RTC_RTCC1_WAFG  -----------------------------------
// SVD Line: 7927

//  <item> SFDITEM_FIELD__RTC_RTCC1_WAFG
//    <name> WAFG </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40044F5E) Alarm detection status flag </i>
//    <check> 
//      <loc> ( (unsigned char) RTC_RTCC1 ) </loc>
//      <o.4..4> WAFG
//    </check>
//  </item>
//  


// -------------------------------  Field Item: RTC_RTCC1_WALIE  ----------------------------------
// SVD Line: 7933

//  <item> SFDITEM_FIELD__RTC_RTCC1_WALIE
//    <name> WALIE </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40044F5E) Control of alarm interrupt (INTRTC) function operation </i>
//    <check> 
//      <loc> ( (unsigned char) RTC_RTCC1 ) </loc>
//      <o.6..6> WALIE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: RTC_RTCC1_WALE  -----------------------------------
// SVD Line: 7939

//  <item> SFDITEM_FIELD__RTC_RTCC1_WALE
//    <name> WALE </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40044F5E) Alarm operation control </i>
//    <check> 
//      <loc> ( (unsigned char) RTC_RTCC1 ) </loc>
//      <o.7..7> WALE
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: RTC_RTCC1  -----------------------------------
// SVD Line: 7900

//  <rtree> SFDITEM_REG__RTC_RTCC1
//    <name> RTCC1 </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40044F5E) Real-time clock control register 1 </i>
//    <loc> ( (unsigned char)((RTC_RTCC1 >> 0) & 0xFF), ((RTC_RTCC1 = (RTC_RTCC1 & ~(0xDBUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xDB) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RTC_RTCC1_RWAIT </item>
//    <item> SFDITEM_FIELD__RTC_RTCC1_RWST </item>
//    <item> SFDITEM_FIELD__RTC_RTCC1_RIFG </item>
//    <item> SFDITEM_FIELD__RTC_RTCC1_WAFG </item>
//    <item> SFDITEM_FIELD__RTC_RTCC1_WALIE </item>
//    <item> SFDITEM_FIELD__RTC_RTCC1_WALE </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: RTC  --------------------------------------
// SVD Line: 7700

//  <view> RTC
//    <name> RTC </name>
//    <item> SFDITEM_REG__RTC_SUBCUD </item>
//    <item> SFDITEM_REG__RTC_ITMC </item>
//    <item> SFDITEM_REG__RTC_SEC </item>
//    <item> SFDITEM_REG__RTC_MIN </item>
//    <item> SFDITEM_REG__RTC_HOUR </item>
//    <item> SFDITEM_REG__RTC_WEEK </item>
//    <item> SFDITEM_REG__RTC_DAY </item>
//    <item> SFDITEM_REG__RTC_MONTH </item>
//    <item> SFDITEM_REG__RTC_YEAR </item>
//    <item> SFDITEM_REG__RTC_ALARMWM </item>
//    <item> SFDITEM_REG__RTC_ALARMWH </item>
//    <item> SFDITEM_REG__RTC_ALARMWW </item>
//    <item> SFDITEM_REG__RTC_RTCC0 </item>
//    <item> SFDITEM_REG__RTC_RTCC1 </item>
//  </view>
//  


// ----------------------------  Register Item Address: PCBZ_CKS0  --------------------------------
// SVD Line: 7967

unsigned char PCBZ_CKS0 __AT (0x40040FA5);



// --------------------------------  Field Item: PCBZ_CKS0_CCS  -----------------------------------
// SVD Line: 7976

//  <item> SFDITEM_FIELD__PCBZ_CKS0_CCS
//    <name> CCS </name>
//    <rw> 
//    <i> [Bits 2..0] RW (@ 0x40040FA5) PCLBUZn output clock select </i>
//    <edit> 
//      <loc> ( (unsigned char)((PCBZ_CKS0 >> 0) & 0x7), ((PCBZ_CKS0 = (PCBZ_CKS0 & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: PCBZ_CKS0_CSEL  -----------------------------------
// SVD Line: 7982

//  <item> SFDITEM_FIELD__PCBZ_CKS0_CSEL
//    <name> CSEL </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40040FA5) PCLBUZn output clock select </i>
//    <check> 
//      <loc> ( (unsigned char) PCBZ_CKS0 ) </loc>
//      <o.3..3> CSEL
//    </check>
//  </item>
//  


// -------------------------------  Field Item: PCBZ_CKS0_PCLOE  ----------------------------------
// SVD Line: 7988

//  <item> SFDITEM_FIELD__PCBZ_CKS0_PCLOE
//    <name> PCLOE </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40040FA5) PCLBUZn pin output enable </i>
//    <check> 
//      <loc> ( (unsigned char) PCBZ_CKS0 ) </loc>
//      <o.7..7> PCLOE
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: PCBZ_CKS0  -----------------------------------
// SVD Line: 7967

//  <rtree> SFDITEM_REG__PCBZ_CKS0
//    <name> CKS0 </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40040FA5) Clock output select registers 0 </i>
//    <loc> ( (unsigned char)((PCBZ_CKS0 >> 0) & 0xFF), ((PCBZ_CKS0 = (PCBZ_CKS0 & ~(0x8FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x8F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PCBZ_CKS0_CCS </item>
//    <item> SFDITEM_FIELD__PCBZ_CKS0_CSEL </item>
//    <item> SFDITEM_FIELD__PCBZ_CKS0_PCLOE </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: PCBZ_CKS1  --------------------------------
// SVD Line: 7996

unsigned char PCBZ_CKS1 __AT (0x40040FA6);



// --------------------------------  Field Item: PCBZ_CKS1_CCS  -----------------------------------
// SVD Line: 7976

//  <item> SFDITEM_FIELD__PCBZ_CKS1_CCS
//    <name> CCS </name>
//    <rw> 
//    <i> [Bits 2..0] RW (@ 0x40040FA6) PCLBUZn output clock select </i>
//    <edit> 
//      <loc> ( (unsigned char)((PCBZ_CKS1 >> 0) & 0x7), ((PCBZ_CKS1 = (PCBZ_CKS1 & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: PCBZ_CKS1_CSEL  -----------------------------------
// SVD Line: 7982

//  <item> SFDITEM_FIELD__PCBZ_CKS1_CSEL
//    <name> CSEL </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40040FA6) PCLBUZn output clock select </i>
//    <check> 
//      <loc> ( (unsigned char) PCBZ_CKS1 ) </loc>
//      <o.3..3> CSEL
//    </check>
//  </item>
//  


// -------------------------------  Field Item: PCBZ_CKS1_PCLOE  ----------------------------------
// SVD Line: 7988

//  <item> SFDITEM_FIELD__PCBZ_CKS1_PCLOE
//    <name> PCLOE </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40040FA6) PCLBUZn pin output enable </i>
//    <check> 
//      <loc> ( (unsigned char) PCBZ_CKS1 ) </loc>
//      <o.7..7> PCLOE
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: PCBZ_CKS1  -----------------------------------
// SVD Line: 7996

//  <rtree> SFDITEM_REG__PCBZ_CKS1
//    <name> CKS1 </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40040FA6) Clock output select registers 1 </i>
//    <loc> ( (unsigned char)((PCBZ_CKS1 >> 0) & 0xFF), ((PCBZ_CKS1 = (PCBZ_CKS1 & ~(0x8FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x8F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PCBZ_CKS1_CCS </item>
//    <item> SFDITEM_FIELD__PCBZ_CKS1_CSEL </item>
//    <item> SFDITEM_FIELD__PCBZ_CKS1_PCLOE </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: PCBZ  -------------------------------------
// SVD Line: 7951

//  <view> PCBZ
//    <name> PCBZ </name>
//    <item> SFDITEM_REG__PCBZ_CKS0 </item>
//    <item> SFDITEM_REG__PCBZ_CKS1 </item>
//  </view>
//  


// ---------------------------  Register Item Address: WDT_LOCKCTL  -------------------------------
// SVD Line: 8023

unsigned char WDT_LOCKCTL __AT (0x40020405);



// -------------------------------  Register Item: WDT_LOCKCTL  -----------------------------------
// SVD Line: 8023

//  <item> SFDITEM_REG__WDT_LOCKCTL
//    <name> LOCKCTL </name>
//    <i> [Bits 7..0] RW (@ 0x40020405) Lockup Watchdog timer enable register </i>
//    <edit> 
//      <loc> ( (unsigned char)((WDT_LOCKCTL >> 0) & 0xFFFFFFFF), ((WDT_LOCKCTL = (WDT_LOCKCTL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register Item Address: WDT_PRCR  --------------------------------
// SVD Line: 8030

unsigned char WDT_PRCR __AT (0x40020406);



// ---------------------------------  Register Item: WDT_PRCR  ------------------------------------
// SVD Line: 8030

//  <item> SFDITEM_REG__WDT_PRCR
//    <name> PRCR </name>
//    <i> [Bits 7..0] RW (@ 0x40020406) Lockup Watchdog timer enable protect register </i>
//    <edit> 
//      <loc> ( (unsigned char)((WDT_PRCR >> 0) & 0xFFFFFFFF), ((WDT_PRCR = (WDT_PRCR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register Item Address: WDT_WDTE  --------------------------------
// SVD Line: 8037

unsigned char WDT_WDTE __AT (0x40021001);



// ---------------------------------  Register Item: WDT_WDTE  ------------------------------------
// SVD Line: 8037

//  <item> SFDITEM_REG__WDT_WDTE
//    <name> WDTE </name>
//    <i> [Bits 7..0] RW (@ 0x40021001) Watchdog timer enable register </i>
//    <edit> 
//      <loc> ( (unsigned char)((WDT_WDTE >> 0) & 0xFFFFFFFF), ((WDT_WDTE = (WDT_WDTE & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------------  Peripheral View: WDT  --------------------------------------
// SVD Line: 8006

//  <view> WDT
//    <name> WDT </name>
//    <item> SFDITEM_REG__WDT_LOCKCTL </item>
//    <item> SFDITEM_REG__WDT_PRCR </item>
//    <item> SFDITEM_REG__WDT_WDTE </item>
//  </view>
//  


// -----------------------------  Register Item Address: ADC_ADM0  --------------------------------
// SVD Line: 8069

unsigned char ADC_ADM0 __AT (0x40045000);



// --------------------------------  Field Item: ADC_ADM0_ADCE  -----------------------------------
// SVD Line: 8078

//  <item> SFDITEM_FIELD__ADC_ADM0_ADCE
//    <name> ADCE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40045000) A/D enable </i>
//    <check> 
//      <loc> ( (unsigned char) ADC_ADM0 ) </loc>
//      <o.0..0> ADCE
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: ADC_ADM0_FR  ------------------------------------
// SVD Line: 8084

//  <item> SFDITEM_FIELD__ADC_ADM0_FR
//    <name> FR </name>
//    <rw> 
//    <i> [Bits 5..3] RW (@ 0x40045000) A/D conversion clock (fAD) select </i>
//    <edit> 
//      <loc> ( (unsigned char)((ADC_ADM0 >> 3) & 0x7), ((ADC_ADM0 = (ADC_ADM0 & ~(0x7UL << 3 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 3 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Field Item: ADC_ADM0_ADCS  -----------------------------------
// SVD Line: 8090

//  <item> SFDITEM_FIELD__ADC_ADM0_ADCS
//    <name> ADCS </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40045000) A/D conversion operation control </i>
//    <check> 
//      <loc> ( (unsigned char) ADC_ADM0 ) </loc>
//      <o.7..7> ADCS
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: ADC_ADM0  ------------------------------------
// SVD Line: 8069

//  <rtree> SFDITEM_REG__ADC_ADM0
//    <name> ADM0 </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40045000) A/D mode register 0 </i>
//    <loc> ( (unsigned char)((ADC_ADM0 >> 0) & 0xFF), ((ADC_ADM0 = (ADC_ADM0 & ~(0xB9UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xB9) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__ADC_ADM0_ADCE </item>
//    <item> SFDITEM_FIELD__ADC_ADM0_FR </item>
//    <item> SFDITEM_FIELD__ADC_ADM0_ADCS </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: ADC_ADM1  --------------------------------
// SVD Line: 8098

unsigned char ADC_ADM1 __AT (0x40045002);



// -------------------------------  Field Item: ADC_ADM1_ADSCM  -----------------------------------
// SVD Line: 8113

//  <item> SFDITEM_FIELD__ADC_ADM1_ADSCM
//    <name> ADSCM </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40045002) \nA/D conversion mode\n0 : Sequential = Sequential conversion mode\n1 : OneShot = One-shot conversion mode </i>
//    <combo> 
//      <loc> ( (unsigned char) ADC_ADM1 ) </loc>
//      <o.3..3> ADSCM
//        <0=> 0: Sequential = Sequential conversion mode
//        <1=> 1: OneShot = One-shot conversion mode
//    </combo>
//  </item>
//  


// --------------------------------  Field Item: ADC_ADM1_ADMD  -----------------------------------
// SVD Line: 8131

//  <item> SFDITEM_FIELD__ADC_ADM1_ADMD
//    <name> ADMD </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40045002) \nA/D conversion channel select mode\n0 : Select = Select mode\n1 : Scan = Scan mode </i>
//    <combo> 
//      <loc> ( (unsigned char) ADC_ADM1 ) </loc>
//      <o.7..7> ADMD
//        <0=> 0: Select = Select mode
//        <1=> 1: Scan = Scan mode
//    </combo>
//  </item>
//  


// --------------------------------  Register RTree: ADC_ADM1  ------------------------------------
// SVD Line: 8098

//  <rtree> SFDITEM_REG__ADC_ADM1
//    <name> ADM1 </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40045002) A/D mode register 1 </i>
//    <loc> ( (unsigned char)((ADC_ADM1 >> 0) & 0xFF), ((ADC_ADM1 = (ADC_ADM1 & ~(0x88UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x88) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__ADC_ADM1_ADSCM </item>
//    <item> SFDITEM_FIELD__ADC_ADM1_ADMD </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: ADC_ADM2  --------------------------------
// SVD Line: 8151

unsigned char ADC_ADM2 __AT (0x40045004);



// -------------------------------  Field Item: ADC_ADM2_CHRDE  -----------------------------------
// SVD Line: 8160

//  <item> SFDITEM_FIELD__ADC_ADM2_CHRDE
//    <name> CHRDE </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40045004) output CH number in A/D conversion result in Scan mode </i>
//    <check> 
//      <loc> ( (unsigned char) ADC_ADM2 ) </loc>
//      <o.1..1> CHRDE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: ADC_ADM2_ADRCK  -----------------------------------
// SVD Line: 8166

//  <item> SFDITEM_FIELD__ADC_ADM2_ADRCK
//    <name> ADRCK </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40045004) the upper limit and lower limit conversion result values </i>
//    <check> 
//      <loc> ( (unsigned char) ADC_ADM2 ) </loc>
//      <o.3..3> ADRCK
//    </check>
//  </item>
//  


// -------------------------------  Field Item: ADC_ADM2_ADREFP  ----------------------------------
// SVD Line: 8190

//  <item> SFDITEM_FIELD__ADC_ADM2_ADREFP
//    <name> ADREFP </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x40045004) \nSelection of the + side reference voltage of A/D converter\n0 : VDD = Supplied from VDD\n1 : AVREFP0 = Supplied from AVREFP\n2 : AVREFP1 = Supplied from inside AVREF of A/D\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned char) ADC_ADM2 ) </loc>
//      <o.7..6> ADREFP
//        <0=> 0: VDD = Supplied from VDD
//        <1=> 1: AVREFP0 = Supplied from AVREFP
//        <2=> 2: AVREFP1 = Supplied from inside AVREF of A/D
//        <3=> 3: 
//    </combo>
//  </item>
//  


// --------------------------------  Register RTree: ADC_ADM2  ------------------------------------
// SVD Line: 8151

//  <rtree> SFDITEM_REG__ADC_ADM2
//    <name> ADM2 </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40045004) A/D mode register 2 </i>
//    <loc> ( (unsigned char)((ADC_ADM2 >> 0) & 0xFF), ((ADC_ADM2 = (ADC_ADM2 & ~(0xCAUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xCA) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__ADC_ADM2_CHRDE </item>
//    <item> SFDITEM_FIELD__ADC_ADM2_ADRCK </item>
//    <item> SFDITEM_FIELD__ADC_ADM2_ADREFP </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: ADC_ADTRG  --------------------------------
// SVD Line: 8215

unsigned char ADC_ADTRG __AT (0x40045006);



// -------------------------------  Field Item: ADC_ADTRG_ADTMD  ----------------------------------
// SVD Line: 8224

//  <item> SFDITEM_FIELD__ADC_ADTRG_ADTMD
//    <name> ADTMD </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x40045006) A/D conversion trigger mode </i>
//    <edit> 
//      <loc> ( (unsigned char)((ADC_ADTRG >> 6) & 0x3), ((ADC_ADTRG = (ADC_ADTRG & ~(0x3UL << 6 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 6 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: ADC_ADTRG_ADTRS  ----------------------------------
// SVD Line: 8230

//  <item> SFDITEM_FIELD__ADC_ADTRG_ADTRS
//    <name> ADTRS </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x40045006) A/D hard trigger select </i>
//    <edit> 
//      <loc> ( (unsigned char)((ADC_ADTRG >> 0) & 0x3), ((ADC_ADTRG = (ADC_ADTRG & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: ADC_ADTRG  -----------------------------------
// SVD Line: 8215

//  <rtree> SFDITEM_REG__ADC_ADTRG
//    <name> ADTRG </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40045006) A/D mode register 2 </i>
//    <loc> ( (unsigned char)((ADC_ADTRG >> 0) & 0xFF), ((ADC_ADTRG = (ADC_ADTRG & ~(0xC3UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xC3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__ADC_ADTRG_ADTMD </item>
//    <item> SFDITEM_FIELD__ADC_ADTRG_ADTRS </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: ADC_ADS  ---------------------------------
// SVD Line: 8238

unsigned char ADC_ADS __AT (0x40045008);



// ---------------------------------  Register Item: ADC_ADS  -------------------------------------
// SVD Line: 8238

//  <item> SFDITEM_REG__ADC_ADS
//    <name> ADS </name>
//    <i> [Bits 7..0] RW (@ 0x40045008) Analog input channel specification register </i>
//    <edit> 
//      <loc> ( (unsigned char)((ADC_ADS >> 0) & 0xFFFFFFFF), ((ADC_ADS = (ADC_ADS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register Item Address: ADC_ADCR  --------------------------------
// SVD Line: 8247

unsigned short ADC_ADCR __AT (0x4004500E);



// ---------------------------------  Register Item: ADC_ADCR  ------------------------------------
// SVD Line: 8247

//  <item> SFDITEM_REG__ADC_ADCR
//    <name> ADCR </name>
//    <i> [Bits 15..0] RW (@ 0x4004500E) 12-bit A/D conversion result register </i>
//    <edit> 
//      <loc> ( (unsigned short)((ADC_ADCR >> 0) & 0xFFFFFFFF), ((ADC_ADCR = (ADC_ADCR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: ADC_ADCRH  --------------------------------
// SVD Line: 8256

unsigned char ADC_ADCRH __AT (0x4004500F);



// --------------------------------  Register Item: ADC_ADCRH  ------------------------------------
// SVD Line: 8256

//  <item> SFDITEM_REG__ADC_ADCRH
//    <name> ADCRH </name>
//    <i> [Bits 7..0] RW (@ 0x4004500F) Higher 8-bit A/D conversion result register </i>
//    <edit> 
//      <loc> ( (unsigned char)((ADC_ADCRH >> 0) & 0xFFFFFFFF), ((ADC_ADCRH = (ADC_ADCRH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register Item Address: ADC_ADUL  --------------------------------
// SVD Line: 8264

unsigned char ADC_ADUL __AT (0x4004500B);



// ---------------------------------  Register Item: ADC_ADUL  ------------------------------------
// SVD Line: 8264

//  <item> SFDITEM_REG__ADC_ADUL
//    <name> ADUL </name>
//    <i> [Bits 7..0] RW (@ 0x4004500B) Conversion result comparison upper limit setting register </i>
//    <edit> 
//      <loc> ( (unsigned char)((ADC_ADUL >> 0) & 0xFFFFFFFF), ((ADC_ADUL = (ADC_ADUL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register Item Address: ADC_ADLL  --------------------------------
// SVD Line: 8273

unsigned char ADC_ADLL __AT (0x4004500A);



// ---------------------------------  Register Item: ADC_ADLL  ------------------------------------
// SVD Line: 8273

//  <item> SFDITEM_REG__ADC_ADLL
//    <name> ADLL </name>
//    <i> [Bits 7..0] RW (@ 0x4004500A) Conversion result comparison lower limit setting register </i>
//    <edit> 
//      <loc> ( (unsigned char)((ADC_ADLL >> 0) & 0xFFFFFFFF), ((ADC_ADLL = (ADC_ADLL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register Item Address: ADC_ADSMPWAIT  ------------------------------
// SVD Line: 8309

unsigned char ADC_ADSMPWAIT __AT (0x40045015);



// ------------------------------  Register Item: ADC_ADSMPWAIT  ----------------------------------
// SVD Line: 8309

//  <item> SFDITEM_REG__ADC_ADSMPWAIT
//    <name> ADSMPWAIT </name>
//    <i> [Bits 7..0] RW (@ 0x40045015) A/D sampling wait control register </i>
//    <edit> 
//      <loc> ( (unsigned char)((ADC_ADSMPWAIT >> 0) & 0xFFFFFFFF), ((ADC_ADSMPWAIT = (ADC_ADSMPWAIT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------------  Peripheral View: ADC  --------------------------------------
// SVD Line: 8047

//  <view> ADC
//    <name> ADC </name>
//    <item> SFDITEM_REG__ADC_ADM0 </item>
//    <item> SFDITEM_REG__ADC_ADM1 </item>
//    <item> SFDITEM_REG__ADC_ADM2 </item>
//    <item> SFDITEM_REG__ADC_ADTRG </item>
//    <item> SFDITEM_REG__ADC_ADS </item>
//    <item> SFDITEM_REG__ADC_ADCR </item>
//    <item> SFDITEM_REG__ADC_ADCRH </item>
//    <item> SFDITEM_REG__ADC_ADUL </item>
//    <item> SFDITEM_REG__ADC_ADLL </item>
//    <item> SFDITEM_REG__ADC_ADSMPWAIT </item>
//  </view>
//  


// ----------------------------  Register Item Address: SCI0_SSR00  -------------------------------
// SVD Line: 8802

unsigned short SCI0_SSR00 __AT (0x40041100);



// -------------------------------  Field Item: SCI0_SSR00_OVF  -----------------------------------
// SVD Line: 8810

//  <item> SFDITEM_FIELD__SCI0_SSR00_OVF
//    <name> OVF </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x40041100) Overrun error detection flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SSR00 ) </loc>
//      <o.0..0> OVF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SSR00_PEF  -----------------------------------
// SVD Line: 8816

//  <item> SFDITEM_FIELD__SCI0_SSR00_PEF
//    <name> PEF </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x40041100) Parity error detection flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SSR00 ) </loc>
//      <o.1..1> PEF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SSR00_FEF  -----------------------------------
// SVD Line: 8822

//  <item> SFDITEM_FIELD__SCI0_SSR00_FEF
//    <name> FEF </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x40041100) Framing error detection flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SSR00 ) </loc>
//      <o.2..2> FEF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SSR00_BFF  -----------------------------------
// SVD Line: 8828

//  <item> SFDITEM_FIELD__SCI0_SSR00_BFF
//    <name> BFF </name>
//    <r> 
//    <i> [Bit 5] RO (@ 0x40041100) Buffer register status indication flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SSR00 ) </loc>
//      <o.5..5> BFF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SSR00_TSF  -----------------------------------
// SVD Line: 8834

//  <item> SFDITEM_FIELD__SCI0_SSR00_TSF
//    <name> TSF </name>
//    <r> 
//    <i> [Bit 6] RO (@ 0x40041100) Communication status indication flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SSR00 ) </loc>
//      <o.6..6> TSF
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: SCI0_SSR00  -----------------------------------
// SVD Line: 8802

//  <rtree> SFDITEM_REG__SCI0_SSR00
//    <name> SSR00 </name>
//    <r> 
//    <i> [Bits 15..0] RO (@ 0x40041100) Serial status register mn </i>
//    <loc> ( (unsigned short)((SCI0_SSR00 >> 0) & 0xFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SCI0_SSR00_OVF </item>
//    <item> SFDITEM_FIELD__SCI0_SSR00_PEF </item>
//    <item> SFDITEM_FIELD__SCI0_SSR00_FEF </item>
//    <item> SFDITEM_FIELD__SCI0_SSR00_BFF </item>
//    <item> SFDITEM_FIELD__SCI0_SSR00_TSF </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SCI0_SSR01  -------------------------------
// SVD Line: 8842

unsigned short SCI0_SSR01 __AT (0x40041102);



// -------------------------------  Field Item: SCI0_SSR01_OVF  -----------------------------------
// SVD Line: 8810

//  <item> SFDITEM_FIELD__SCI0_SSR01_OVF
//    <name> OVF </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x40041102) Overrun error detection flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SSR01 ) </loc>
//      <o.0..0> OVF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SSR01_PEF  -----------------------------------
// SVD Line: 8816

//  <item> SFDITEM_FIELD__SCI0_SSR01_PEF
//    <name> PEF </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x40041102) Parity error detection flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SSR01 ) </loc>
//      <o.1..1> PEF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SSR01_FEF  -----------------------------------
// SVD Line: 8822

//  <item> SFDITEM_FIELD__SCI0_SSR01_FEF
//    <name> FEF </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x40041102) Framing error detection flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SSR01 ) </loc>
//      <o.2..2> FEF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SSR01_BFF  -----------------------------------
// SVD Line: 8828

//  <item> SFDITEM_FIELD__SCI0_SSR01_BFF
//    <name> BFF </name>
//    <r> 
//    <i> [Bit 5] RO (@ 0x40041102) Buffer register status indication flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SSR01 ) </loc>
//      <o.5..5> BFF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SSR01_TSF  -----------------------------------
// SVD Line: 8834

//  <item> SFDITEM_FIELD__SCI0_SSR01_TSF
//    <name> TSF </name>
//    <r> 
//    <i> [Bit 6] RO (@ 0x40041102) Communication status indication flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SSR01 ) </loc>
//      <o.6..6> TSF
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: SCI0_SSR01  -----------------------------------
// SVD Line: 8842

//  <rtree> SFDITEM_REG__SCI0_SSR01
//    <name> SSR01 </name>
//    <r> 
//    <i> [Bits 15..0] RO (@ 0x40041102) Serial status register mn </i>
//    <loc> ( (unsigned short)((SCI0_SSR01 >> 0) & 0xFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SCI0_SSR01_OVF </item>
//    <item> SFDITEM_FIELD__SCI0_SSR01_PEF </item>
//    <item> SFDITEM_FIELD__SCI0_SSR01_FEF </item>
//    <item> SFDITEM_FIELD__SCI0_SSR01_BFF </item>
//    <item> SFDITEM_FIELD__SCI0_SSR01_TSF </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SCI0_SSR02  -------------------------------
// SVD Line: 8848

unsigned short SCI0_SSR02 __AT (0x40041104);



// -------------------------------  Field Item: SCI0_SSR02_OVF  -----------------------------------
// SVD Line: 8810

//  <item> SFDITEM_FIELD__SCI0_SSR02_OVF
//    <name> OVF </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x40041104) Overrun error detection flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SSR02 ) </loc>
//      <o.0..0> OVF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SSR02_PEF  -----------------------------------
// SVD Line: 8816

//  <item> SFDITEM_FIELD__SCI0_SSR02_PEF
//    <name> PEF </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x40041104) Parity error detection flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SSR02 ) </loc>
//      <o.1..1> PEF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SSR02_FEF  -----------------------------------
// SVD Line: 8822

//  <item> SFDITEM_FIELD__SCI0_SSR02_FEF
//    <name> FEF </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x40041104) Framing error detection flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SSR02 ) </loc>
//      <o.2..2> FEF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SSR02_BFF  -----------------------------------
// SVD Line: 8828

//  <item> SFDITEM_FIELD__SCI0_SSR02_BFF
//    <name> BFF </name>
//    <r> 
//    <i> [Bit 5] RO (@ 0x40041104) Buffer register status indication flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SSR02 ) </loc>
//      <o.5..5> BFF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SSR02_TSF  -----------------------------------
// SVD Line: 8834

//  <item> SFDITEM_FIELD__SCI0_SSR02_TSF
//    <name> TSF </name>
//    <r> 
//    <i> [Bit 6] RO (@ 0x40041104) Communication status indication flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SSR02 ) </loc>
//      <o.6..6> TSF
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: SCI0_SSR02  -----------------------------------
// SVD Line: 8848

//  <rtree> SFDITEM_REG__SCI0_SSR02
//    <name> SSR02 </name>
//    <r> 
//    <i> [Bits 15..0] RO (@ 0x40041104) Serial status register mn </i>
//    <loc> ( (unsigned short)((SCI0_SSR02 >> 0) & 0xFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SCI0_SSR02_OVF </item>
//    <item> SFDITEM_FIELD__SCI0_SSR02_PEF </item>
//    <item> SFDITEM_FIELD__SCI0_SSR02_FEF </item>
//    <item> SFDITEM_FIELD__SCI0_SSR02_BFF </item>
//    <item> SFDITEM_FIELD__SCI0_SSR02_TSF </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SCI0_SSR03  -------------------------------
// SVD Line: 8854

unsigned short SCI0_SSR03 __AT (0x40041106);



// -------------------------------  Field Item: SCI0_SSR03_OVF  -----------------------------------
// SVD Line: 8810

//  <item> SFDITEM_FIELD__SCI0_SSR03_OVF
//    <name> OVF </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x40041106) Overrun error detection flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SSR03 ) </loc>
//      <o.0..0> OVF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SSR03_PEF  -----------------------------------
// SVD Line: 8816

//  <item> SFDITEM_FIELD__SCI0_SSR03_PEF
//    <name> PEF </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x40041106) Parity error detection flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SSR03 ) </loc>
//      <o.1..1> PEF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SSR03_FEF  -----------------------------------
// SVD Line: 8822

//  <item> SFDITEM_FIELD__SCI0_SSR03_FEF
//    <name> FEF </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x40041106) Framing error detection flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SSR03 ) </loc>
//      <o.2..2> FEF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SSR03_BFF  -----------------------------------
// SVD Line: 8828

//  <item> SFDITEM_FIELD__SCI0_SSR03_BFF
//    <name> BFF </name>
//    <r> 
//    <i> [Bit 5] RO (@ 0x40041106) Buffer register status indication flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SSR03 ) </loc>
//      <o.5..5> BFF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SSR03_TSF  -----------------------------------
// SVD Line: 8834

//  <item> SFDITEM_FIELD__SCI0_SSR03_TSF
//    <name> TSF </name>
//    <r> 
//    <i> [Bit 6] RO (@ 0x40041106) Communication status indication flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SSR03 ) </loc>
//      <o.6..6> TSF
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: SCI0_SSR03  -----------------------------------
// SVD Line: 8854

//  <rtree> SFDITEM_REG__SCI0_SSR03
//    <name> SSR03 </name>
//    <r> 
//    <i> [Bits 15..0] RO (@ 0x40041106) Serial status register mn </i>
//    <loc> ( (unsigned short)((SCI0_SSR03 >> 0) & 0xFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SCI0_SSR03_OVF </item>
//    <item> SFDITEM_FIELD__SCI0_SSR03_PEF </item>
//    <item> SFDITEM_FIELD__SCI0_SSR03_FEF </item>
//    <item> SFDITEM_FIELD__SCI0_SSR03_BFF </item>
//    <item> SFDITEM_FIELD__SCI0_SSR03_TSF </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SCI0_SIR00  -------------------------------
// SVD Line: 8860

unsigned short SCI0_SIR00 __AT (0x40041108);



// -------------------------------  Field Item: SCI0_SIR00_OVCT  ----------------------------------
// SVD Line: 8868

//  <item> SFDITEM_FIELD__SCI0_SIR00_OVCT
//    <name> OVCT </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40041108) Clear trigger of overrun error flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SIR00 ) </loc>
//      <o.0..0> OVCT
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SIR00_PECT  ----------------------------------
// SVD Line: 8874

//  <item> SFDITEM_FIELD__SCI0_SIR00_PECT
//    <name> PECT </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40041108) Clear trigger of parity error flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SIR00 ) </loc>
//      <o.1..1> PECT
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SIR00_FECT  ----------------------------------
// SVD Line: 8880

//  <item> SFDITEM_FIELD__SCI0_SIR00_FECT
//    <name> FECT </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40041108) Clear trigger of framing error flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SIR00 ) </loc>
//      <o.2..2> FECT
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: SCI0_SIR00  -----------------------------------
// SVD Line: 8860

//  <rtree> SFDITEM_REG__SCI0_SIR00
//    <name> SIR00 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40041108) Serial flag clear trigger register mn </i>
//    <loc> ( (unsigned short)((SCI0_SIR00 >> 0) & 0xFFFF), ((SCI0_SIR00 = (SCI0_SIR00 & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x7) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SCI0_SIR00_OVCT </item>
//    <item> SFDITEM_FIELD__SCI0_SIR00_PECT </item>
//    <item> SFDITEM_FIELD__SCI0_SIR00_FECT </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SCI0_SIR01  -------------------------------
// SVD Line: 8888

unsigned short SCI0_SIR01 __AT (0x4004110A);



// -------------------------------  Field Item: SCI0_SIR01_OVCT  ----------------------------------
// SVD Line: 8868

//  <item> SFDITEM_FIELD__SCI0_SIR01_OVCT
//    <name> OVCT </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4004110A) Clear trigger of overrun error flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SIR01 ) </loc>
//      <o.0..0> OVCT
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SIR01_PECT  ----------------------------------
// SVD Line: 8874

//  <item> SFDITEM_FIELD__SCI0_SIR01_PECT
//    <name> PECT </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4004110A) Clear trigger of parity error flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SIR01 ) </loc>
//      <o.1..1> PECT
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SIR01_FECT  ----------------------------------
// SVD Line: 8880

//  <item> SFDITEM_FIELD__SCI0_SIR01_FECT
//    <name> FECT </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4004110A) Clear trigger of framing error flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SIR01 ) </loc>
//      <o.2..2> FECT
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: SCI0_SIR01  -----------------------------------
// SVD Line: 8888

//  <rtree> SFDITEM_REG__SCI0_SIR01
//    <name> SIR01 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4004110A) Serial flag clear trigger register mn </i>
//    <loc> ( (unsigned short)((SCI0_SIR01 >> 0) & 0xFFFF), ((SCI0_SIR01 = (SCI0_SIR01 & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x7) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SCI0_SIR01_OVCT </item>
//    <item> SFDITEM_FIELD__SCI0_SIR01_PECT </item>
//    <item> SFDITEM_FIELD__SCI0_SIR01_FECT </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SCI0_SIR02  -------------------------------
// SVD Line: 8894

unsigned short SCI0_SIR02 __AT (0x4004110C);



// -------------------------------  Field Item: SCI0_SIR02_OVCT  ----------------------------------
// SVD Line: 8868

//  <item> SFDITEM_FIELD__SCI0_SIR02_OVCT
//    <name> OVCT </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4004110C) Clear trigger of overrun error flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SIR02 ) </loc>
//      <o.0..0> OVCT
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SIR02_PECT  ----------------------------------
// SVD Line: 8874

//  <item> SFDITEM_FIELD__SCI0_SIR02_PECT
//    <name> PECT </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4004110C) Clear trigger of parity error flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SIR02 ) </loc>
//      <o.1..1> PECT
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SIR02_FECT  ----------------------------------
// SVD Line: 8880

//  <item> SFDITEM_FIELD__SCI0_SIR02_FECT
//    <name> FECT </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4004110C) Clear trigger of framing error flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SIR02 ) </loc>
//      <o.2..2> FECT
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: SCI0_SIR02  -----------------------------------
// SVD Line: 8894

//  <rtree> SFDITEM_REG__SCI0_SIR02
//    <name> SIR02 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4004110C) Serial flag clear trigger register mn </i>
//    <loc> ( (unsigned short)((SCI0_SIR02 >> 0) & 0xFFFF), ((SCI0_SIR02 = (SCI0_SIR02 & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x7) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SCI0_SIR02_OVCT </item>
//    <item> SFDITEM_FIELD__SCI0_SIR02_PECT </item>
//    <item> SFDITEM_FIELD__SCI0_SIR02_FECT </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SCI0_SIR03  -------------------------------
// SVD Line: 8900

unsigned short SCI0_SIR03 __AT (0x4004110E);



// -------------------------------  Field Item: SCI0_SIR03_OVCT  ----------------------------------
// SVD Line: 8868

//  <item> SFDITEM_FIELD__SCI0_SIR03_OVCT
//    <name> OVCT </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4004110E) Clear trigger of overrun error flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SIR03 ) </loc>
//      <o.0..0> OVCT
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SIR03_PECT  ----------------------------------
// SVD Line: 8874

//  <item> SFDITEM_FIELD__SCI0_SIR03_PECT
//    <name> PECT </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4004110E) Clear trigger of parity error flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SIR03 ) </loc>
//      <o.1..1> PECT
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SIR03_FECT  ----------------------------------
// SVD Line: 8880

//  <item> SFDITEM_FIELD__SCI0_SIR03_FECT
//    <name> FECT </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4004110E) Clear trigger of framing error flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SIR03 ) </loc>
//      <o.2..2> FECT
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: SCI0_SIR03  -----------------------------------
// SVD Line: 8900

//  <rtree> SFDITEM_REG__SCI0_SIR03
//    <name> SIR03 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4004110E) Serial flag clear trigger register mn </i>
//    <loc> ( (unsigned short)((SCI0_SIR03 >> 0) & 0xFFFF), ((SCI0_SIR03 = (SCI0_SIR03 & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x7) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SCI0_SIR03_OVCT </item>
//    <item> SFDITEM_FIELD__SCI0_SIR03_PECT </item>
//    <item> SFDITEM_FIELD__SCI0_SIR03_FECT </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SCI0_SMR00  -------------------------------
// SVD Line: 8906

unsigned short SCI0_SMR00 __AT (0x40041110);



// --------------------------------  Field Item: SCI0_SMR00_MD  -----------------------------------
// SVD Line: 8914

//  <item> SFDITEM_FIELD__SCI0_SMR00_MD
//    <name> MD </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40041110) Setting of operation mode of channel n </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCI0_SMR00 >> 0) & 0xF), ((SCI0_SMR00 = (SCI0_SMR00 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SMR00_SIS  -----------------------------------
// SVD Line: 8920

//  <item> SFDITEM_FIELD__SCI0_SMR00_SIS
//    <name> SIS </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40041110) Controls inversion of level of receive data of channel n in UART mode </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SMR00 ) </loc>
//      <o.6..6> SIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SMR00_STS  -----------------------------------
// SVD Line: 8926

//  <item> SFDITEM_FIELD__SCI0_SMR00_STS
//    <name> STS </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40041110) Selection of start trigger source </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SMR00 ) </loc>
//      <o.8..8> STS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SMR00_CCS  -----------------------------------
// SVD Line: 8932

//  <item> SFDITEM_FIELD__SCI0_SMR00_CCS
//    <name> CCS </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x40041110) Selection of transfer clock (fTCLK) of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SMR00 ) </loc>
//      <o.14..14> CCS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SMR00_CKS  -----------------------------------
// SVD Line: 8938

//  <item> SFDITEM_FIELD__SCI0_SMR00_CKS
//    <name> CKS </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40041110) Selection of operation clock (fMCK) of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SMR00 ) </loc>
//      <o.15..15> CKS
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: SCI0_SMR00  -----------------------------------
// SVD Line: 8906

//  <rtree> SFDITEM_REG__SCI0_SMR00
//    <name> SMR00 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40041110) Serial mode register mn </i>
//    <loc> ( (unsigned short)((SCI0_SMR00 >> 0) & 0xFFFF), ((SCI0_SMR00 = (SCI0_SMR00 & ~(0xC14FUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xC14F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SCI0_SMR00_MD </item>
//    <item> SFDITEM_FIELD__SCI0_SMR00_SIS </item>
//    <item> SFDITEM_FIELD__SCI0_SMR00_STS </item>
//    <item> SFDITEM_FIELD__SCI0_SMR00_CCS </item>
//    <item> SFDITEM_FIELD__SCI0_SMR00_CKS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SCI0_SMR01  -------------------------------
// SVD Line: 8946

unsigned short SCI0_SMR01 __AT (0x40041112);



// --------------------------------  Field Item: SCI0_SMR01_MD  -----------------------------------
// SVD Line: 8914

//  <item> SFDITEM_FIELD__SCI0_SMR01_MD
//    <name> MD </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40041112) Setting of operation mode of channel n </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCI0_SMR01 >> 0) & 0xF), ((SCI0_SMR01 = (SCI0_SMR01 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SMR01_SIS  -----------------------------------
// SVD Line: 8920

//  <item> SFDITEM_FIELD__SCI0_SMR01_SIS
//    <name> SIS </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40041112) Controls inversion of level of receive data of channel n in UART mode </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SMR01 ) </loc>
//      <o.6..6> SIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SMR01_STS  -----------------------------------
// SVD Line: 8926

//  <item> SFDITEM_FIELD__SCI0_SMR01_STS
//    <name> STS </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40041112) Selection of start trigger source </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SMR01 ) </loc>
//      <o.8..8> STS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SMR01_CCS  -----------------------------------
// SVD Line: 8932

//  <item> SFDITEM_FIELD__SCI0_SMR01_CCS
//    <name> CCS </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x40041112) Selection of transfer clock (fTCLK) of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SMR01 ) </loc>
//      <o.14..14> CCS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SMR01_CKS  -----------------------------------
// SVD Line: 8938

//  <item> SFDITEM_FIELD__SCI0_SMR01_CKS
//    <name> CKS </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40041112) Selection of operation clock (fMCK) of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SMR01 ) </loc>
//      <o.15..15> CKS
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: SCI0_SMR01  -----------------------------------
// SVD Line: 8946

//  <rtree> SFDITEM_REG__SCI0_SMR01
//    <name> SMR01 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40041112) Serial mode register mn </i>
//    <loc> ( (unsigned short)((SCI0_SMR01 >> 0) & 0xFFFF), ((SCI0_SMR01 = (SCI0_SMR01 & ~(0xC14FUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xC14F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SCI0_SMR01_MD </item>
//    <item> SFDITEM_FIELD__SCI0_SMR01_SIS </item>
//    <item> SFDITEM_FIELD__SCI0_SMR01_STS </item>
//    <item> SFDITEM_FIELD__SCI0_SMR01_CCS </item>
//    <item> SFDITEM_FIELD__SCI0_SMR01_CKS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SCI0_SMR02  -------------------------------
// SVD Line: 8952

unsigned short SCI0_SMR02 __AT (0x40041114);



// --------------------------------  Field Item: SCI0_SMR02_MD  -----------------------------------
// SVD Line: 8914

//  <item> SFDITEM_FIELD__SCI0_SMR02_MD
//    <name> MD </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40041114) Setting of operation mode of channel n </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCI0_SMR02 >> 0) & 0xF), ((SCI0_SMR02 = (SCI0_SMR02 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SMR02_SIS  -----------------------------------
// SVD Line: 8920

//  <item> SFDITEM_FIELD__SCI0_SMR02_SIS
//    <name> SIS </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40041114) Controls inversion of level of receive data of channel n in UART mode </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SMR02 ) </loc>
//      <o.6..6> SIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SMR02_STS  -----------------------------------
// SVD Line: 8926

//  <item> SFDITEM_FIELD__SCI0_SMR02_STS
//    <name> STS </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40041114) Selection of start trigger source </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SMR02 ) </loc>
//      <o.8..8> STS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SMR02_CCS  -----------------------------------
// SVD Line: 8932

//  <item> SFDITEM_FIELD__SCI0_SMR02_CCS
//    <name> CCS </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x40041114) Selection of transfer clock (fTCLK) of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SMR02 ) </loc>
//      <o.14..14> CCS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SMR02_CKS  -----------------------------------
// SVD Line: 8938

//  <item> SFDITEM_FIELD__SCI0_SMR02_CKS
//    <name> CKS </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40041114) Selection of operation clock (fMCK) of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SMR02 ) </loc>
//      <o.15..15> CKS
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: SCI0_SMR02  -----------------------------------
// SVD Line: 8952

//  <rtree> SFDITEM_REG__SCI0_SMR02
//    <name> SMR02 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40041114) Serial mode register mn </i>
//    <loc> ( (unsigned short)((SCI0_SMR02 >> 0) & 0xFFFF), ((SCI0_SMR02 = (SCI0_SMR02 & ~(0xC14FUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xC14F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SCI0_SMR02_MD </item>
//    <item> SFDITEM_FIELD__SCI0_SMR02_SIS </item>
//    <item> SFDITEM_FIELD__SCI0_SMR02_STS </item>
//    <item> SFDITEM_FIELD__SCI0_SMR02_CCS </item>
//    <item> SFDITEM_FIELD__SCI0_SMR02_CKS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SCI0_SMR03  -------------------------------
// SVD Line: 8958

unsigned short SCI0_SMR03 __AT (0x40041116);



// --------------------------------  Field Item: SCI0_SMR03_MD  -----------------------------------
// SVD Line: 8914

//  <item> SFDITEM_FIELD__SCI0_SMR03_MD
//    <name> MD </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40041116) Setting of operation mode of channel n </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCI0_SMR03 >> 0) & 0xF), ((SCI0_SMR03 = (SCI0_SMR03 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SMR03_SIS  -----------------------------------
// SVD Line: 8920

//  <item> SFDITEM_FIELD__SCI0_SMR03_SIS
//    <name> SIS </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40041116) Controls inversion of level of receive data of channel n in UART mode </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SMR03 ) </loc>
//      <o.6..6> SIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SMR03_STS  -----------------------------------
// SVD Line: 8926

//  <item> SFDITEM_FIELD__SCI0_SMR03_STS
//    <name> STS </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40041116) Selection of start trigger source </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SMR03 ) </loc>
//      <o.8..8> STS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SMR03_CCS  -----------------------------------
// SVD Line: 8932

//  <item> SFDITEM_FIELD__SCI0_SMR03_CCS
//    <name> CCS </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x40041116) Selection of transfer clock (fTCLK) of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SMR03 ) </loc>
//      <o.14..14> CCS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SMR03_CKS  -----------------------------------
// SVD Line: 8938

//  <item> SFDITEM_FIELD__SCI0_SMR03_CKS
//    <name> CKS </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40041116) Selection of operation clock (fMCK) of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SMR03 ) </loc>
//      <o.15..15> CKS
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: SCI0_SMR03  -----------------------------------
// SVD Line: 8958

//  <rtree> SFDITEM_REG__SCI0_SMR03
//    <name> SMR03 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40041116) Serial mode register mn </i>
//    <loc> ( (unsigned short)((SCI0_SMR03 >> 0) & 0xFFFF), ((SCI0_SMR03 = (SCI0_SMR03 & ~(0xC14FUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xC14F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SCI0_SMR03_MD </item>
//    <item> SFDITEM_FIELD__SCI0_SMR03_SIS </item>
//    <item> SFDITEM_FIELD__SCI0_SMR03_STS </item>
//    <item> SFDITEM_FIELD__SCI0_SMR03_CCS </item>
//    <item> SFDITEM_FIELD__SCI0_SMR03_CKS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SCI0_SCR00  -------------------------------
// SVD Line: 8964

unsigned short SCI0_SCR00 __AT (0x40041118);



// -------------------------------  Field Item: SCI0_SCR00_DLS  -----------------------------------
// SVD Line: 8973

//  <item> SFDITEM_FIELD__SCI0_SCR00_DLS
//    <name> DLS </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x40041118) Setting of data length in SPI and UART modes </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCI0_SCR00 >> 0) & 0x3), ((SCI0_SCR00 = (SCI0_SCR00 & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SCR00_SLC  -----------------------------------
// SVD Line: 8979

//  <item> SFDITEM_FIELD__SCI0_SCR00_SLC
//    <name> SLC </name>
//    <rw> 
//    <i> [Bits 5..4] RW (@ 0x40041118) Setting of stop bit in UART mode </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCI0_SCR00 >> 4) & 0x3), ((SCI0_SCR00 = (SCI0_SCR00 & ~(0x3UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SCR00_DIR  -----------------------------------
// SVD Line: 8985

//  <item> SFDITEM_FIELD__SCI0_SCR00_DIR
//    <name> DIR </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40041118) Selection of data transfer sequence in SPI and UART modes </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SCR00 ) </loc>
//      <o.7..7> DIR
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SCR00_PTC  -----------------------------------
// SVD Line: 8991

//  <item> SFDITEM_FIELD__SCI0_SCR00_PTC
//    <name> PTC </name>
//    <rw> 
//    <i> [Bits 9..8] RW (@ 0x40041118) Setting of parity bit in UART mode </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCI0_SCR00 >> 8) & 0x3), ((SCI0_SCR00 = (SCI0_SCR00 & ~(0x3UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SCR00_EOC  -----------------------------------
// SVD Line: 8997

//  <item> SFDITEM_FIELD__SCI0_SCR00_EOC
//    <name> EOC </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x40041118) Mask control of error interrupt signal (INTSREx (x = 0 to 2)) </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SCR00 ) </loc>
//      <o.10..10> EOC
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SCR00_CKP  -----------------------------------
// SVD Line: 9003

//  <item> SFDITEM_FIELD__SCI0_SCR00_CKP
//    <name> CKP </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x40041118) Selection of clock phase in SPI mode </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SCR00 ) </loc>
//      <o.12..12> CKP
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SCR00_DAP  -----------------------------------
// SVD Line: 9009

//  <item> SFDITEM_FIELD__SCI0_SCR00_DAP
//    <name> DAP </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x40041118) Selection of data phase in SPI mode </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SCR00 ) </loc>
//      <o.13..13> DAP
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SCR00_RXE  -----------------------------------
// SVD Line: 9015

//  <item> SFDITEM_FIELD__SCI0_SCR00_RXE
//    <name> RXE </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x40041118) Reception enable </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SCR00 ) </loc>
//      <o.14..14> RXE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SCR00_TXE  -----------------------------------
// SVD Line: 9021

//  <item> SFDITEM_FIELD__SCI0_SCR00_TXE
//    <name> TXE </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40041118) Transmission enable </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SCR00 ) </loc>
//      <o.15..15> TXE
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: SCI0_SCR00  -----------------------------------
// SVD Line: 8964

//  <rtree> SFDITEM_REG__SCI0_SCR00
//    <name> SCR00 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40041118) Serial communication operation setting register mn </i>
//    <loc> ( (unsigned short)((SCI0_SCR00 >> 0) & 0xFFFF), ((SCI0_SCR00 = (SCI0_SCR00 & ~(0xF7B3UL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xF7B3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SCI0_SCR00_DLS </item>
//    <item> SFDITEM_FIELD__SCI0_SCR00_SLC </item>
//    <item> SFDITEM_FIELD__SCI0_SCR00_DIR </item>
//    <item> SFDITEM_FIELD__SCI0_SCR00_PTC </item>
//    <item> SFDITEM_FIELD__SCI0_SCR00_EOC </item>
//    <item> SFDITEM_FIELD__SCI0_SCR00_CKP </item>
//    <item> SFDITEM_FIELD__SCI0_SCR00_DAP </item>
//    <item> SFDITEM_FIELD__SCI0_SCR00_RXE </item>
//    <item> SFDITEM_FIELD__SCI0_SCR00_TXE </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SCI0_SCR01  -------------------------------
// SVD Line: 9029

unsigned short SCI0_SCR01 __AT (0x4004111A);



// -------------------------------  Field Item: SCI0_SCR01_DLS  -----------------------------------
// SVD Line: 8973

//  <item> SFDITEM_FIELD__SCI0_SCR01_DLS
//    <name> DLS </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x4004111A) Setting of data length in SPI and UART modes </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCI0_SCR01 >> 0) & 0x3), ((SCI0_SCR01 = (SCI0_SCR01 & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SCR01_SLC  -----------------------------------
// SVD Line: 8979

//  <item> SFDITEM_FIELD__SCI0_SCR01_SLC
//    <name> SLC </name>
//    <rw> 
//    <i> [Bits 5..4] RW (@ 0x4004111A) Setting of stop bit in UART mode </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCI0_SCR01 >> 4) & 0x3), ((SCI0_SCR01 = (SCI0_SCR01 & ~(0x3UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SCR01_DIR  -----------------------------------
// SVD Line: 8985

//  <item> SFDITEM_FIELD__SCI0_SCR01_DIR
//    <name> DIR </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4004111A) Selection of data transfer sequence in SPI and UART modes </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SCR01 ) </loc>
//      <o.7..7> DIR
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SCR01_PTC  -----------------------------------
// SVD Line: 8991

//  <item> SFDITEM_FIELD__SCI0_SCR01_PTC
//    <name> PTC </name>
//    <rw> 
//    <i> [Bits 9..8] RW (@ 0x4004111A) Setting of parity bit in UART mode </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCI0_SCR01 >> 8) & 0x3), ((SCI0_SCR01 = (SCI0_SCR01 & ~(0x3UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SCR01_EOC  -----------------------------------
// SVD Line: 8997

//  <item> SFDITEM_FIELD__SCI0_SCR01_EOC
//    <name> EOC </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x4004111A) Mask control of error interrupt signal (INTSREx (x = 0 to 2)) </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SCR01 ) </loc>
//      <o.10..10> EOC
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SCR01_CKP  -----------------------------------
// SVD Line: 9003

//  <item> SFDITEM_FIELD__SCI0_SCR01_CKP
//    <name> CKP </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x4004111A) Selection of clock phase in SPI mode </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SCR01 ) </loc>
//      <o.12..12> CKP
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SCR01_DAP  -----------------------------------
// SVD Line: 9009

//  <item> SFDITEM_FIELD__SCI0_SCR01_DAP
//    <name> DAP </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x4004111A) Selection of data phase in SPI mode </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SCR01 ) </loc>
//      <o.13..13> DAP
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SCR01_RXE  -----------------------------------
// SVD Line: 9015

//  <item> SFDITEM_FIELD__SCI0_SCR01_RXE
//    <name> RXE </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x4004111A) Reception enable </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SCR01 ) </loc>
//      <o.14..14> RXE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SCR01_TXE  -----------------------------------
// SVD Line: 9021

//  <item> SFDITEM_FIELD__SCI0_SCR01_TXE
//    <name> TXE </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x4004111A) Transmission enable </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SCR01 ) </loc>
//      <o.15..15> TXE
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: SCI0_SCR01  -----------------------------------
// SVD Line: 9029

//  <rtree> SFDITEM_REG__SCI0_SCR01
//    <name> SCR01 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4004111A) Serial communication operation setting register mn </i>
//    <loc> ( (unsigned short)((SCI0_SCR01 >> 0) & 0xFFFF), ((SCI0_SCR01 = (SCI0_SCR01 & ~(0xF7B3UL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xF7B3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SCI0_SCR01_DLS </item>
//    <item> SFDITEM_FIELD__SCI0_SCR01_SLC </item>
//    <item> SFDITEM_FIELD__SCI0_SCR01_DIR </item>
//    <item> SFDITEM_FIELD__SCI0_SCR01_PTC </item>
//    <item> SFDITEM_FIELD__SCI0_SCR01_EOC </item>
//    <item> SFDITEM_FIELD__SCI0_SCR01_CKP </item>
//    <item> SFDITEM_FIELD__SCI0_SCR01_DAP </item>
//    <item> SFDITEM_FIELD__SCI0_SCR01_RXE </item>
//    <item> SFDITEM_FIELD__SCI0_SCR01_TXE </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SCI0_SCR02  -------------------------------
// SVD Line: 9035

unsigned short SCI0_SCR02 __AT (0x4004111C);



// -------------------------------  Field Item: SCI0_SCR02_DLS  -----------------------------------
// SVD Line: 8973

//  <item> SFDITEM_FIELD__SCI0_SCR02_DLS
//    <name> DLS </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x4004111C) Setting of data length in SPI and UART modes </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCI0_SCR02 >> 0) & 0x3), ((SCI0_SCR02 = (SCI0_SCR02 & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SCR02_SLC  -----------------------------------
// SVD Line: 8979

//  <item> SFDITEM_FIELD__SCI0_SCR02_SLC
//    <name> SLC </name>
//    <rw> 
//    <i> [Bits 5..4] RW (@ 0x4004111C) Setting of stop bit in UART mode </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCI0_SCR02 >> 4) & 0x3), ((SCI0_SCR02 = (SCI0_SCR02 & ~(0x3UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SCR02_DIR  -----------------------------------
// SVD Line: 8985

//  <item> SFDITEM_FIELD__SCI0_SCR02_DIR
//    <name> DIR </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4004111C) Selection of data transfer sequence in SPI and UART modes </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SCR02 ) </loc>
//      <o.7..7> DIR
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SCR02_PTC  -----------------------------------
// SVD Line: 8991

//  <item> SFDITEM_FIELD__SCI0_SCR02_PTC
//    <name> PTC </name>
//    <rw> 
//    <i> [Bits 9..8] RW (@ 0x4004111C) Setting of parity bit in UART mode </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCI0_SCR02 >> 8) & 0x3), ((SCI0_SCR02 = (SCI0_SCR02 & ~(0x3UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SCR02_EOC  -----------------------------------
// SVD Line: 8997

//  <item> SFDITEM_FIELD__SCI0_SCR02_EOC
//    <name> EOC </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x4004111C) Mask control of error interrupt signal (INTSREx (x = 0 to 2)) </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SCR02 ) </loc>
//      <o.10..10> EOC
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SCR02_CKP  -----------------------------------
// SVD Line: 9003

//  <item> SFDITEM_FIELD__SCI0_SCR02_CKP
//    <name> CKP </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x4004111C) Selection of clock phase in SPI mode </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SCR02 ) </loc>
//      <o.12..12> CKP
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SCR02_DAP  -----------------------------------
// SVD Line: 9009

//  <item> SFDITEM_FIELD__SCI0_SCR02_DAP
//    <name> DAP </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x4004111C) Selection of data phase in SPI mode </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SCR02 ) </loc>
//      <o.13..13> DAP
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SCR02_RXE  -----------------------------------
// SVD Line: 9015

//  <item> SFDITEM_FIELD__SCI0_SCR02_RXE
//    <name> RXE </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x4004111C) Reception enable </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SCR02 ) </loc>
//      <o.14..14> RXE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SCR02_TXE  -----------------------------------
// SVD Line: 9021

//  <item> SFDITEM_FIELD__SCI0_SCR02_TXE
//    <name> TXE </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x4004111C) Transmission enable </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SCR02 ) </loc>
//      <o.15..15> TXE
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: SCI0_SCR02  -----------------------------------
// SVD Line: 9035

//  <rtree> SFDITEM_REG__SCI0_SCR02
//    <name> SCR02 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4004111C) Serial communication operation setting register mn </i>
//    <loc> ( (unsigned short)((SCI0_SCR02 >> 0) & 0xFFFF), ((SCI0_SCR02 = (SCI0_SCR02 & ~(0xF7B3UL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xF7B3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SCI0_SCR02_DLS </item>
//    <item> SFDITEM_FIELD__SCI0_SCR02_SLC </item>
//    <item> SFDITEM_FIELD__SCI0_SCR02_DIR </item>
//    <item> SFDITEM_FIELD__SCI0_SCR02_PTC </item>
//    <item> SFDITEM_FIELD__SCI0_SCR02_EOC </item>
//    <item> SFDITEM_FIELD__SCI0_SCR02_CKP </item>
//    <item> SFDITEM_FIELD__SCI0_SCR02_DAP </item>
//    <item> SFDITEM_FIELD__SCI0_SCR02_RXE </item>
//    <item> SFDITEM_FIELD__SCI0_SCR02_TXE </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SCI0_SCR03  -------------------------------
// SVD Line: 9041

unsigned short SCI0_SCR03 __AT (0x4004111E);



// -------------------------------  Field Item: SCI0_SCR03_DLS  -----------------------------------
// SVD Line: 8973

//  <item> SFDITEM_FIELD__SCI0_SCR03_DLS
//    <name> DLS </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x4004111E) Setting of data length in SPI and UART modes </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCI0_SCR03 >> 0) & 0x3), ((SCI0_SCR03 = (SCI0_SCR03 & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SCR03_SLC  -----------------------------------
// SVD Line: 8979

//  <item> SFDITEM_FIELD__SCI0_SCR03_SLC
//    <name> SLC </name>
//    <rw> 
//    <i> [Bits 5..4] RW (@ 0x4004111E) Setting of stop bit in UART mode </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCI0_SCR03 >> 4) & 0x3), ((SCI0_SCR03 = (SCI0_SCR03 & ~(0x3UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SCR03_DIR  -----------------------------------
// SVD Line: 8985

//  <item> SFDITEM_FIELD__SCI0_SCR03_DIR
//    <name> DIR </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4004111E) Selection of data transfer sequence in SPI and UART modes </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SCR03 ) </loc>
//      <o.7..7> DIR
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SCR03_PTC  -----------------------------------
// SVD Line: 8991

//  <item> SFDITEM_FIELD__SCI0_SCR03_PTC
//    <name> PTC </name>
//    <rw> 
//    <i> [Bits 9..8] RW (@ 0x4004111E) Setting of parity bit in UART mode </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCI0_SCR03 >> 8) & 0x3), ((SCI0_SCR03 = (SCI0_SCR03 & ~(0x3UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SCR03_EOC  -----------------------------------
// SVD Line: 8997

//  <item> SFDITEM_FIELD__SCI0_SCR03_EOC
//    <name> EOC </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x4004111E) Mask control of error interrupt signal (INTSREx (x = 0 to 2)) </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SCR03 ) </loc>
//      <o.10..10> EOC
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SCR03_CKP  -----------------------------------
// SVD Line: 9003

//  <item> SFDITEM_FIELD__SCI0_SCR03_CKP
//    <name> CKP </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x4004111E) Selection of clock phase in SPI mode </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SCR03 ) </loc>
//      <o.12..12> CKP
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SCR03_DAP  -----------------------------------
// SVD Line: 9009

//  <item> SFDITEM_FIELD__SCI0_SCR03_DAP
//    <name> DAP </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x4004111E) Selection of data phase in SPI mode </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SCR03 ) </loc>
//      <o.13..13> DAP
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SCR03_RXE  -----------------------------------
// SVD Line: 9015

//  <item> SFDITEM_FIELD__SCI0_SCR03_RXE
//    <name> RXE </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x4004111E) Reception enable </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SCR03 ) </loc>
//      <o.14..14> RXE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SCR03_TXE  -----------------------------------
// SVD Line: 9021

//  <item> SFDITEM_FIELD__SCI0_SCR03_TXE
//    <name> TXE </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x4004111E) Transmission enable </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SCR03 ) </loc>
//      <o.15..15> TXE
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: SCI0_SCR03  -----------------------------------
// SVD Line: 9041

//  <rtree> SFDITEM_REG__SCI0_SCR03
//    <name> SCR03 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4004111E) Serial communication operation setting register mn </i>
//    <loc> ( (unsigned short)((SCI0_SCR03 >> 0) & 0xFFFF), ((SCI0_SCR03 = (SCI0_SCR03 & ~(0xF7B3UL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xF7B3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SCI0_SCR03_DLS </item>
//    <item> SFDITEM_FIELD__SCI0_SCR03_SLC </item>
//    <item> SFDITEM_FIELD__SCI0_SCR03_DIR </item>
//    <item> SFDITEM_FIELD__SCI0_SCR03_PTC </item>
//    <item> SFDITEM_FIELD__SCI0_SCR03_EOC </item>
//    <item> SFDITEM_FIELD__SCI0_SCR03_CKP </item>
//    <item> SFDITEM_FIELD__SCI0_SCR03_DAP </item>
//    <item> SFDITEM_FIELD__SCI0_SCR03_RXE </item>
//    <item> SFDITEM_FIELD__SCI0_SCR03_TXE </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: SCI0_SE0  --------------------------------
// SVD Line: 9047

unsigned short SCI0_SE0 __AT (0x40041120);



// --------------------------------  Field Item: SCI0_SE0_SE00  -----------------------------------
// SVD Line: 9056

//  <item> SFDITEM_FIELD__SCI0_SE0_SE00
//    <name> SE00 </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x40041120) Indication of operation enable/stop status of channel 0 </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SE0 ) </loc>
//      <o.0..0> SE00
//    </check>
//  </item>
//  


// --------------------------------  Field Item: SCI0_SE0_SE01  -----------------------------------
// SVD Line: 9062

//  <item> SFDITEM_FIELD__SCI0_SE0_SE01
//    <name> SE01 </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x40041120) Indication of operation enable/stop status of channel 1 </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SE0 ) </loc>
//      <o.1..1> SE01
//    </check>
//  </item>
//  


// --------------------------------  Field Item: SCI0_SE0_SE02  -----------------------------------
// SVD Line: 9068

//  <item> SFDITEM_FIELD__SCI0_SE0_SE02
//    <name> SE02 </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x40041120) Indication of operation enable/stop status of channel 2 </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SE0 ) </loc>
//      <o.2..2> SE02
//    </check>
//  </item>
//  


// --------------------------------  Field Item: SCI0_SE0_SE03  -----------------------------------
// SVD Line: 9074

//  <item> SFDITEM_FIELD__SCI0_SE0_SE03
//    <name> SE03 </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x40041120) Indication of operation enable/stop status of channel 3 </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SE0 ) </loc>
//      <o.3..3> SE03
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: SCI0_SE0  ------------------------------------
// SVD Line: 9047

//  <rtree> SFDITEM_REG__SCI0_SE0
//    <name> SE0 </name>
//    <r> 
//    <i> [Bits 15..0] RO (@ 0x40041120) Serial channel enable status register m </i>
//    <loc> ( (unsigned short)((SCI0_SE0 >> 0) & 0xFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SCI0_SE0_SE00 </item>
//    <item> SFDITEM_FIELD__SCI0_SE0_SE01 </item>
//    <item> SFDITEM_FIELD__SCI0_SE0_SE02 </item>
//    <item> SFDITEM_FIELD__SCI0_SE0_SE03 </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: SCI0_SS0  --------------------------------
// SVD Line: 9082

unsigned short SCI0_SS0 __AT (0x40041122);



// --------------------------------  Field Item: SCI0_SS0_SS00  -----------------------------------
// SVD Line: 9091

//  <item> SFDITEM_FIELD__SCI0_SS0_SS00
//    <name> SS00 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40041122) Operation start trigger of channel 0 </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SS0 ) </loc>
//      <o.0..0> SS00
//    </check>
//  </item>
//  


// --------------------------------  Field Item: SCI0_SS0_SS01  -----------------------------------
// SVD Line: 9097

//  <item> SFDITEM_FIELD__SCI0_SS0_SS01
//    <name> SS01 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40041122) Operation start trigger of channel 1 </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SS0 ) </loc>
//      <o.1..1> SS01
//    </check>
//  </item>
//  


// --------------------------------  Field Item: SCI0_SS0_SS02  -----------------------------------
// SVD Line: 9103

//  <item> SFDITEM_FIELD__SCI0_SS0_SS02
//    <name> SS02 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40041122) Operation start trigger of channel 2 </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SS0 ) </loc>
//      <o.2..2> SS02
//    </check>
//  </item>
//  


// --------------------------------  Field Item: SCI0_SS0_SS03  -----------------------------------
// SVD Line: 9109

//  <item> SFDITEM_FIELD__SCI0_SS0_SS03
//    <name> SS03 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40041122) Operation start trigger of channel 3 </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SS0 ) </loc>
//      <o.3..3> SS03
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: SCI0_SS0  ------------------------------------
// SVD Line: 9082

//  <rtree> SFDITEM_REG__SCI0_SS0
//    <name> SS0 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40041122) Serial channel start register 0 </i>
//    <loc> ( (unsigned short)((SCI0_SS0 >> 0) & 0xFFFF), ((SCI0_SS0 = (SCI0_SS0 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SCI0_SS0_SS00 </item>
//    <item> SFDITEM_FIELD__SCI0_SS0_SS01 </item>
//    <item> SFDITEM_FIELD__SCI0_SS0_SS02 </item>
//    <item> SFDITEM_FIELD__SCI0_SS0_SS03 </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: SCI0_ST0  --------------------------------
// SVD Line: 9117

unsigned short SCI0_ST0 __AT (0x40041124);



// --------------------------------  Field Item: SCI0_ST0_ST00  -----------------------------------
// SVD Line: 9126

//  <item> SFDITEM_FIELD__SCI0_ST0_ST00
//    <name> ST00 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40041124) Operation stop trigger of channel 0 </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_ST0 ) </loc>
//      <o.0..0> ST00
//    </check>
//  </item>
//  


// --------------------------------  Field Item: SCI0_ST0_ST01  -----------------------------------
// SVD Line: 9132

//  <item> SFDITEM_FIELD__SCI0_ST0_ST01
//    <name> ST01 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40041124) Operation stop trigger of channel 1 </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_ST0 ) </loc>
//      <o.1..1> ST01
//    </check>
//  </item>
//  


// --------------------------------  Field Item: SCI0_ST0_ST02  -----------------------------------
// SVD Line: 9138

//  <item> SFDITEM_FIELD__SCI0_ST0_ST02
//    <name> ST02 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40041124) Operation stop trigger of channel 2 </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_ST0 ) </loc>
//      <o.2..2> ST02
//    </check>
//  </item>
//  


// --------------------------------  Field Item: SCI0_ST0_ST03  -----------------------------------
// SVD Line: 9144

//  <item> SFDITEM_FIELD__SCI0_ST0_ST03
//    <name> ST03 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40041124) Operation stop trigger of channel 3 </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_ST0 ) </loc>
//      <o.3..3> ST03
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: SCI0_ST0  ------------------------------------
// SVD Line: 9117

//  <rtree> SFDITEM_REG__SCI0_ST0
//    <name> ST0 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40041124) Serial channel stop register 0 </i>
//    <loc> ( (unsigned short)((SCI0_ST0 >> 0) & 0xFFFF), ((SCI0_ST0 = (SCI0_ST0 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SCI0_ST0_ST00 </item>
//    <item> SFDITEM_FIELD__SCI0_ST0_ST01 </item>
//    <item> SFDITEM_FIELD__SCI0_ST0_ST02 </item>
//    <item> SFDITEM_FIELD__SCI0_ST0_ST03 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SCI0_SPS0  --------------------------------
// SVD Line: 9152

unsigned short SCI0_SPS0 __AT (0x40041126);



// -------------------------------  Field Item: SCI0_SPS0_PRS00  ----------------------------------
// SVD Line: 9161

//  <item> SFDITEM_FIELD__SCI0_SPS0_PRS00
//    <name> PRS00 </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40041126) Prescaler 0 </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCI0_SPS0 >> 0) & 0xF), ((SCI0_SPS0 = (SCI0_SPS0 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SPS0_PRS01  ----------------------------------
// SVD Line: 9167

//  <item> SFDITEM_FIELD__SCI0_SPS0_PRS01
//    <name> PRS01 </name>
//    <rw> 
//    <i> [Bits 7..4] RW (@ 0x40041126) Prescaler 1 </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCI0_SPS0 >> 4) & 0xF), ((SCI0_SPS0 = (SCI0_SPS0 & ~(0xFUL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: SCI0_SPS0  -----------------------------------
// SVD Line: 9152

//  <rtree> SFDITEM_REG__SCI0_SPS0
//    <name> SPS0 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40041126) Serial clock select register 0 </i>
//    <loc> ( (unsigned short)((SCI0_SPS0 >> 0) & 0xFFFF), ((SCI0_SPS0 = (SCI0_SPS0 & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SCI0_SPS0_PRS00 </item>
//    <item> SFDITEM_FIELD__SCI0_SPS0_PRS01 </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: SCI0_SO0  --------------------------------
// SVD Line: 9175

unsigned short SCI0_SO0 __AT (0x40041128);



// --------------------------------  Field Item: SCI0_SO0_SO00  -----------------------------------
// SVD Line: 9184

//  <item> SFDITEM_FIELD__SCI0_SO0_SO00
//    <name> SO00 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40041128) Serial data output of channel 0 </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SO0 ) </loc>
//      <o.0..0> SO00
//    </check>
//  </item>
//  


// --------------------------------  Field Item: SCI0_SO0_SO01  -----------------------------------
// SVD Line: 9190

//  <item> SFDITEM_FIELD__SCI0_SO0_SO01
//    <name> SO01 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40041128) Serial data output of channel 1 </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SO0 ) </loc>
//      <o.1..1> SO01
//    </check>
//  </item>
//  


// --------------------------------  Field Item: SCI0_SO0_SO02  -----------------------------------
// SVD Line: 9196

//  <item> SFDITEM_FIELD__SCI0_SO0_SO02
//    <name> SO02 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40041128) Serial data output of channel 2 </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SO0 ) </loc>
//      <o.2..2> SO02
//    </check>
//  </item>
//  


// --------------------------------  Field Item: SCI0_SO0_SO03  -----------------------------------
// SVD Line: 9202

//  <item> SFDITEM_FIELD__SCI0_SO0_SO03
//    <name> SO03 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40041128) Serial data output of channel 3 </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SO0 ) </loc>
//      <o.3..3> SO03
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SO0_CKO00  -----------------------------------
// SVD Line: 9208

//  <item> SFDITEM_FIELD__SCI0_SO0_CKO00
//    <name> CKO00 </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40041128) Serial clock output of channel 0 </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SO0 ) </loc>
//      <o.8..8> CKO00
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SO0_CKO01  -----------------------------------
// SVD Line: 9214

//  <item> SFDITEM_FIELD__SCI0_SO0_CKO01
//    <name> CKO01 </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40041128) Serial clock output of channel 1 </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SO0 ) </loc>
//      <o.9..9> CKO01
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SO0_CKO02  -----------------------------------
// SVD Line: 9220

//  <item> SFDITEM_FIELD__SCI0_SO0_CKO02
//    <name> CKO02 </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x40041128) Serial clock output of channel 2 </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SO0 ) </loc>
//      <o.10..10> CKO02
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SO0_CKO03  -----------------------------------
// SVD Line: 9226

//  <item> SFDITEM_FIELD__SCI0_SO0_CKO03
//    <name> CKO03 </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40041128) Serial clock output of channel 3 </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SO0 ) </loc>
//      <o.11..11> CKO03
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: SCI0_SO0  ------------------------------------
// SVD Line: 9175

//  <rtree> SFDITEM_REG__SCI0_SO0
//    <name> SO0 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40041128) Serial output register 0 </i>
//    <loc> ( (unsigned short)((SCI0_SO0 >> 0) & 0xFFFF), ((SCI0_SO0 = (SCI0_SO0 & ~(0xF0FUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xF0F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SCI0_SO0_SO00 </item>
//    <item> SFDITEM_FIELD__SCI0_SO0_SO01 </item>
//    <item> SFDITEM_FIELD__SCI0_SO0_SO02 </item>
//    <item> SFDITEM_FIELD__SCI0_SO0_SO03 </item>
//    <item> SFDITEM_FIELD__SCI0_SO0_CKO00 </item>
//    <item> SFDITEM_FIELD__SCI0_SO0_CKO01 </item>
//    <item> SFDITEM_FIELD__SCI0_SO0_CKO02 </item>
//    <item> SFDITEM_FIELD__SCI0_SO0_CKO03 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SCI0_SOE0  --------------------------------
// SVD Line: 9234

unsigned short SCI0_SOE0 __AT (0x4004112A);



// -------------------------------  Field Item: SCI0_SOE0_SOE00  ----------------------------------
// SVD Line: 9243

//  <item> SFDITEM_FIELD__SCI0_SOE0_SOE00
//    <name> SOE00 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4004112A) Serial output enable of channel 0 </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SOE0 ) </loc>
//      <o.0..0> SOE00
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SOE0_SOE01  ----------------------------------
// SVD Line: 9249

//  <item> SFDITEM_FIELD__SCI0_SOE0_SOE01
//    <name> SOE01 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4004112A) Serial output enable of channel 1 </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SOE0 ) </loc>
//      <o.1..1> SOE01
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SOE0_SOE02  ----------------------------------
// SVD Line: 9255

//  <item> SFDITEM_FIELD__SCI0_SOE0_SOE02
//    <name> SOE02 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4004112A) Serial output enable of channel 2 </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SOE0 ) </loc>
//      <o.2..2> SOE02
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SOE0_SOE03  ----------------------------------
// SVD Line: 9261

//  <item> SFDITEM_FIELD__SCI0_SOE0_SOE03
//    <name> SOE03 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4004112A) Serial output enable of channel 3 </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SOE0 ) </loc>
//      <o.3..3> SOE03
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: SCI0_SOE0  -----------------------------------
// SVD Line: 9234

//  <rtree> SFDITEM_REG__SCI0_SOE0
//    <name> SOE0 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4004112A) Serial output enable register 0 </i>
//    <loc> ( (unsigned short)((SCI0_SOE0 >> 0) & 0xFFFF), ((SCI0_SOE0 = (SCI0_SOE0 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SCI0_SOE0_SOE00 </item>
//    <item> SFDITEM_FIELD__SCI0_SOE0_SOE01 </item>
//    <item> SFDITEM_FIELD__SCI0_SOE0_SOE02 </item>
//    <item> SFDITEM_FIELD__SCI0_SOE0_SOE03 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SCI0_SOL0  --------------------------------
// SVD Line: 9269

unsigned short SCI0_SOL0 __AT (0x40041134);



// -------------------------------  Field Item: SCI0_SOL0_SOL00  ----------------------------------
// SVD Line: 9278

//  <item> SFDITEM_FIELD__SCI0_SOL0_SOL00
//    <name> SOL00 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40041134) Selects inversion of the level of the transmit data of channel n in UART mode </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SOL0 ) </loc>
//      <o.0..0> SOL00
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI0_SOL0_SOL02  ----------------------------------
// SVD Line: 9284

//  <item> SFDITEM_FIELD__SCI0_SOL0_SOL02
//    <name> SOL02 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40041134) Selects inversion of the level of the transmit data of channel n in UART mode </i>
//    <check> 
//      <loc> ( (unsigned short) SCI0_SOL0 ) </loc>
//      <o.2..2> SOL02
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: SCI0_SOL0  -----------------------------------
// SVD Line: 9269

//  <rtree> SFDITEM_REG__SCI0_SOL0
//    <name> SOL0 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40041134) Serial output level register 0 </i>
//    <loc> ( (unsigned short)((SCI0_SOL0 >> 0) & 0xFFFF), ((SCI0_SOL0 = (SCI0_SOL0 & ~(0x5UL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x5) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SCI0_SOL0_SOL00 </item>
//    <item> SFDITEM_FIELD__SCI0_SOL0_SOL02 </item>
//  </rtree>
//  


// -----------------------  Register Item Address: SCI0_SDR0_SDR0_SDR00  --------------------------
// SVD Line: 9292

unsigned short SCI0_SDR0_SDR0_SDR00 __AT (0x40041310);



// ---------------------------  Register Item: SCI0_SDR0_SDR0_SDR00  ------------------------------
// SVD Line: 9292

//  <item> SFDITEM_REG__SCI0_SDR0_SDR0_SDR00
//    <name> SDR00 </name>
//    <i> [Bits 15..0] RW (@ 0x40041310) Serial data register 00 </i>
//    <edit> 
//      <loc> ( (unsigned short)((SCI0_SDR0_SDR0_SDR00 >> 0) & 0xFFFFFFFF), ((SCI0_SDR0_SDR0_SDR00 = (SCI0_SDR0_SDR0_SDR00 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: SCI0_SDR0_SDR0_SDR01  --------------------------
// SVD Line: 9292

unsigned short SCI0_SDR0_SDR0_SDR01 __AT (0x40041312);



// ---------------------------  Register Item: SCI0_SDR0_SDR0_SDR01  ------------------------------
// SVD Line: 9292

//  <item> SFDITEM_REG__SCI0_SDR0_SDR0_SDR01
//    <name> SDR01 </name>
//    <i> [Bits 15..0] RW (@ 0x40041312) Serial data register 01 </i>
//    <edit> 
//      <loc> ( (unsigned short)((SCI0_SDR0_SDR0_SDR01 >> 0) & 0xFFFFFFFF), ((SCI0_SDR0_SDR0_SDR01 = (SCI0_SDR0_SDR0_SDR01 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: SCI0_SDR0_SDR0_SDR02  --------------------------
// SVD Line: 9304

unsigned short SCI0_SDR0_SDR0_SDR02 __AT (0x40041344);



// ---------------------------  Register Item: SCI0_SDR0_SDR0_SDR02  ------------------------------
// SVD Line: 9304

//  <item> SFDITEM_REG__SCI0_SDR0_SDR0_SDR02
//    <name> SDR02 </name>
//    <i> [Bits 15..0] RW (@ 0x40041344) Serial data register 02 </i>
//    <edit> 
//      <loc> ( (unsigned short)((SCI0_SDR0_SDR0_SDR02 >> 0) & 0xFFFFFFFF), ((SCI0_SDR0_SDR0_SDR02 = (SCI0_SDR0_SDR0_SDR02 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: SCI0_SDR0_SDR0_SDR03  --------------------------
// SVD Line: 9304

unsigned short SCI0_SDR0_SDR0_SDR03 __AT (0x40041346);



// ---------------------------  Register Item: SCI0_SDR0_SDR0_SDR03  ------------------------------
// SVD Line: 9304

//  <item> SFDITEM_REG__SCI0_SDR0_SDR0_SDR03
//    <name> SDR03 </name>
//    <i> [Bits 15..0] RW (@ 0x40041346) Serial data register 03 </i>
//    <edit> 
//      <loc> ( (unsigned short)((SCI0_SDR0_SDR0_SDR03 >> 0) & 0xFFFFFFFF), ((SCI0_SDR0_SDR0_SDR03 = (SCI0_SDR0_SDR0_SDR03 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: SCI0_SIO00  -------------------------------
// SVD Line: 9316

unsigned char SCI0_SIO00 __AT (0x40041310);



// --------------------------------  Register Item: SCI0_SIO00  -----------------------------------
// SVD Line: 9316

//  <item> SFDITEM_REG__SCI0_SIO00
//    <name> SIO00 </name>
//    <i> [Bits 7..0] RW (@ 0x40041310) SPI data register </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCI0_SIO00 >> 0) & 0xFFFFFFFF), ((SCI0_SIO00 = (SCI0_SIO00 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: SCI0_SIO01  -------------------------------
// SVD Line: 9324

unsigned char SCI0_SIO01 __AT (0x40041312);



// --------------------------------  Register Item: SCI0_SIO01  -----------------------------------
// SVD Line: 9324

//  <item> SFDITEM_REG__SCI0_SIO01
//    <name> SIO01 </name>
//    <i> [Bits 7..0] RW (@ 0x40041312) SPI data register </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCI0_SIO01 >> 0) & 0xFFFFFFFF), ((SCI0_SIO01 = (SCI0_SIO01 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: SCI0_SIO10  -------------------------------
// SVD Line: 9332

unsigned char SCI0_SIO10 __AT (0x40041344);



// --------------------------------  Register Item: SCI0_SIO10  -----------------------------------
// SVD Line: 9332

//  <item> SFDITEM_REG__SCI0_SIO10
//    <name> SIO10 </name>
//    <i> [Bits 7..0] RW (@ 0x40041344) SPI data register </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCI0_SIO10 >> 0) & 0xFFFFFFFF), ((SCI0_SIO10 = (SCI0_SIO10 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: SCI0_SIO11  -------------------------------
// SVD Line: 9340

unsigned char SCI0_SIO11 __AT (0x40041346);



// --------------------------------  Register Item: SCI0_SIO11  -----------------------------------
// SVD Line: 9340

//  <item> SFDITEM_REG__SCI0_SIO11
//    <name> SIO11 </name>
//    <i> [Bits 7..0] RW (@ 0x40041346) SPI data register </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCI0_SIO11 >> 0) & 0xFFFFFFFF), ((SCI0_SIO11 = (SCI0_SIO11 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: SCI0_TXD0  --------------------------------
// SVD Line: 9348

unsigned char SCI0_TXD0 __AT (0x40041310);



// --------------------------------  Register Item: SCI0_TXD0  ------------------------------------
// SVD Line: 9348

//  <item> SFDITEM_REG__SCI0_TXD0
//    <name> TXD0 </name>
//    <i> [Bits 7..0] RW (@ 0x40041310) UART transmit data register </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCI0_TXD0 >> 0) & 0xFFFFFFFF), ((SCI0_TXD0 = (SCI0_TXD0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: SCI0_RXD0  --------------------------------
// SVD Line: 9356

unsigned char SCI0_RXD0 __AT (0x40041312);



// --------------------------------  Register Item: SCI0_RXD0  ------------------------------------
// SVD Line: 9356

//  <item> SFDITEM_REG__SCI0_RXD0
//    <name> RXD0 </name>
//    <i> [Bits 7..0] RW (@ 0x40041312) UART receive data register </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCI0_RXD0 >> 0) & 0xFFFFFFFF), ((SCI0_RXD0 = (SCI0_RXD0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: SCI0_TXD1  --------------------------------
// SVD Line: 9364

unsigned char SCI0_TXD1 __AT (0x40041344);



// --------------------------------  Register Item: SCI0_TXD1  ------------------------------------
// SVD Line: 9364

//  <item> SFDITEM_REG__SCI0_TXD1
//    <name> TXD1 </name>
//    <i> [Bits 7..0] RW (@ 0x40041344) UART transmit data register </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCI0_TXD1 >> 0) & 0xFFFFFFFF), ((SCI0_TXD1 = (SCI0_TXD1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: SCI0_RXD1  --------------------------------
// SVD Line: 9372

unsigned char SCI0_RXD1 __AT (0x40041346);



// --------------------------------  Register Item: SCI0_RXD1  ------------------------------------
// SVD Line: 9372

//  <item> SFDITEM_REG__SCI0_RXD1
//    <name> RXD1 </name>
//    <i> [Bits 7..0] RW (@ 0x40041346) UART receive data register </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCI0_RXD1 >> 0) & 0xFFFFFFFF), ((SCI0_RXD1 = (SCI0_RXD1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------------  Peripheral View: SCI0  -------------------------------------
// SVD Line: 8699

//  <view> SCI0
//    <name> SCI0 </name>
//    <item> SFDITEM_REG__SCI0_SSR00 </item>
//    <item> SFDITEM_REG__SCI0_SSR01 </item>
//    <item> SFDITEM_REG__SCI0_SSR02 </item>
//    <item> SFDITEM_REG__SCI0_SSR03 </item>
//    <item> SFDITEM_REG__SCI0_SIR00 </item>
//    <item> SFDITEM_REG__SCI0_SIR01 </item>
//    <item> SFDITEM_REG__SCI0_SIR02 </item>
//    <item> SFDITEM_REG__SCI0_SIR03 </item>
//    <item> SFDITEM_REG__SCI0_SMR00 </item>
//    <item> SFDITEM_REG__SCI0_SMR01 </item>
//    <item> SFDITEM_REG__SCI0_SMR02 </item>
//    <item> SFDITEM_REG__SCI0_SMR03 </item>
//    <item> SFDITEM_REG__SCI0_SCR00 </item>
//    <item> SFDITEM_REG__SCI0_SCR01 </item>
//    <item> SFDITEM_REG__SCI0_SCR02 </item>
//    <item> SFDITEM_REG__SCI0_SCR03 </item>
//    <item> SFDITEM_REG__SCI0_SE0 </item>
//    <item> SFDITEM_REG__SCI0_SS0 </item>
//    <item> SFDITEM_REG__SCI0_ST0 </item>
//    <item> SFDITEM_REG__SCI0_SPS0 </item>
//    <item> SFDITEM_REG__SCI0_SO0 </item>
//    <item> SFDITEM_REG__SCI0_SOE0 </item>
//    <item> SFDITEM_REG__SCI0_SOL0 </item>
//    <item> SFDITEM_REG__SCI0_SDR0_SDR0_SDR00 </item>
//    <item> SFDITEM_REG__SCI0_SDR0_SDR0_SDR01 </item>
//    <item> SFDITEM_REG__SCI0_SDR0_SDR0_SDR02 </item>
//    <item> SFDITEM_REG__SCI0_SDR0_SDR0_SDR03 </item>
//    <item> SFDITEM_REG__SCI0_SIO00 </item>
//    <item> SFDITEM_REG__SCI0_SIO01 </item>
//    <item> SFDITEM_REG__SCI0_SIO10 </item>
//    <item> SFDITEM_REG__SCI0_SIO11 </item>
//    <item> SFDITEM_REG__SCI0_TXD0 </item>
//    <item> SFDITEM_REG__SCI0_RXD0 </item>
//    <item> SFDITEM_REG__SCI0_TXD1 </item>
//    <item> SFDITEM_REG__SCI0_RXD1 </item>
//  </view>
//  


// ----------------------------  Register Item Address: SCI1_SSR10  -------------------------------
// SVD Line: 9444

unsigned short SCI1_SSR10 __AT (0x40041540);



// -------------------------------  Field Item: SCI1_SSR10_OVF  -----------------------------------
// SVD Line: 9452

//  <item> SFDITEM_FIELD__SCI1_SSR10_OVF
//    <name> OVF </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x40041540) Overrun error detection flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SSR10 ) </loc>
//      <o.0..0> OVF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI1_SSR10_PEF  -----------------------------------
// SVD Line: 9458

//  <item> SFDITEM_FIELD__SCI1_SSR10_PEF
//    <name> PEF </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x40041540) Parity error detection flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SSR10 ) </loc>
//      <o.1..1> PEF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI1_SSR10_FEF  -----------------------------------
// SVD Line: 9464

//  <item> SFDITEM_FIELD__SCI1_SSR10_FEF
//    <name> FEF </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x40041540) Framing error detection flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SSR10 ) </loc>
//      <o.2..2> FEF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI1_SSR10_BFF  -----------------------------------
// SVD Line: 9470

//  <item> SFDITEM_FIELD__SCI1_SSR10_BFF
//    <name> BFF </name>
//    <r> 
//    <i> [Bit 5] RO (@ 0x40041540) Buffer register status indication flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SSR10 ) </loc>
//      <o.5..5> BFF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI1_SSR10_TSF  -----------------------------------
// SVD Line: 9476

//  <item> SFDITEM_FIELD__SCI1_SSR10_TSF
//    <name> TSF </name>
//    <r> 
//    <i> [Bit 6] RO (@ 0x40041540) Communication status indication flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SSR10 ) </loc>
//      <o.6..6> TSF
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: SCI1_SSR10  -----------------------------------
// SVD Line: 9444

//  <rtree> SFDITEM_REG__SCI1_SSR10
//    <name> SSR10 </name>
//    <r> 
//    <i> [Bits 15..0] RO (@ 0x40041540) Serial status register mn </i>
//    <loc> ( (unsigned short)((SCI1_SSR10 >> 0) & 0xFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SCI1_SSR10_OVF </item>
//    <item> SFDITEM_FIELD__SCI1_SSR10_PEF </item>
//    <item> SFDITEM_FIELD__SCI1_SSR10_FEF </item>
//    <item> SFDITEM_FIELD__SCI1_SSR10_BFF </item>
//    <item> SFDITEM_FIELD__SCI1_SSR10_TSF </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SCI1_SSR11  -------------------------------
// SVD Line: 9484

unsigned short SCI1_SSR11 __AT (0x40041542);



// -------------------------------  Field Item: SCI1_SSR11_OVF  -----------------------------------
// SVD Line: 9452

//  <item> SFDITEM_FIELD__SCI1_SSR11_OVF
//    <name> OVF </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x40041542) Overrun error detection flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SSR11 ) </loc>
//      <o.0..0> OVF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI1_SSR11_PEF  -----------------------------------
// SVD Line: 9458

//  <item> SFDITEM_FIELD__SCI1_SSR11_PEF
//    <name> PEF </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x40041542) Parity error detection flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SSR11 ) </loc>
//      <o.1..1> PEF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI1_SSR11_FEF  -----------------------------------
// SVD Line: 9464

//  <item> SFDITEM_FIELD__SCI1_SSR11_FEF
//    <name> FEF </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x40041542) Framing error detection flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SSR11 ) </loc>
//      <o.2..2> FEF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI1_SSR11_BFF  -----------------------------------
// SVD Line: 9470

//  <item> SFDITEM_FIELD__SCI1_SSR11_BFF
//    <name> BFF </name>
//    <r> 
//    <i> [Bit 5] RO (@ 0x40041542) Buffer register status indication flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SSR11 ) </loc>
//      <o.5..5> BFF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI1_SSR11_TSF  -----------------------------------
// SVD Line: 9476

//  <item> SFDITEM_FIELD__SCI1_SSR11_TSF
//    <name> TSF </name>
//    <r> 
//    <i> [Bit 6] RO (@ 0x40041542) Communication status indication flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SSR11 ) </loc>
//      <o.6..6> TSF
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: SCI1_SSR11  -----------------------------------
// SVD Line: 9484

//  <rtree> SFDITEM_REG__SCI1_SSR11
//    <name> SSR11 </name>
//    <r> 
//    <i> [Bits 15..0] RO (@ 0x40041542) Serial status register mn </i>
//    <loc> ( (unsigned short)((SCI1_SSR11 >> 0) & 0xFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SCI1_SSR11_OVF </item>
//    <item> SFDITEM_FIELD__SCI1_SSR11_PEF </item>
//    <item> SFDITEM_FIELD__SCI1_SSR11_FEF </item>
//    <item> SFDITEM_FIELD__SCI1_SSR11_BFF </item>
//    <item> SFDITEM_FIELD__SCI1_SSR11_TSF </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SCI1_SIR10  -------------------------------
// SVD Line: 9490

unsigned short SCI1_SIR10 __AT (0x40041548);



// -------------------------------  Field Item: SCI1_SIR10_OVCT  ----------------------------------
// SVD Line: 9498

//  <item> SFDITEM_FIELD__SCI1_SIR10_OVCT
//    <name> OVCT </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40041548) Clear trigger of overrun error flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SIR10 ) </loc>
//      <o.0..0> OVCT
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI1_SIR10_PECT  ----------------------------------
// SVD Line: 9504

//  <item> SFDITEM_FIELD__SCI1_SIR10_PECT
//    <name> PECT </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40041548) Clear trigger of parity error flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SIR10 ) </loc>
//      <o.1..1> PECT
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI1_SIR10_FECT  ----------------------------------
// SVD Line: 9510

//  <item> SFDITEM_FIELD__SCI1_SIR10_FECT
//    <name> FECT </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40041548) Clear trigger of framing error flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SIR10 ) </loc>
//      <o.2..2> FECT
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: SCI1_SIR10  -----------------------------------
// SVD Line: 9490

//  <rtree> SFDITEM_REG__SCI1_SIR10
//    <name> SIR10 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40041548) Serial flag clear trigger register mn </i>
//    <loc> ( (unsigned short)((SCI1_SIR10 >> 0) & 0xFFFF), ((SCI1_SIR10 = (SCI1_SIR10 & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x7) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SCI1_SIR10_OVCT </item>
//    <item> SFDITEM_FIELD__SCI1_SIR10_PECT </item>
//    <item> SFDITEM_FIELD__SCI1_SIR10_FECT </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SCI1_SIR11  -------------------------------
// SVD Line: 9518

unsigned short SCI1_SIR11 __AT (0x4004154A);



// -------------------------------  Field Item: SCI1_SIR11_OVCT  ----------------------------------
// SVD Line: 9498

//  <item> SFDITEM_FIELD__SCI1_SIR11_OVCT
//    <name> OVCT </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4004154A) Clear trigger of overrun error flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SIR11 ) </loc>
//      <o.0..0> OVCT
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI1_SIR11_PECT  ----------------------------------
// SVD Line: 9504

//  <item> SFDITEM_FIELD__SCI1_SIR11_PECT
//    <name> PECT </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4004154A) Clear trigger of parity error flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SIR11 ) </loc>
//      <o.1..1> PECT
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI1_SIR11_FECT  ----------------------------------
// SVD Line: 9510

//  <item> SFDITEM_FIELD__SCI1_SIR11_FECT
//    <name> FECT </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4004154A) Clear trigger of framing error flag of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SIR11 ) </loc>
//      <o.2..2> FECT
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: SCI1_SIR11  -----------------------------------
// SVD Line: 9518

//  <rtree> SFDITEM_REG__SCI1_SIR11
//    <name> SIR11 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4004154A) Serial flag clear trigger register mn </i>
//    <loc> ( (unsigned short)((SCI1_SIR11 >> 0) & 0xFFFF), ((SCI1_SIR11 = (SCI1_SIR11 & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x7) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SCI1_SIR11_OVCT </item>
//    <item> SFDITEM_FIELD__SCI1_SIR11_PECT </item>
//    <item> SFDITEM_FIELD__SCI1_SIR11_FECT </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SCI1_SMR10  -------------------------------
// SVD Line: 9524

unsigned short SCI1_SMR10 __AT (0x40041550);



// --------------------------------  Field Item: SCI1_SMR10_MD  -----------------------------------
// SVD Line: 9532

//  <item> SFDITEM_FIELD__SCI1_SMR10_MD
//    <name> MD </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40041550) Setting of operation mode of channel n </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCI1_SMR10 >> 0) & 0xF), ((SCI1_SMR10 = (SCI1_SMR10 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: SCI1_SMR10_SIS  -----------------------------------
// SVD Line: 9538

//  <item> SFDITEM_FIELD__SCI1_SMR10_SIS
//    <name> SIS </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40041550) Controls inversion of level of receive data of channel n in UART mode </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SMR10 ) </loc>
//      <o.6..6> SIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI1_SMR10_STS  -----------------------------------
// SVD Line: 9544

//  <item> SFDITEM_FIELD__SCI1_SMR10_STS
//    <name> STS </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40041550) Selection of start trigger source </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SMR10 ) </loc>
//      <o.8..8> STS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI1_SMR10_CCS  -----------------------------------
// SVD Line: 9550

//  <item> SFDITEM_FIELD__SCI1_SMR10_CCS
//    <name> CCS </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x40041550) Selection of transfer clock (fTCLK) of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SMR10 ) </loc>
//      <o.14..14> CCS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI1_SMR10_CKS  -----------------------------------
// SVD Line: 9556

//  <item> SFDITEM_FIELD__SCI1_SMR10_CKS
//    <name> CKS </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40041550) Selection of operation clock (fMCK) of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SMR10 ) </loc>
//      <o.15..15> CKS
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: SCI1_SMR10  -----------------------------------
// SVD Line: 9524

//  <rtree> SFDITEM_REG__SCI1_SMR10
//    <name> SMR10 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40041550) Serial mode register mn </i>
//    <loc> ( (unsigned short)((SCI1_SMR10 >> 0) & 0xFFFF), ((SCI1_SMR10 = (SCI1_SMR10 & ~(0xC14FUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xC14F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SCI1_SMR10_MD </item>
//    <item> SFDITEM_FIELD__SCI1_SMR10_SIS </item>
//    <item> SFDITEM_FIELD__SCI1_SMR10_STS </item>
//    <item> SFDITEM_FIELD__SCI1_SMR10_CCS </item>
//    <item> SFDITEM_FIELD__SCI1_SMR10_CKS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SCI1_SMR11  -------------------------------
// SVD Line: 9564

unsigned short SCI1_SMR11 __AT (0x40041552);



// --------------------------------  Field Item: SCI1_SMR11_MD  -----------------------------------
// SVD Line: 9532

//  <item> SFDITEM_FIELD__SCI1_SMR11_MD
//    <name> MD </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40041552) Setting of operation mode of channel n </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCI1_SMR11 >> 0) & 0xF), ((SCI1_SMR11 = (SCI1_SMR11 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: SCI1_SMR11_SIS  -----------------------------------
// SVD Line: 9538

//  <item> SFDITEM_FIELD__SCI1_SMR11_SIS
//    <name> SIS </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40041552) Controls inversion of level of receive data of channel n in UART mode </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SMR11 ) </loc>
//      <o.6..6> SIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI1_SMR11_STS  -----------------------------------
// SVD Line: 9544

//  <item> SFDITEM_FIELD__SCI1_SMR11_STS
//    <name> STS </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40041552) Selection of start trigger source </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SMR11 ) </loc>
//      <o.8..8> STS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI1_SMR11_CCS  -----------------------------------
// SVD Line: 9550

//  <item> SFDITEM_FIELD__SCI1_SMR11_CCS
//    <name> CCS </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x40041552) Selection of transfer clock (fTCLK) of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SMR11 ) </loc>
//      <o.14..14> CCS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI1_SMR11_CKS  -----------------------------------
// SVD Line: 9556

//  <item> SFDITEM_FIELD__SCI1_SMR11_CKS
//    <name> CKS </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40041552) Selection of operation clock (fMCK) of channel n </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SMR11 ) </loc>
//      <o.15..15> CKS
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: SCI1_SMR11  -----------------------------------
// SVD Line: 9564

//  <rtree> SFDITEM_REG__SCI1_SMR11
//    <name> SMR11 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40041552) Serial mode register mn </i>
//    <loc> ( (unsigned short)((SCI1_SMR11 >> 0) & 0xFFFF), ((SCI1_SMR11 = (SCI1_SMR11 & ~(0xC14FUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xC14F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SCI1_SMR11_MD </item>
//    <item> SFDITEM_FIELD__SCI1_SMR11_SIS </item>
//    <item> SFDITEM_FIELD__SCI1_SMR11_STS </item>
//    <item> SFDITEM_FIELD__SCI1_SMR11_CCS </item>
//    <item> SFDITEM_FIELD__SCI1_SMR11_CKS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SCI1_SCR10  -------------------------------
// SVD Line: 9570

unsigned short SCI1_SCR10 __AT (0x40041558);



// -------------------------------  Field Item: SCI1_SCR10_DLS  -----------------------------------
// SVD Line: 9578

//  <item> SFDITEM_FIELD__SCI1_SCR10_DLS
//    <name> DLS </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x40041558) Setting of data length in SPI and UART modes </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCI1_SCR10 >> 0) & 0x3), ((SCI1_SCR10 = (SCI1_SCR10 & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: SCI1_SCR10_SLC  -----------------------------------
// SVD Line: 9584

//  <item> SFDITEM_FIELD__SCI1_SCR10_SLC
//    <name> SLC </name>
//    <rw> 
//    <i> [Bits 5..4] RW (@ 0x40041558) Setting of stop bit in UART mode </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCI1_SCR10 >> 4) & 0x3), ((SCI1_SCR10 = (SCI1_SCR10 & ~(0x3UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: SCI1_SCR10_DIR  -----------------------------------
// SVD Line: 9590

//  <item> SFDITEM_FIELD__SCI1_SCR10_DIR
//    <name> DIR </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40041558) Selection of data transfer sequence in SPI and UART modes </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SCR10 ) </loc>
//      <o.7..7> DIR
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI1_SCR10_PTC  -----------------------------------
// SVD Line: 9596

//  <item> SFDITEM_FIELD__SCI1_SCR10_PTC
//    <name> PTC </name>
//    <rw> 
//    <i> [Bits 9..8] RW (@ 0x40041558) Setting of parity bit in UART mode </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCI1_SCR10 >> 8) & 0x3), ((SCI1_SCR10 = (SCI1_SCR10 & ~(0x3UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: SCI1_SCR10_EOC  -----------------------------------
// SVD Line: 9602

//  <item> SFDITEM_FIELD__SCI1_SCR10_EOC
//    <name> EOC </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x40041558) Mask control of error interrupt signal (INTSREx (x = 0 to 2)) </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SCR10 ) </loc>
//      <o.10..10> EOC
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI1_SCR10_CKP  -----------------------------------
// SVD Line: 9608

//  <item> SFDITEM_FIELD__SCI1_SCR10_CKP
//    <name> CKP </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x40041558) Selection of clock phase in SPI mode </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SCR10 ) </loc>
//      <o.12..12> CKP
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI1_SCR10_DAP  -----------------------------------
// SVD Line: 9614

//  <item> SFDITEM_FIELD__SCI1_SCR10_DAP
//    <name> DAP </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x40041558) Selection of data phase in SPI mode </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SCR10 ) </loc>
//      <o.13..13> DAP
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI1_SCR10_RXE  -----------------------------------
// SVD Line: 9620

//  <item> SFDITEM_FIELD__SCI1_SCR10_RXE
//    <name> RXE </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x40041558) Reception enable </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SCR10 ) </loc>
//      <o.14..14> RXE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI1_SCR10_TXE  -----------------------------------
// SVD Line: 9626

//  <item> SFDITEM_FIELD__SCI1_SCR10_TXE
//    <name> TXE </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40041558) Transmission enable </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SCR10 ) </loc>
//      <o.15..15> TXE
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: SCI1_SCR10  -----------------------------------
// SVD Line: 9570

//  <rtree> SFDITEM_REG__SCI1_SCR10
//    <name> SCR10 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40041558) Serial communication operation setting register mn </i>
//    <loc> ( (unsigned short)((SCI1_SCR10 >> 0) & 0xFFFF), ((SCI1_SCR10 = (SCI1_SCR10 & ~(0xF7B3UL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xF7B3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SCI1_SCR10_DLS </item>
//    <item> SFDITEM_FIELD__SCI1_SCR10_SLC </item>
//    <item> SFDITEM_FIELD__SCI1_SCR10_DIR </item>
//    <item> SFDITEM_FIELD__SCI1_SCR10_PTC </item>
//    <item> SFDITEM_FIELD__SCI1_SCR10_EOC </item>
//    <item> SFDITEM_FIELD__SCI1_SCR10_CKP </item>
//    <item> SFDITEM_FIELD__SCI1_SCR10_DAP </item>
//    <item> SFDITEM_FIELD__SCI1_SCR10_RXE </item>
//    <item> SFDITEM_FIELD__SCI1_SCR10_TXE </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SCI1_SCR11  -------------------------------
// SVD Line: 9634

unsigned short SCI1_SCR11 __AT (0x4004155A);



// -------------------------------  Field Item: SCI1_SCR11_DLS  -----------------------------------
// SVD Line: 9578

//  <item> SFDITEM_FIELD__SCI1_SCR11_DLS
//    <name> DLS </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x4004155A) Setting of data length in SPI and UART modes </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCI1_SCR11 >> 0) & 0x3), ((SCI1_SCR11 = (SCI1_SCR11 & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: SCI1_SCR11_SLC  -----------------------------------
// SVD Line: 9584

//  <item> SFDITEM_FIELD__SCI1_SCR11_SLC
//    <name> SLC </name>
//    <rw> 
//    <i> [Bits 5..4] RW (@ 0x4004155A) Setting of stop bit in UART mode </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCI1_SCR11 >> 4) & 0x3), ((SCI1_SCR11 = (SCI1_SCR11 & ~(0x3UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: SCI1_SCR11_DIR  -----------------------------------
// SVD Line: 9590

//  <item> SFDITEM_FIELD__SCI1_SCR11_DIR
//    <name> DIR </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4004155A) Selection of data transfer sequence in SPI and UART modes </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SCR11 ) </loc>
//      <o.7..7> DIR
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI1_SCR11_PTC  -----------------------------------
// SVD Line: 9596

//  <item> SFDITEM_FIELD__SCI1_SCR11_PTC
//    <name> PTC </name>
//    <rw> 
//    <i> [Bits 9..8] RW (@ 0x4004155A) Setting of parity bit in UART mode </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCI1_SCR11 >> 8) & 0x3), ((SCI1_SCR11 = (SCI1_SCR11 & ~(0x3UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: SCI1_SCR11_EOC  -----------------------------------
// SVD Line: 9602

//  <item> SFDITEM_FIELD__SCI1_SCR11_EOC
//    <name> EOC </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x4004155A) Mask control of error interrupt signal (INTSREx (x = 0 to 2)) </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SCR11 ) </loc>
//      <o.10..10> EOC
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI1_SCR11_CKP  -----------------------------------
// SVD Line: 9608

//  <item> SFDITEM_FIELD__SCI1_SCR11_CKP
//    <name> CKP </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x4004155A) Selection of clock phase in SPI mode </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SCR11 ) </loc>
//      <o.12..12> CKP
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI1_SCR11_DAP  -----------------------------------
// SVD Line: 9614

//  <item> SFDITEM_FIELD__SCI1_SCR11_DAP
//    <name> DAP </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x4004155A) Selection of data phase in SPI mode </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SCR11 ) </loc>
//      <o.13..13> DAP
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI1_SCR11_RXE  -----------------------------------
// SVD Line: 9620

//  <item> SFDITEM_FIELD__SCI1_SCR11_RXE
//    <name> RXE </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x4004155A) Reception enable </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SCR11 ) </loc>
//      <o.14..14> RXE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI1_SCR11_TXE  -----------------------------------
// SVD Line: 9626

//  <item> SFDITEM_FIELD__SCI1_SCR11_TXE
//    <name> TXE </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x4004155A) Transmission enable </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SCR11 ) </loc>
//      <o.15..15> TXE
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: SCI1_SCR11  -----------------------------------
// SVD Line: 9634

//  <rtree> SFDITEM_REG__SCI1_SCR11
//    <name> SCR11 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4004155A) Serial communication operation setting register mn </i>
//    <loc> ( (unsigned short)((SCI1_SCR11 >> 0) & 0xFFFF), ((SCI1_SCR11 = (SCI1_SCR11 & ~(0xF7B3UL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xF7B3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SCI1_SCR11_DLS </item>
//    <item> SFDITEM_FIELD__SCI1_SCR11_SLC </item>
//    <item> SFDITEM_FIELD__SCI1_SCR11_DIR </item>
//    <item> SFDITEM_FIELD__SCI1_SCR11_PTC </item>
//    <item> SFDITEM_FIELD__SCI1_SCR11_EOC </item>
//    <item> SFDITEM_FIELD__SCI1_SCR11_CKP </item>
//    <item> SFDITEM_FIELD__SCI1_SCR11_DAP </item>
//    <item> SFDITEM_FIELD__SCI1_SCR11_RXE </item>
//    <item> SFDITEM_FIELD__SCI1_SCR11_TXE </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: SCI1_SE1  --------------------------------
// SVD Line: 9640

unsigned short SCI1_SE1 __AT (0x40041560);



// --------------------------------  Field Item: SCI1_SE1_SE10  -----------------------------------
// SVD Line: 9649

//  <item> SFDITEM_FIELD__SCI1_SE1_SE10
//    <name> SE10 </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x40041560) Indication of operation enable/stop status of channel 0 </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SE1 ) </loc>
//      <o.0..0> SE10
//    </check>
//  </item>
//  


// --------------------------------  Field Item: SCI1_SE1_SE11  -----------------------------------
// SVD Line: 9655

//  <item> SFDITEM_FIELD__SCI1_SE1_SE11
//    <name> SE11 </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x40041560) Indication of operation enable/stop status of channel 1 </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SE1 ) </loc>
//      <o.1..1> SE11
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: SCI1_SE1  ------------------------------------
// SVD Line: 9640

//  <rtree> SFDITEM_REG__SCI1_SE1
//    <name> SE1 </name>
//    <r> 
//    <i> [Bits 15..0] RO (@ 0x40041560) Serial channel enable status register 1 </i>
//    <loc> ( (unsigned short)((SCI1_SE1 >> 0) & 0xFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SCI1_SE1_SE10 </item>
//    <item> SFDITEM_FIELD__SCI1_SE1_SE11 </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: SCI1_SS1  --------------------------------
// SVD Line: 9663

unsigned short SCI1_SS1 __AT (0x40041562);



// --------------------------------  Field Item: SCI1_SS1_SS10  -----------------------------------
// SVD Line: 9672

//  <item> SFDITEM_FIELD__SCI1_SS1_SS10
//    <name> SS10 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40041562) Operation start trigger of channel 0 </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SS1 ) </loc>
//      <o.0..0> SS10
//    </check>
//  </item>
//  


// --------------------------------  Field Item: SCI1_SS1_SS11  -----------------------------------
// SVD Line: 9678

//  <item> SFDITEM_FIELD__SCI1_SS1_SS11
//    <name> SS11 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40041562) Operation start trigger of channel 1 </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SS1 ) </loc>
//      <o.1..1> SS11
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: SCI1_SS1  ------------------------------------
// SVD Line: 9663

//  <rtree> SFDITEM_REG__SCI1_SS1
//    <name> SS1 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40041562) Serial channel start register 1 </i>
//    <loc> ( (unsigned short)((SCI1_SS1 >> 0) & 0xFFFF), ((SCI1_SS1 = (SCI1_SS1 & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SCI1_SS1_SS10 </item>
//    <item> SFDITEM_FIELD__SCI1_SS1_SS11 </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: SCI1_ST1  --------------------------------
// SVD Line: 9686

unsigned short SCI1_ST1 __AT (0x40041564);



// --------------------------------  Field Item: SCI1_ST1_ST10  -----------------------------------
// SVD Line: 9695

//  <item> SFDITEM_FIELD__SCI1_ST1_ST10
//    <name> ST10 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40041564) Operation stop trigger of channel 0 </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_ST1 ) </loc>
//      <o.0..0> ST10
//    </check>
//  </item>
//  


// --------------------------------  Field Item: SCI1_ST1_ST11  -----------------------------------
// SVD Line: 9701

//  <item> SFDITEM_FIELD__SCI1_ST1_ST11
//    <name> ST11 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40041564) Operation stop trigger of channel 1 </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_ST1 ) </loc>
//      <o.1..1> ST11
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: SCI1_ST1  ------------------------------------
// SVD Line: 9686

//  <rtree> SFDITEM_REG__SCI1_ST1
//    <name> ST1 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40041564) Serial channel stop register 1 </i>
//    <loc> ( (unsigned short)((SCI1_ST1 >> 0) & 0xFFFF), ((SCI1_ST1 = (SCI1_ST1 & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SCI1_ST1_ST10 </item>
//    <item> SFDITEM_FIELD__SCI1_ST1_ST11 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SCI1_SPS1  --------------------------------
// SVD Line: 9709

unsigned short SCI1_SPS1 __AT (0x40041566);



// -------------------------------  Field Item: SCI1_SPS1_PRS10  ----------------------------------
// SVD Line: 9718

//  <item> SFDITEM_FIELD__SCI1_SPS1_PRS10
//    <name> PRS10 </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40041566) Prescaler 0 </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCI1_SPS1 >> 0) & 0xF), ((SCI1_SPS1 = (SCI1_SPS1 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: SCI1_SPS1_PRS11  ----------------------------------
// SVD Line: 9724

//  <item> SFDITEM_FIELD__SCI1_SPS1_PRS11
//    <name> PRS11 </name>
//    <rw> 
//    <i> [Bits 7..4] RW (@ 0x40041566) Prescaler 1 </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCI1_SPS1 >> 4) & 0xF), ((SCI1_SPS1 = (SCI1_SPS1 & ~(0xFUL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: SCI1_SPS1  -----------------------------------
// SVD Line: 9709

//  <rtree> SFDITEM_REG__SCI1_SPS1
//    <name> SPS1 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40041566) Serial clock select register 1 </i>
//    <loc> ( (unsigned short)((SCI1_SPS1 >> 0) & 0xFFFF), ((SCI1_SPS1 = (SCI1_SPS1 & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SCI1_SPS1_PRS10 </item>
//    <item> SFDITEM_FIELD__SCI1_SPS1_PRS11 </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: SCI1_SO1  --------------------------------
// SVD Line: 9733

unsigned short SCI1_SO1 __AT (0x40041568);



// --------------------------------  Field Item: SCI1_SO1_SO10  -----------------------------------
// SVD Line: 9742

//  <item> SFDITEM_FIELD__SCI1_SO1_SO10
//    <name> SO10 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40041568) Serial data output of channel 0 </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SO1 ) </loc>
//      <o.0..0> SO10
//    </check>
//  </item>
//  


// --------------------------------  Field Item: SCI1_SO1_SO11  -----------------------------------
// SVD Line: 9748

//  <item> SFDITEM_FIELD__SCI1_SO1_SO11
//    <name> SO11 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40041568) Serial data output of channel 1 </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SO1 ) </loc>
//      <o.1..1> SO11
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI1_SO1_CKO10  -----------------------------------
// SVD Line: 9754

//  <item> SFDITEM_FIELD__SCI1_SO1_CKO10
//    <name> CKO10 </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40041568) Serial clock output of channel 0 </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SO1 ) </loc>
//      <o.8..8> CKO10
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI1_SO1_CKO11  -----------------------------------
// SVD Line: 9760

//  <item> SFDITEM_FIELD__SCI1_SO1_CKO11
//    <name> CKO11 </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40041568) Serial clock output of channel 1 </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SO1 ) </loc>
//      <o.9..9> CKO11
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: SCI1_SO1  ------------------------------------
// SVD Line: 9733

//  <rtree> SFDITEM_REG__SCI1_SO1
//    <name> SO1 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40041568) Serial output register 1 </i>
//    <loc> ( (unsigned short)((SCI1_SO1 >> 0) & 0xFFFF), ((SCI1_SO1 = (SCI1_SO1 & ~(0x303UL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x303) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SCI1_SO1_SO10 </item>
//    <item> SFDITEM_FIELD__SCI1_SO1_SO11 </item>
//    <item> SFDITEM_FIELD__SCI1_SO1_CKO10 </item>
//    <item> SFDITEM_FIELD__SCI1_SO1_CKO11 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SCI1_SOE1  --------------------------------
// SVD Line: 9768

unsigned short SCI1_SOE1 __AT (0x4004156A);



// -------------------------------  Field Item: SCI1_SOE1_SOE10  ----------------------------------
// SVD Line: 9777

//  <item> SFDITEM_FIELD__SCI1_SOE1_SOE10
//    <name> SOE10 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4004156A) Serial output enable of channel 0 </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SOE1 ) </loc>
//      <o.0..0> SOE10
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SCI1_SOE1_SOE11  ----------------------------------
// SVD Line: 9783

//  <item> SFDITEM_FIELD__SCI1_SOE1_SOE11
//    <name> SOE11 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4004156A) Serial output enable of channel 1 </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SOE1 ) </loc>
//      <o.1..1> SOE11
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: SCI1_SOE1  -----------------------------------
// SVD Line: 9768

//  <rtree> SFDITEM_REG__SCI1_SOE1
//    <name> SOE1 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4004156A) Serial output enable register 1 </i>
//    <loc> ( (unsigned short)((SCI1_SOE1 >> 0) & 0xFFFF), ((SCI1_SOE1 = (SCI1_SOE1 & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SCI1_SOE1_SOE10 </item>
//    <item> SFDITEM_FIELD__SCI1_SOE1_SOE11 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SCI1_SOL1  --------------------------------
// SVD Line: 9791

unsigned short SCI1_SOL1 __AT (0x40041574);



// -------------------------------  Field Item: SCI1_SOL1_SOL10  ----------------------------------
// SVD Line: 9800

//  <item> SFDITEM_FIELD__SCI1_SOL1_SOL10
//    <name> SOL10 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40041574) Selects inversion of the level of the transmit data of channel n in UART mode </i>
//    <check> 
//      <loc> ( (unsigned short) SCI1_SOL1 ) </loc>
//      <o.0..0> SOL10
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: SCI1_SOL1  -----------------------------------
// SVD Line: 9791

//  <rtree> SFDITEM_REG__SCI1_SOL1
//    <name> SOL1 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40041574) Serial output level register 1 </i>
//    <loc> ( (unsigned short)((SCI1_SOL1 >> 0) & 0xFFFF), ((SCI1_SOL1 = (SCI1_SOL1 & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SCI1_SOL1_SOL10 </item>
//  </rtree>
//  


// -----------------------  Register Item Address: SCI1_SDR1_SDR1_SDR10  --------------------------
// SVD Line: 9808

unsigned short SCI1_SDR1_SDR1_SDR10 __AT (0x40041748);



// ---------------------------  Register Item: SCI1_SDR1_SDR1_SDR10  ------------------------------
// SVD Line: 9808

//  <item> SFDITEM_REG__SCI1_SDR1_SDR1_SDR10
//    <name> SDR10 </name>
//    <i> [Bits 15..0] RW (@ 0x40041748) Serial data register 10 </i>
//    <edit> 
//      <loc> ( (unsigned short)((SCI1_SDR1_SDR1_SDR10 >> 0) & 0xFFFFFFFF), ((SCI1_SDR1_SDR1_SDR10 = (SCI1_SDR1_SDR1_SDR10 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Register Item Address: SCI1_SDR1_SDR1_SDR11  --------------------------
// SVD Line: 9808

unsigned short SCI1_SDR1_SDR1_SDR11 __AT (0x4004174A);



// ---------------------------  Register Item: SCI1_SDR1_SDR1_SDR11  ------------------------------
// SVD Line: 9808

//  <item> SFDITEM_REG__SCI1_SDR1_SDR1_SDR11
//    <name> SDR11 </name>
//    <i> [Bits 15..0] RW (@ 0x4004174A) Serial data register 11 </i>
//    <edit> 
//      <loc> ( (unsigned short)((SCI1_SDR1_SDR1_SDR11 >> 0) & 0xFFFFFFFF), ((SCI1_SDR1_SDR1_SDR11 = (SCI1_SDR1_SDR1_SDR11 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: SCI1_SIO20  -------------------------------
// SVD Line: 9820

unsigned char SCI1_SIO20 __AT (0x40041748);



// --------------------------------  Register Item: SCI1_SIO20  -----------------------------------
// SVD Line: 9820

//  <item> SFDITEM_REG__SCI1_SIO20
//    <name> SIO20 </name>
//    <i> [Bits 7..0] RW (@ 0x40041748) SPI data register </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCI1_SIO20 >> 0) & 0xFFFFFFFF), ((SCI1_SIO20 = (SCI1_SIO20 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: SCI1_SIO21  -------------------------------
// SVD Line: 9828

unsigned char SCI1_SIO21 __AT (0x4004174A);



// --------------------------------  Register Item: SCI1_SIO21  -----------------------------------
// SVD Line: 9828

//  <item> SFDITEM_REG__SCI1_SIO21
//    <name> SIO21 </name>
//    <i> [Bits 7..0] RW (@ 0x4004174A) SPI data register </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCI1_SIO21 >> 0) & 0xFFFFFFFF), ((SCI1_SIO21 = (SCI1_SIO21 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: SCI1_TXD2  --------------------------------
// SVD Line: 9836

unsigned char SCI1_TXD2 __AT (0x40041748);



// --------------------------------  Register Item: SCI1_TXD2  ------------------------------------
// SVD Line: 9836

//  <item> SFDITEM_REG__SCI1_TXD2
//    <name> TXD2 </name>
//    <i> [Bits 7..0] RW (@ 0x40041748) UART transmit data register </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCI1_TXD2 >> 0) & 0xFFFFFFFF), ((SCI1_TXD2 = (SCI1_TXD2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: SCI1_RXD2  --------------------------------
// SVD Line: 9844

unsigned char SCI1_RXD2 __AT (0x4004174A);



// --------------------------------  Register Item: SCI1_RXD2  ------------------------------------
// SVD Line: 9844

//  <item> SFDITEM_REG__SCI1_RXD2
//    <name> RXD2 </name>
//    <i> [Bits 7..0] RW (@ 0x4004174A) UART receive data register </i>
//    <edit> 
//      <loc> ( (unsigned char)((SCI1_RXD2 >> 0) & 0xFFFFFFFF), ((SCI1_RXD2 = (SCI1_RXD2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------------  Peripheral View: SCI1  -------------------------------------
// SVD Line: 9384

//  <view> SCI1
//    <name> SCI1 </name>
//    <item> SFDITEM_REG__SCI1_SSR10 </item>
//    <item> SFDITEM_REG__SCI1_SSR11 </item>
//    <item> SFDITEM_REG__SCI1_SIR10 </item>
//    <item> SFDITEM_REG__SCI1_SIR11 </item>
//    <item> SFDITEM_REG__SCI1_SMR10 </item>
//    <item> SFDITEM_REG__SCI1_SMR11 </item>
//    <item> SFDITEM_REG__SCI1_SCR10 </item>
//    <item> SFDITEM_REG__SCI1_SCR11 </item>
//    <item> SFDITEM_REG__SCI1_SE1 </item>
//    <item> SFDITEM_REG__SCI1_SS1 </item>
//    <item> SFDITEM_REG__SCI1_ST1 </item>
//    <item> SFDITEM_REG__SCI1_SPS1 </item>
//    <item> SFDITEM_REG__SCI1_SO1 </item>
//    <item> SFDITEM_REG__SCI1_SOE1 </item>
//    <item> SFDITEM_REG__SCI1_SOL1 </item>
//    <item> SFDITEM_REG__SCI1_SDR1_SDR1_SDR10 </item>
//    <item> SFDITEM_REG__SCI1_SDR1_SDR1_SDR11 </item>
//    <item> SFDITEM_REG__SCI1_SIO20 </item>
//    <item> SFDITEM_REG__SCI1_SIO21 </item>
//    <item> SFDITEM_REG__SCI1_TXD2 </item>
//    <item> SFDITEM_REG__SCI1_RXD2 </item>
//  </view>
//  


// -----------------------------  Register Item Address: SPI_SPIM  --------------------------------
// SVD Line: 9880

unsigned int SPI_SPIM __AT (0x40042400);



// --------------------------------  Field Item: SPI_SPIM_SPTF  -----------------------------------
// SVD Line: 9888

//  <item> SFDITEM_FIELD__SPI_SPIM_SPTF
//    <name> SPTF </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40042400) SPI transmission status flag </i>
//    <check> 
//      <loc> ( (unsigned int) SPI_SPIM ) </loc>
//      <o.0..0> SPTF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SPI_SPIM_SDRIF  -----------------------------------
// SVD Line: 9894

//  <item> SFDITEM_FIELD__SPI_SPIM_SDRIF
//    <name> SDRIF </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40042400) Receive buffer non-empty flag </i>
//    <check> 
//      <loc> ( (unsigned int) SPI_SPIM ) </loc>
//      <o.1..1> SDRIF
//    </check>
//  </item>
//  


// --------------------------------  Field Item: SPI_SPIM_DLS  ------------------------------------
// SVD Line: 9900

//  <item> SFDITEM_FIELD__SPI_SPIM_DLS
//    <name> DLS </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40042400) data length control </i>
//    <check> 
//      <loc> ( (unsigned int) SPI_SPIM ) </loc>
//      <o.2..2> DLS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SPI_SPIM_INTMD  -----------------------------------
// SVD Line: 9906

//  <item> SFDITEM_FIELD__SPI_SPIM_INTMD
//    <name> INTMD </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40042400) interrupt source select </i>
//    <check> 
//      <loc> ( (unsigned int) SPI_SPIM ) </loc>
//      <o.3..3> INTMD
//    </check>
//  </item>
//  


// --------------------------------  Field Item: SPI_SPIM_DIR  ------------------------------------
// SVD Line: 9912

//  <item> SFDITEM_FIELD__SPI_SPIM_DIR
//    <name> DIR </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40042400) MSB of LSB mode select </i>
//    <check> 
//      <loc> ( (unsigned int) SPI_SPIM ) </loc>
//      <o.4..4> DIR
//    </check>
//  </item>
//  


// --------------------------------  Field Item: SPI_SPIM_NSSE  -----------------------------------
// SVD Line: 9918

//  <item> SFDITEM_FIELD__SPI_SPIM_NSSE
//    <name> NSSE </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40042400) NSS pin enable </i>
//    <check> 
//      <loc> ( (unsigned int) SPI_SPIM ) </loc>
//      <o.5..5> NSSE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: SPI_SPIM_TRMD  -----------------------------------
// SVD Line: 9924

//  <item> SFDITEM_FIELD__SPI_SPIM_TRMD
//    <name> TRMD </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40042400) Transfer and Receive mode </i>
//    <check> 
//      <loc> ( (unsigned int) SPI_SPIM ) </loc>
//      <o.6..6> TRMD
//    </check>
//  </item>
//  


// --------------------------------  Field Item: SPI_SPIM_SPIE  -----------------------------------
// SVD Line: 9930

//  <item> SFDITEM_FIELD__SPI_SPIM_SPIE
//    <name> SPIE </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40042400) SPI operation enable </i>
//    <check> 
//      <loc> ( (unsigned int) SPI_SPIM ) </loc>
//      <o.7..7> SPIE
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: SPI_SPIM  ------------------------------------
// SVD Line: 9880

//  <rtree> SFDITEM_REG__SPI_SPIM
//    <name> SPIM </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40042400) SPI mode control register </i>
//    <loc> ( (unsigned int)((SPI_SPIM >> 0) & 0xFFFFFFFF), ((SPI_SPIM = (SPI_SPIM & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SPI_SPIM_SPTF </item>
//    <item> SFDITEM_FIELD__SPI_SPIM_SDRIF </item>
//    <item> SFDITEM_FIELD__SPI_SPIM_DLS </item>
//    <item> SFDITEM_FIELD__SPI_SPIM_INTMD </item>
//    <item> SFDITEM_FIELD__SPI_SPIM_DIR </item>
//    <item> SFDITEM_FIELD__SPI_SPIM_NSSE </item>
//    <item> SFDITEM_FIELD__SPI_SPIM_TRMD </item>
//    <item> SFDITEM_FIELD__SPI_SPIM_SPIE </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: SPI_SPIC  --------------------------------
// SVD Line: 9939

unsigned int SPI_SPIC __AT (0x40042404);



// --------------------------------  Field Item: SPI_SPIC_CKS  ------------------------------------
// SVD Line: 9947

//  <item> SFDITEM_FIELD__SPI_SPIC_CKS
//    <name> CKS </name>
//    <rw> 
//    <i> [Bits 2..0] RW (@ 0x40042404) Operation clock control </i>
//    <edit> 
//      <loc> ( (unsigned char)((SPI_SPIC >> 0) & 0x7), ((SPI_SPIC = (SPI_SPIC & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Field Item: SPI_SPIC_DAP  ------------------------------------
// SVD Line: 9954

//  <item> SFDITEM_FIELD__SPI_SPIC_DAP
//    <name> DAP </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40042404) Selection of data phase for SPI </i>
//    <check> 
//      <loc> ( (unsigned int) SPI_SPIC ) </loc>
//      <o.3..3> DAP
//    </check>
//  </item>
//  


// --------------------------------  Field Item: SPI_SPIC_CKP  ------------------------------------
// SVD Line: 9961

//  <item> SFDITEM_FIELD__SPI_SPIC_CKP
//    <name> CKP </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40042404) Selection of clock phase for SPI </i>
//    <check> 
//      <loc> ( (unsigned int) SPI_SPIC ) </loc>
//      <o.4..4> CKP
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: SPI_SPIC  ------------------------------------
// SVD Line: 9939

//  <rtree> SFDITEM_REG__SPI_SPIC
//    <name> SPIC </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40042404) SPI control register </i>
//    <loc> ( (unsigned int)((SPI_SPIC >> 0) & 0xFFFFFFFF), ((SPI_SPIC = (SPI_SPIC & ~(0x1FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SPI_SPIC_CKS </item>
//    <item> SFDITEM_FIELD__SPI_SPIC_DAP </item>
//    <item> SFDITEM_FIELD__SPI_SPIC_CKP </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: SPI_SDRO  --------------------------------
// SVD Line: 9971

unsigned int SPI_SDRO __AT (0x40042408);



// ---------------------------------  Register Item: SPI_SDRO  ------------------------------------
// SVD Line: 9971

//  <item> SFDITEM_REG__SPI_SDRO
//    <name> SDRO </name>
//    <i> [Bits 31..0] RW (@ 0x40042408) Data buffer of transmission </i>
//    <edit> 
//      <loc> ( (unsigned int)((SPI_SDRO >> 0) & 0xFFFFFFFF), ((SPI_SDRO = (SPI_SDRO & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register Item Address: SPI_SDRI  --------------------------------
// SVD Line: 9979

unsigned int SPI_SDRI __AT (0x4004240C);



// ---------------------------------  Register Item: SPI_SDRI  ------------------------------------
// SVD Line: 9979

//  <item> SFDITEM_REG__SPI_SDRI
//    <name> SDRI </name>
//    <i> [Bits 31..0] RW (@ 0x4004240C) Data buffer of reception </i>
//    <edit> 
//      <loc> ( (unsigned int)((SPI_SDRI >> 0) & 0xFFFFFFFF), ((SPI_SDRI = (SPI_SDRI & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------------  Peripheral View: SPI  --------------------------------------
// SVD Line: 9856

//  <view> SPI
//    <name> SPI </name>
//    <item> SFDITEM_REG__SPI_SPIM </item>
//    <item> SFDITEM_REG__SPI_SPIC </item>
//    <item> SFDITEM_REG__SPI_SDRO </item>
//    <item> SFDITEM_REG__SPI_SDRI </item>
//  </view>
//  


// --------------------------  Register Item Address: IICA_IICCTL00  ------------------------------
// SVD Line: 10013

unsigned char IICA_IICCTL00 __AT (0x40041A30);



// ------------------------------  Field Item: IICA_IICCTL00_SPT  ---------------------------------
// SVD Line: 10021

//  <item> SFDITEM_FIELD__IICA_IICCTL00_SPT
//    <name> SPT </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40041A30) Stop condition trigger </i>
//    <check> 
//      <loc> ( (unsigned char) IICA_IICCTL00 ) </loc>
//      <o.0..0> SPT
//    </check>
//  </item>
//  


// ------------------------------  Field Item: IICA_IICCTL00_STT  ---------------------------------
// SVD Line: 10027

//  <item> SFDITEM_FIELD__IICA_IICCTL00_STT
//    <name> STT </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40041A30) Start condition trigger </i>
//    <check> 
//      <loc> ( (unsigned char) IICA_IICCTL00 ) </loc>
//      <o.1..1> STT
//    </check>
//  </item>
//  


// -----------------------------  Field Item: IICA_IICCTL00_ACKE  ---------------------------------
// SVD Line: 10033

//  <item> SFDITEM_FIELD__IICA_IICCTL00_ACKE
//    <name> ACKE </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40041A30) Acknowledgment control </i>
//    <check> 
//      <loc> ( (unsigned char) IICA_IICCTL00 ) </loc>
//      <o.2..2> ACKE
//    </check>
//  </item>
//  


// -----------------------------  Field Item: IICA_IICCTL00_WTIM  ---------------------------------
// SVD Line: 10039

//  <item> SFDITEM_FIELD__IICA_IICCTL00_WTIM
//    <name> WTIM </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40041A30) Control of wait and interrupt request generation </i>
//    <check> 
//      <loc> ( (unsigned char) IICA_IICCTL00 ) </loc>
//      <o.3..3> WTIM
//    </check>
//  </item>
//  


// -----------------------------  Field Item: IICA_IICCTL00_SPIE  ---------------------------------
// SVD Line: 10045

//  <item> SFDITEM_FIELD__IICA_IICCTL00_SPIE
//    <name> SPIE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40041A30) Enable generation of interrupt request when stop condition is detected </i>
//    <check> 
//      <loc> ( (unsigned char) IICA_IICCTL00 ) </loc>
//      <o.4..4> SPIE
//    </check>
//  </item>
//  


// -----------------------------  Field Item: IICA_IICCTL00_WREL  ---------------------------------
// SVD Line: 10051

//  <item> SFDITEM_FIELD__IICA_IICCTL00_WREL
//    <name> WREL </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40041A30) Wait cancellation </i>
//    <check> 
//      <loc> ( (unsigned char) IICA_IICCTL00 ) </loc>
//      <o.5..5> WREL
//    </check>
//  </item>
//  


// -----------------------------  Field Item: IICA_IICCTL00_LREL  ---------------------------------
// SVD Line: 10057

//  <item> SFDITEM_FIELD__IICA_IICCTL00_LREL
//    <name> LREL </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40041A30) Exit from communications </i>
//    <check> 
//      <loc> ( (unsigned char) IICA_IICCTL00 ) </loc>
//      <o.6..6> LREL
//    </check>
//  </item>
//  


// -----------------------------  Field Item: IICA_IICCTL00_IICE  ---------------------------------
// SVD Line: 10063

//  <item> SFDITEM_FIELD__IICA_IICCTL00_IICE
//    <name> IICE </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40041A30) I2C operation enable </i>
//    <check> 
//      <loc> ( (unsigned char) IICA_IICCTL00 ) </loc>
//      <o.7..7> IICE
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: IICA_IICCTL00  ---------------------------------
// SVD Line: 10013

//  <rtree> SFDITEM_REG__IICA_IICCTL00
//    <name> IICCTL00 </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40041A30) IICA control register 0 </i>
//    <loc> ( (unsigned char)((IICA_IICCTL00 >> 0) & 0xFF), ((IICA_IICCTL00 = (IICA_IICCTL00 & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__IICA_IICCTL00_SPT </item>
//    <item> SFDITEM_FIELD__IICA_IICCTL00_STT </item>
//    <item> SFDITEM_FIELD__IICA_IICCTL00_ACKE </item>
//    <item> SFDITEM_FIELD__IICA_IICCTL00_WTIM </item>
//    <item> SFDITEM_FIELD__IICA_IICCTL00_SPIE </item>
//    <item> SFDITEM_FIELD__IICA_IICCTL00_WREL </item>
//    <item> SFDITEM_FIELD__IICA_IICCTL00_LREL </item>
//    <item> SFDITEM_FIELD__IICA_IICCTL00_IICE </item>
//  </rtree>
//  


// --------------------------  Register Item Address: IICA_IICCTL01  ------------------------------
// SVD Line: 10072

unsigned char IICA_IICCTL01 __AT (0x40041A31);



// ------------------------------  Field Item: IICA_IICCTL01_PRS  ---------------------------------
// SVD Line: 10080

//  <item> SFDITEM_FIELD__IICA_IICCTL01_PRS
//    <name> PRS </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40041A31) Operation clock (fMCK) contro </i>
//    <check> 
//      <loc> ( (unsigned char) IICA_IICCTL01 ) </loc>
//      <o.0..0> PRS
//    </check>
//  </item>
//  


// ------------------------------  Field Item: IICA_IICCTL01_DFC  ---------------------------------
// SVD Line: 10087

//  <item> SFDITEM_FIELD__IICA_IICCTL01_DFC
//    <name> DFC </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40041A31) Digital filter operation control </i>
//    <check> 
//      <loc> ( (unsigned char) IICA_IICCTL01 ) </loc>
//      <o.2..2> DFC
//    </check>
//  </item>
//  


// ------------------------------  Field Item: IICA_IICCTL01_SMC  ---------------------------------
// SVD Line: 10094

//  <item> SFDITEM_FIELD__IICA_IICCTL01_SMC
//    <name> SMC </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40041A31) Operation mode switching </i>
//    <check> 
//      <loc> ( (unsigned char) IICA_IICCTL01 ) </loc>
//      <o.3..3> SMC
//    </check>
//  </item>
//  


// ------------------------------  Field Item: IICA_IICCTL01_DAD  ---------------------------------
// SVD Line: 10101

//  <item> SFDITEM_FIELD__IICA_IICCTL01_DAD
//    <name> DAD </name>
//    <r> 
//    <i> [Bit 4] RO (@ 0x40041A31) Detection of SDAAn pin level (valid only when IICEn = 1) </i>
//    <check> 
//      <loc> ( (unsigned char) IICA_IICCTL01 ) </loc>
//      <o.4..4> DAD
//    </check>
//  </item>
//  


// ------------------------------  Field Item: IICA_IICCTL01_CLD  ---------------------------------
// SVD Line: 10108

//  <item> SFDITEM_FIELD__IICA_IICCTL01_CLD
//    <name> CLD </name>
//    <r> 
//    <i> [Bit 5] RO (@ 0x40041A31) Detection of SCLAn pin level (valid only when IICEn = 1) </i>
//    <check> 
//      <loc> ( (unsigned char) IICA_IICCTL01 ) </loc>
//      <o.5..5> CLD
//    </check>
//  </item>
//  


// ------------------------------  Field Item: IICA_IICCTL01_WUP  ---------------------------------
// SVD Line: 10115

//  <item> SFDITEM_FIELD__IICA_IICCTL01_WUP
//    <name> WUP </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40041A31) Control of address match wakeup </i>
//    <check> 
//      <loc> ( (unsigned char) IICA_IICCTL01 ) </loc>
//      <o.7..7> WUP
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: IICA_IICCTL01  ---------------------------------
// SVD Line: 10072

//  <rtree> SFDITEM_REG__IICA_IICCTL01
//    <name> IICCTL01 </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40041A31) IICA control register 0 </i>
//    <loc> ( (unsigned char)((IICA_IICCTL01 >> 0) & 0xFF), ((IICA_IICCTL01 = (IICA_IICCTL01 & ~(0x8DUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x8D) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__IICA_IICCTL01_PRS </item>
//    <item> SFDITEM_FIELD__IICA_IICCTL01_DFC </item>
//    <item> SFDITEM_FIELD__IICA_IICCTL01_SMC </item>
//    <item> SFDITEM_FIELD__IICA_IICCTL01_DAD </item>
//    <item> SFDITEM_FIELD__IICA_IICCTL01_CLD </item>
//    <item> SFDITEM_FIELD__IICA_IICCTL01_WUP </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: IICA_IICWL0  -------------------------------
// SVD Line: 10125

unsigned char IICA_IICWL0 __AT (0x40041A32);



// -------------------------------  Register Item: IICA_IICWL0  -----------------------------------
// SVD Line: 10125

//  <item> SFDITEM_REG__IICA_IICWL0
//    <name> IICWL0 </name>
//    <i> [Bits 7..0] RW (@ 0x40041A32) IICA low-level width setting register 0 </i>
//    <edit> 
//      <loc> ( (unsigned char)((IICA_IICWL0 >> 0) & 0xFFFFFFFF), ((IICA_IICWL0 = (IICA_IICWL0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: IICA_IICWH0  -------------------------------
// SVD Line: 10133

unsigned char IICA_IICWH0 __AT (0x40041A33);



// -------------------------------  Register Item: IICA_IICWH0  -----------------------------------
// SVD Line: 10133

//  <item> SFDITEM_REG__IICA_IICWH0
//    <name> IICWH0 </name>
//    <i> [Bits 7..0] RW (@ 0x40041A33) IICA high-level width setting register 0 </i>
//    <edit> 
//      <loc> ( (unsigned char)((IICA_IICWH0 >> 0) & 0xFFFFFFFF), ((IICA_IICWH0 = (IICA_IICWH0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: IICA_SVA0  --------------------------------
// SVD Line: 10141

unsigned char IICA_SVA0 __AT (0x40041A34);



// --------------------------------  Register Item: IICA_SVA0  ------------------------------------
// SVD Line: 10141

//  <item> SFDITEM_REG__IICA_SVA0
//    <name> SVA0 </name>
//    <i> [Bits 7..0] RW (@ 0x40041A34) Slave address register 0 </i>
//    <edit> 
//      <loc> ( (unsigned char)((IICA_SVA0 >> 0) & 0xFFFFFFFF), ((IICA_SVA0 = (IICA_SVA0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: IICA_IICA0  -------------------------------
// SVD Line: 10149

unsigned char IICA_IICA0 __AT (0x40041B50);



// --------------------------------  Register Item: IICA_IICA0  -----------------------------------
// SVD Line: 10149

//  <item> SFDITEM_REG__IICA_IICA0
//    <name> IICA0 </name>
//    <i> [Bits 7..0] RW (@ 0x40041B50) IICA shift register 0 </i>
//    <edit> 
//      <loc> ( (unsigned char)((IICA_IICA0 >> 0) & 0xFFFFFFFF), ((IICA_IICA0 = (IICA_IICA0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: IICA_IICS0  -------------------------------
// SVD Line: 10157

unsigned char IICA_IICS0 __AT (0x40041B51);



// -------------------------------  Field Item: IICA_IICS0_MSTS  ----------------------------------
// SVD Line: 10166

//  <item> SFDITEM_FIELD__IICA_IICS0_MSTS
//    <name> MSTS </name>
//    <r> 
//    <i> [Bit 7] RO (@ 0x40041B51) Master status check flag </i>
//    <check> 
//      <loc> ( (unsigned char) IICA_IICS0 ) </loc>
//      <o.7..7> MSTS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: IICA_IICS0_ALD  -----------------------------------
// SVD Line: 10172

//  <item> SFDITEM_FIELD__IICA_IICS0_ALD
//    <name> ALD </name>
//    <r> 
//    <i> [Bit 6] RO (@ 0x40041B51) Detection of arbitration loss </i>
//    <check> 
//      <loc> ( (unsigned char) IICA_IICS0 ) </loc>
//      <o.6..6> ALD
//    </check>
//  </item>
//  


// -------------------------------  Field Item: IICA_IICS0_EXC  -----------------------------------
// SVD Line: 10178

//  <item> SFDITEM_FIELD__IICA_IICS0_EXC
//    <name> EXC </name>
//    <r> 
//    <i> [Bit 5] RO (@ 0x40041B51) Detection of extension code reception </i>
//    <check> 
//      <loc> ( (unsigned char) IICA_IICS0 ) </loc>
//      <o.5..5> EXC
//    </check>
//  </item>
//  


// -------------------------------  Field Item: IICA_IICS0_COI  -----------------------------------
// SVD Line: 10184

//  <item> SFDITEM_FIELD__IICA_IICS0_COI
//    <name> COI </name>
//    <r> 
//    <i> [Bit 4] RO (@ 0x40041B51) Detection of matching addresses </i>
//    <check> 
//      <loc> ( (unsigned char) IICA_IICS0 ) </loc>
//      <o.4..4> COI
//    </check>
//  </item>
//  


// -------------------------------  Field Item: IICA_IICS0_TRC  -----------------------------------
// SVD Line: 10190

//  <item> SFDITEM_FIELD__IICA_IICS0_TRC
//    <name> TRC </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x40041B51) Detection of transmit/receive status </i>
//    <check> 
//      <loc> ( (unsigned char) IICA_IICS0 ) </loc>
//      <o.3..3> TRC
//    </check>
//  </item>
//  


// -------------------------------  Field Item: IICA_IICS0_ACKD  ----------------------------------
// SVD Line: 10196

//  <item> SFDITEM_FIELD__IICA_IICS0_ACKD
//    <name> ACKD </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x40041B51) Detection of acknowledge (ACK) </i>
//    <check> 
//      <loc> ( (unsigned char) IICA_IICS0 ) </loc>
//      <o.2..2> ACKD
//    </check>
//  </item>
//  


// -------------------------------  Field Item: IICA_IICS0_STD  -----------------------------------
// SVD Line: 10202

//  <item> SFDITEM_FIELD__IICA_IICS0_STD
//    <name> STD </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x40041B51) Detection of start condition </i>
//    <check> 
//      <loc> ( (unsigned char) IICA_IICS0 ) </loc>
//      <o.1..1> STD
//    </check>
//  </item>
//  


// -------------------------------  Field Item: IICA_IICS0_SPD  -----------------------------------
// SVD Line: 10208

//  <item> SFDITEM_FIELD__IICA_IICS0_SPD
//    <name> SPD </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x40041B51) Detection of stop condition </i>
//    <check> 
//      <loc> ( (unsigned char) IICA_IICS0 ) </loc>
//      <o.0..0> SPD
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: IICA_IICS0  -----------------------------------
// SVD Line: 10157

//  <rtree> SFDITEM_REG__IICA_IICS0
//    <name> IICS0 </name>
//    <r> 
//    <i> [Bits 7..0] RO (@ 0x40041B51) IICA status register 0 </i>
//    <loc> ( (unsigned char)((IICA_IICS0 >> 0) & 0xFF) ) </loc>
//    <item> SFDITEM_FIELD__IICA_IICS0_MSTS </item>
//    <item> SFDITEM_FIELD__IICA_IICS0_ALD </item>
//    <item> SFDITEM_FIELD__IICA_IICS0_EXC </item>
//    <item> SFDITEM_FIELD__IICA_IICS0_COI </item>
//    <item> SFDITEM_FIELD__IICA_IICS0_TRC </item>
//    <item> SFDITEM_FIELD__IICA_IICS0_ACKD </item>
//    <item> SFDITEM_FIELD__IICA_IICS0_STD </item>
//    <item> SFDITEM_FIELD__IICA_IICS0_SPD </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: IICA_IICF0  -------------------------------
// SVD Line: 10217

unsigned char IICA_IICF0 __AT (0x40041B52);



// -------------------------------  Field Item: IICA_IICF0_STCF  ----------------------------------
// SVD Line: 10226

//  <item> SFDITEM_FIELD__IICA_IICF0_STCF
//    <name> STCF </name>
//    <r> 
//    <i> [Bit 7] RO (@ 0x40041B52) STT clear flag </i>
//    <check> 
//      <loc> ( (unsigned char) IICA_IICF0 ) </loc>
//      <o.7..7> STCF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: IICA_IICF0_IICBSY  ---------------------------------
// SVD Line: 10233

//  <item> SFDITEM_FIELD__IICA_IICF0_IICBSY
//    <name> IICBSY </name>
//    <r> 
//    <i> [Bit 6] RO (@ 0x40041B52) I2C bus status flag </i>
//    <check> 
//      <loc> ( (unsigned char) IICA_IICF0 ) </loc>
//      <o.6..6> IICBSY
//    </check>
//  </item>
//  


// ------------------------------  Field Item: IICA_IICF0_STCEN  ----------------------------------
// SVD Line: 10240

//  <item> SFDITEM_FIELD__IICA_IICF0_STCEN
//    <name> STCEN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40041B52) Initial start enable trigger </i>
//    <check> 
//      <loc> ( (unsigned char) IICA_IICF0 ) </loc>
//      <o.1..1> STCEN
//    </check>
//  </item>
//  


// ------------------------------  Field Item: IICA_IICF0_IICRSV  ---------------------------------
// SVD Line: 10247

//  <item> SFDITEM_FIELD__IICA_IICF0_IICRSV
//    <name> IICRSV </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40041B52) Communication reservation function disable bit </i>
//    <check> 
//      <loc> ( (unsigned char) IICA_IICF0 ) </loc>
//      <o.0..0> IICRSV
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: IICA_IICF0  -----------------------------------
// SVD Line: 10217

//  <rtree> SFDITEM_REG__IICA_IICF0
//    <name> IICF0 </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40041B52) IICA flag register 0 </i>
//    <loc> ( (unsigned char)((IICA_IICF0 >> 0) & 0xFF), ((IICA_IICF0 = (IICA_IICF0 & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__IICA_IICF0_STCF </item>
//    <item> SFDITEM_FIELD__IICA_IICF0_IICBSY </item>
//    <item> SFDITEM_FIELD__IICA_IICF0_STCEN </item>
//    <item> SFDITEM_FIELD__IICA_IICF0_IICRSV </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: IICA  -------------------------------------
// SVD Line: 9991

//  <view> IICA
//    <name> IICA </name>
//    <item> SFDITEM_REG__IICA_IICCTL00 </item>
//    <item> SFDITEM_REG__IICA_IICCTL01 </item>
//    <item> SFDITEM_REG__IICA_IICWL0 </item>
//    <item> SFDITEM_REG__IICA_IICWH0 </item>
//    <item> SFDITEM_REG__IICA_SVA0 </item>
//    <item> SFDITEM_REG__IICA_IICA0 </item>
//    <item> SFDITEM_REG__IICA_IICS0 </item>
//    <item> SFDITEM_REG__IICA_IICF0 </item>
//  </view>
//  


// ----------------------------  Register Item Address: IRDA_IRCR  --------------------------------
// SVD Line: 10277

unsigned char IRDA_IRCR __AT (0x400440A0);



// ------------------------------  Field Item: IRDA_IRCR_IRRXINV  ---------------------------------
// SVD Line: 10285

//  <item> SFDITEM_FIELD__IRDA_IRCR_IRRXINV
//    <name> IRRXINV </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x400440A0) IrRxD data polarity switching </i>
//    <check> 
//      <loc> ( (unsigned char) IRDA_IRCR ) </loc>
//      <o.2..2> IRRXINV
//    </check>
//  </item>
//  


// ------------------------------  Field Item: IRDA_IRCR_IRTXINV  ---------------------------------
// SVD Line: 10291

//  <item> SFDITEM_FIELD__IRDA_IRCR_IRTXINV
//    <name> IRTXINV </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x400440A0) IrRxD data polarity switching </i>
//    <check> 
//      <loc> ( (unsigned char) IRDA_IRCR ) </loc>
//      <o.3..3> IRTXINV
//    </check>
//  </item>
//  


// -------------------------------  Field Item: IRDA_IRCR_IRCKS  ----------------------------------
// SVD Line: 10297

//  <item> SFDITEM_FIELD__IRDA_IRCR_IRCKS
//    <name> IRCKS </name>
//    <rw> 
//    <i> [Bits 6..4] RW (@ 0x400440A0) IrRxD clock selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((IRDA_IRCR >> 4) & 0x7), ((IRDA_IRCR = (IRDA_IRCR & ~(0x7UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Field Item: IRDA_IRCR_IRE  -----------------------------------
// SVD Line: 10303

//  <item> SFDITEM_FIELD__IRDA_IRCR_IRE
//    <name> IRE </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x400440A0) IrRxD enable </i>
//    <check> 
//      <loc> ( (unsigned char) IRDA_IRCR ) </loc>
//      <o.7..7> IRE
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: IRDA_IRCR  -----------------------------------
// SVD Line: 10277

//  <rtree> SFDITEM_REG__IRDA_IRCR
//    <name> IRCR </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400440A0) IrDA control register </i>
//    <loc> ( (unsigned char)((IRDA_IRCR >> 0) & 0xFF), ((IRDA_IRCR = (IRDA_IRCR & ~(0xFCUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFC) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__IRDA_IRCR_IRRXINV </item>
//    <item> SFDITEM_FIELD__IRDA_IRCR_IRTXINV </item>
//    <item> SFDITEM_FIELD__IRDA_IRCR_IRCKS </item>
//    <item> SFDITEM_FIELD__IRDA_IRCR_IRE </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: IRDA  -------------------------------------
// SVD Line: 10261

//  <view> IRDA
//    <name> IRDA </name>
//    <item> SFDITEM_REG__IRDA_IRCR </item>
//  </view>
//  


// ----------------------  Register Item Address: DMA_DMAEN_DMAEN_DMAEN0  -------------------------
// SVD Line: 10332

unsigned char DMA_DMAEN_DMAEN_DMAEN0 __AT (0x40005000);



// --------------------------  Register Item: DMA_DMAEN_DMAEN_DMAEN0  -----------------------------
// SVD Line: 10332

//  <item> SFDITEM_REG__DMA_DMAEN_DMAEN_DMAEN0
//    <name> DMAEN0 </name>
//    <i> [Bits 7..0] RW (@ 0x40005000) DMA activation enable register 0 </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMA_DMAEN_DMAEN_DMAEN0 >> 0) & 0xFFFFFFFF), ((DMA_DMAEN_DMAEN_DMAEN0 = (DMA_DMAEN_DMAEN_DMAEN0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: DMA_DMAEN_DMAEN_DMAEN1  -------------------------
// SVD Line: 10332

unsigned char DMA_DMAEN_DMAEN_DMAEN1 __AT (0x40005001);



// --------------------------  Register Item: DMA_DMAEN_DMAEN_DMAEN1  -----------------------------
// SVD Line: 10332

//  <item> SFDITEM_REG__DMA_DMAEN_DMAEN_DMAEN1
//    <name> DMAEN1 </name>
//    <i> [Bits 7..0] RW (@ 0x40005001) DMA activation enable register 1 </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMA_DMAEN_DMAEN_DMAEN1 >> 0) & 0xFFFFFFFF), ((DMA_DMAEN_DMAEN_DMAEN1 = (DMA_DMAEN_DMAEN_DMAEN1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: DMA_DMAEN_DMAEN_DMAEN2  -------------------------
// SVD Line: 10332

unsigned char DMA_DMAEN_DMAEN_DMAEN2 __AT (0x40005002);



// --------------------------  Register Item: DMA_DMAEN_DMAEN_DMAEN2  -----------------------------
// SVD Line: 10332

//  <item> SFDITEM_REG__DMA_DMAEN_DMAEN_DMAEN2
//    <name> DMAEN2 </name>
//    <i> [Bits 7..0] RW (@ 0x40005002) DMA activation enable register 2 </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMA_DMAEN_DMAEN_DMAEN2 >> 0) & 0xFFFFFFFF), ((DMA_DMAEN_DMAEN_DMAEN2 = (DMA_DMAEN_DMAEN_DMAEN2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: DMA_DMABAR  -------------------------------
// SVD Line: 10344

unsigned int DMA_DMABAR __AT (0x40005008);



// --------------------------------  Register Item: DMA_DMABAR  -----------------------------------
// SVD Line: 10344

//  <item> SFDITEM_REG__DMA_DMABAR
//    <name> DMABAR </name>
//    <i> [Bits 31..0] RW (@ 0x40005008) DMA base address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA_DMABAR >> 0) & 0xFFFFFFFF), ((DMA_DMABAR = (DMA_DMABAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: DMA_IFPRCR  -------------------------------
// SVD Line: 10353

unsigned int DMA_IFPRCR __AT (0x4000500C);



// --------------------------------  Register Item: DMA_IFPRCR  -----------------------------------
// SVD Line: 10353

//  <item> SFDITEM_REG__DMA_IFPRCR
//    <name> IFPRCR </name>
//    <i> [Bits 31..0] RW (@ 0x4000500C) DMA Trigger Protect register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMA_IFPRCR >> 0) & 0xFFFFFFFF), ((DMA_IFPRCR = (DMA_IFPRCR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: DMA_DMAIF_DMAIF_DMAIF0  -------------------------
// SVD Line: 10362

unsigned char DMA_DMAIF_DMAIF_DMAIF0 __AT (0x40005010);



// --------------------------  Register Item: DMA_DMAIF_DMAIF_DMAIF0  -----------------------------
// SVD Line: 10362

//  <item> SFDITEM_REG__DMA_DMAIF_DMAIF_DMAIF0
//    <name> DMAIF0 </name>
//    <i> [Bits 7..0] RW (@ 0x40005010) DMA Trigger enable register 0 </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMA_DMAIF_DMAIF_DMAIF0 >> 0) & 0xFFFFFFFF), ((DMA_DMAIF_DMAIF_DMAIF0 = (DMA_DMAIF_DMAIF_DMAIF0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: DMA_DMAIF_DMAIF_DMAIF1  -------------------------
// SVD Line: 10362

unsigned char DMA_DMAIF_DMAIF_DMAIF1 __AT (0x40005011);



// --------------------------  Register Item: DMA_DMAIF_DMAIF_DMAIF1  -----------------------------
// SVD Line: 10362

//  <item> SFDITEM_REG__DMA_DMAIF_DMAIF_DMAIF1
//    <name> DMAIF1 </name>
//    <i> [Bits 7..0] RW (@ 0x40005011) DMA Trigger enable register 1 </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMA_DMAIF_DMAIF_DMAIF1 >> 0) & 0xFFFFFFFF), ((DMA_DMAIF_DMAIF_DMAIF1 = (DMA_DMAIF_DMAIF_DMAIF1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Register Item Address: DMA_DMAIF_DMAIF_DMAIF2  -------------------------
// SVD Line: 10362

unsigned char DMA_DMAIF_DMAIF_DMAIF2 __AT (0x40005012);



// --------------------------  Register Item: DMA_DMAIF_DMAIF_DMAIF2  -----------------------------
// SVD Line: 10362

//  <item> SFDITEM_REG__DMA_DMAIF_DMAIF_DMAIF2
//    <name> DMAIF2 </name>
//    <i> [Bits 7..0] RW (@ 0x40005012) DMA Trigger enable register 2 </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMA_DMAIF_DMAIF_DMAIF2 >> 0) & 0xFFFFFFFF), ((DMA_DMAIF_DMAIF_DMAIF2 = (DMA_DMAIF_DMAIF_DMAIF2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------------  Peripheral View: DMA  --------------------------------------
// SVD Line: 10316

//  <view> DMA
//    <name> DMA </name>
//    <item> SFDITEM_REG__DMA_DMAEN_DMAEN_DMAEN0 </item>
//    <item> SFDITEM_REG__DMA_DMAEN_DMAEN_DMAEN1 </item>
//    <item> SFDITEM_REG__DMA_DMAEN_DMAEN_DMAEN2 </item>
//    <item> SFDITEM_REG__DMA_DMABAR </item>
//    <item> SFDITEM_REG__DMA_IFPRCR </item>
//    <item> SFDITEM_REG__DMA_DMAIF_DMAIF_DMAIF0 </item>
//    <item> SFDITEM_REG__DMA_DMAIF_DMAIF_DMAIF1 </item>
//    <item> SFDITEM_REG__DMA_DMAIF_DMAIF_DMAIF2 </item>
//  </view>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC0  ------------------------
// SVD Line: 10394

unsigned char DMAVEC_VEC_VEC_VEC0 __AT (0x20000000);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC0  ----------------------------
// SVD Line: 10394

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC0
//    <name> [0] </name>
//    <i> [Bits 7..0] RW (@ 0x20000000) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC0 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC0 = (DMAVEC_VEC_VEC_VEC0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC1  ------------------------
// SVD Line: 10394

unsigned char DMAVEC_VEC_VEC_VEC1 __AT (0x20000001);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC1  ----------------------------
// SVD Line: 10394

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC1
//    <name> [1] </name>
//    <i> [Bits 7..0] RW (@ 0x20000001) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC1 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC1 = (DMAVEC_VEC_VEC_VEC1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC2  ------------------------
// SVD Line: 10394

unsigned char DMAVEC_VEC_VEC_VEC2 __AT (0x20000002);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC2  ----------------------------
// SVD Line: 10394

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC2
//    <name> [2] </name>
//    <i> [Bits 7..0] RW (@ 0x20000002) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC2 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC2 = (DMAVEC_VEC_VEC_VEC2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC3  ------------------------
// SVD Line: 10394

unsigned char DMAVEC_VEC_VEC_VEC3 __AT (0x20000003);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC3  ----------------------------
// SVD Line: 10394

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC3
//    <name> [3] </name>
//    <i> [Bits 7..0] RW (@ 0x20000003) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC3 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC3 = (DMAVEC_VEC_VEC_VEC3 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC4  ------------------------
// SVD Line: 10394

unsigned char DMAVEC_VEC_VEC_VEC4 __AT (0x20000004);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC4  ----------------------------
// SVD Line: 10394

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC4
//    <name> [4] </name>
//    <i> [Bits 7..0] RW (@ 0x20000004) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC4 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC4 = (DMAVEC_VEC_VEC_VEC4 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC5  ------------------------
// SVD Line: 10394

unsigned char DMAVEC_VEC_VEC_VEC5 __AT (0x20000005);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC5  ----------------------------
// SVD Line: 10394

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC5
//    <name> [5] </name>
//    <i> [Bits 7..0] RW (@ 0x20000005) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC5 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC5 = (DMAVEC_VEC_VEC_VEC5 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC6  ------------------------
// SVD Line: 10394

unsigned char DMAVEC_VEC_VEC_VEC6 __AT (0x20000006);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC6  ----------------------------
// SVD Line: 10394

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC6
//    <name> [6] </name>
//    <i> [Bits 7..0] RW (@ 0x20000006) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC6 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC6 = (DMAVEC_VEC_VEC_VEC6 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC7  ------------------------
// SVD Line: 10394

unsigned char DMAVEC_VEC_VEC_VEC7 __AT (0x20000007);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC7  ----------------------------
// SVD Line: 10394

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC7
//    <name> [7] </name>
//    <i> [Bits 7..0] RW (@ 0x20000007) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC7 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC7 = (DMAVEC_VEC_VEC_VEC7 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC8  ------------------------
// SVD Line: 10394

unsigned char DMAVEC_VEC_VEC_VEC8 __AT (0x20000008);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC8  ----------------------------
// SVD Line: 10394

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC8
//    <name> [8] </name>
//    <i> [Bits 7..0] RW (@ 0x20000008) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC8 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC8 = (DMAVEC_VEC_VEC_VEC8 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC9  ------------------------
// SVD Line: 10394

unsigned char DMAVEC_VEC_VEC_VEC9 __AT (0x20000009);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC9  ----------------------------
// SVD Line: 10394

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC9
//    <name> [9] </name>
//    <i> [Bits 7..0] RW (@ 0x20000009) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC9 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC9 = (DMAVEC_VEC_VEC_VEC9 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC10  -----------------------
// SVD Line: 10394

unsigned char DMAVEC_VEC_VEC_VEC10 __AT (0x2000000A);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC10  ---------------------------
// SVD Line: 10394

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC10
//    <name> [10] </name>
//    <i> [Bits 7..0] RW (@ 0x2000000A) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC10 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC10 = (DMAVEC_VEC_VEC_VEC10 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC11  -----------------------
// SVD Line: 10394

unsigned char DMAVEC_VEC_VEC_VEC11 __AT (0x2000000B);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC11  ---------------------------
// SVD Line: 10394

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC11
//    <name> [11] </name>
//    <i> [Bits 7..0] RW (@ 0x2000000B) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC11 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC11 = (DMAVEC_VEC_VEC_VEC11 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC12  -----------------------
// SVD Line: 10394

unsigned char DMAVEC_VEC_VEC_VEC12 __AT (0x2000000C);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC12  ---------------------------
// SVD Line: 10394

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC12
//    <name> [12] </name>
//    <i> [Bits 7..0] RW (@ 0x2000000C) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC12 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC12 = (DMAVEC_VEC_VEC_VEC12 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC13  -----------------------
// SVD Line: 10394

unsigned char DMAVEC_VEC_VEC_VEC13 __AT (0x2000000D);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC13  ---------------------------
// SVD Line: 10394

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC13
//    <name> [13] </name>
//    <i> [Bits 7..0] RW (@ 0x2000000D) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC13 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC13 = (DMAVEC_VEC_VEC_VEC13 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC14  -----------------------
// SVD Line: 10394

unsigned char DMAVEC_VEC_VEC_VEC14 __AT (0x2000000E);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC14  ---------------------------
// SVD Line: 10394

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC14
//    <name> [14] </name>
//    <i> [Bits 7..0] RW (@ 0x2000000E) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC14 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC14 = (DMAVEC_VEC_VEC_VEC14 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC15  -----------------------
// SVD Line: 10394

unsigned char DMAVEC_VEC_VEC_VEC15 __AT (0x2000000F);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC15  ---------------------------
// SVD Line: 10394

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC15
//    <name> [15] </name>
//    <i> [Bits 7..0] RW (@ 0x2000000F) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC15 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC15 = (DMAVEC_VEC_VEC_VEC15 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC16  -----------------------
// SVD Line: 10394

unsigned char DMAVEC_VEC_VEC_VEC16 __AT (0x20000010);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC16  ---------------------------
// SVD Line: 10394

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC16
//    <name> [16] </name>
//    <i> [Bits 7..0] RW (@ 0x20000010) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC16 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC16 = (DMAVEC_VEC_VEC_VEC16 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC17  -----------------------
// SVD Line: 10394

unsigned char DMAVEC_VEC_VEC_VEC17 __AT (0x20000011);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC17  ---------------------------
// SVD Line: 10394

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC17
//    <name> [17] </name>
//    <i> [Bits 7..0] RW (@ 0x20000011) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC17 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC17 = (DMAVEC_VEC_VEC_VEC17 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC18  -----------------------
// SVD Line: 10394

unsigned char DMAVEC_VEC_VEC_VEC18 __AT (0x20000012);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC18  ---------------------------
// SVD Line: 10394

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC18
//    <name> [18] </name>
//    <i> [Bits 7..0] RW (@ 0x20000012) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC18 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC18 = (DMAVEC_VEC_VEC_VEC18 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC19  -----------------------
// SVD Line: 10394

unsigned char DMAVEC_VEC_VEC_VEC19 __AT (0x20000013);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC19  ---------------------------
// SVD Line: 10394

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC19
//    <name> [19] </name>
//    <i> [Bits 7..0] RW (@ 0x20000013) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC19 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC19 = (DMAVEC_VEC_VEC_VEC19 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC20  -----------------------
// SVD Line: 10394

unsigned char DMAVEC_VEC_VEC_VEC20 __AT (0x20000014);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC20  ---------------------------
// SVD Line: 10394

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC20
//    <name> [20] </name>
//    <i> [Bits 7..0] RW (@ 0x20000014) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC20 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC20 = (DMAVEC_VEC_VEC_VEC20 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC21  -----------------------
// SVD Line: 10394

unsigned char DMAVEC_VEC_VEC_VEC21 __AT (0x20000015);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC21  ---------------------------
// SVD Line: 10394

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC21
//    <name> [21] </name>
//    <i> [Bits 7..0] RW (@ 0x20000015) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC21 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC21 = (DMAVEC_VEC_VEC_VEC21 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC22  -----------------------
// SVD Line: 10394

unsigned char DMAVEC_VEC_VEC_VEC22 __AT (0x20000016);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC22  ---------------------------
// SVD Line: 10394

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC22
//    <name> [22] </name>
//    <i> [Bits 7..0] RW (@ 0x20000016) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC22 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC22 = (DMAVEC_VEC_VEC_VEC22 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC23  -----------------------
// SVD Line: 10394

unsigned char DMAVEC_VEC_VEC_VEC23 __AT (0x20000017);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC23  ---------------------------
// SVD Line: 10394

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC23
//    <name> [23] </name>
//    <i> [Bits 7..0] RW (@ 0x20000017) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC23 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC23 = (DMAVEC_VEC_VEC_VEC23 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC24  -----------------------
// SVD Line: 10394

unsigned char DMAVEC_VEC_VEC_VEC24 __AT (0x20000018);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC24  ---------------------------
// SVD Line: 10394

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC24
//    <name> [24] </name>
//    <i> [Bits 7..0] RW (@ 0x20000018) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC24 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC24 = (DMAVEC_VEC_VEC_VEC24 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC25  -----------------------
// SVD Line: 10394

unsigned char DMAVEC_VEC_VEC_VEC25 __AT (0x20000019);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC25  ---------------------------
// SVD Line: 10394

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC25
//    <name> [25] </name>
//    <i> [Bits 7..0] RW (@ 0x20000019) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC25 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC25 = (DMAVEC_VEC_VEC_VEC25 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC26  -----------------------
// SVD Line: 10394

unsigned char DMAVEC_VEC_VEC_VEC26 __AT (0x2000001A);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC26  ---------------------------
// SVD Line: 10394

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC26
//    <name> [26] </name>
//    <i> [Bits 7..0] RW (@ 0x2000001A) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC26 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC26 = (DMAVEC_VEC_VEC_VEC26 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC27  -----------------------
// SVD Line: 10394

unsigned char DMAVEC_VEC_VEC_VEC27 __AT (0x2000001B);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC27  ---------------------------
// SVD Line: 10394

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC27
//    <name> [27] </name>
//    <i> [Bits 7..0] RW (@ 0x2000001B) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC27 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC27 = (DMAVEC_VEC_VEC_VEC27 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC28  -----------------------
// SVD Line: 10394

unsigned char DMAVEC_VEC_VEC_VEC28 __AT (0x2000001C);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC28  ---------------------------
// SVD Line: 10394

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC28
//    <name> [28] </name>
//    <i> [Bits 7..0] RW (@ 0x2000001C) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC28 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC28 = (DMAVEC_VEC_VEC_VEC28 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC29  -----------------------
// SVD Line: 10394

unsigned char DMAVEC_VEC_VEC_VEC29 __AT (0x2000001D);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC29  ---------------------------
// SVD Line: 10394

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC29
//    <name> [29] </name>
//    <i> [Bits 7..0] RW (@ 0x2000001D) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC29 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC29 = (DMAVEC_VEC_VEC_VEC29 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC30  -----------------------
// SVD Line: 10394

unsigned char DMAVEC_VEC_VEC_VEC30 __AT (0x2000001E);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC30  ---------------------------
// SVD Line: 10394

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC30
//    <name> [30] </name>
//    <i> [Bits 7..0] RW (@ 0x2000001E) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC30 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC30 = (DMAVEC_VEC_VEC_VEC30 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------  Register Array Item Address: DMAVEC_VEC_VEC_VEC31  -----------------------
// SVD Line: 10394

unsigned char DMAVEC_VEC_VEC_VEC31 __AT (0x2000001F);



// ------------------------  Register Array Item: DMAVEC_VEC_VEC_VEC31  ---------------------------
// SVD Line: 10394

//  <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC31
//    <name> [31] </name>
//    <i> [Bits 7..0] RW (@ 0x2000001F) DMA vector area </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAVEC_VEC_VEC_VEC31 >> 0) & 0xFFFFFFFF), ((DMAVEC_VEC_VEC_VEC31 = (DMAVEC_VEC_VEC_VEC31 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Array ITree: DMAVEC_VEC  --------------------------------
// SVD Line: 10394

//  <itree> SFDITEM_REG__DMAVEC_VEC
//    <name> VEC </name>
//    <i> DMA vector area </i>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC0 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC1 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC2 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC3 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC4 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC5 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC6 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC7 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC8 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC9 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC10 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC11 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC12 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC13 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC14 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC15 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC16 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC17 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC18 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC19 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC20 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC21 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC22 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC23 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC24 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC25 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC26 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC27 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC28 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC29 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC30 </item>
//    <item> SFDITEM_REG__DMAVEC_VEC_VEC_VEC31 </item>
//  </itree>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL0_DMACR  ----------------------
// SVD Line: 10409

unsigned short DMAVEC_CTRL_CTRL_CTRL0_DMACR __AT (0x20000020);



// -----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL0_DMACR_SZ  --------------------------
// SVD Line: 10415

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL0_DMACR_SZ
//    <name> SZ </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x20000020) \nTransfer Data size selection\n0 : BYTE = 8 bits\n1 : HALF = 16 bits\n2 : WORD = 32 bits\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL0_DMACR ) </loc>
//      <o.7..6> SZ
//        <0=> 0: BYTE = 8 bits
//        <1=> 1: HALF = 16 bits
//        <2=> 2: WORD = 32 bits
//        <3=> 3: 
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL0_DMACR_RPTINT  ------------------------
// SVD Line: 10438

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL0_DMACR_RPTINT
//    <name> RPTINT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x20000020) \nEnabling/disabling repeat mode interrupts\n0 : disable = Interrupt generation disabled\n1 : enable = Interrupt generation enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL0_DMACR ) </loc>
//      <o.5..5> RPTINT
//        <0=> 0: disable = Interrupt generation disabled
//        <1=> 1: enable = Interrupt generation enabled
//    </combo>
//  </item>
//  


// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL0_DMACR_CHNE  -------------------------
// SVD Line: 10456

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL0_DMACR_CHNE
//    <name> CHNE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x20000020) \nEnabling/disabling chain transfers\n0 : disable = Chain transfers disabled\n1 : enable = Chain transfers enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL0_DMACR ) </loc>
//      <o.4..4> CHNE
//        <0=> 0: disable = Chain transfers disabled
//        <1=> 1: enable = Chain transfers enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL0_DMACR_DAMOD  -------------------------
// SVD Line: 10474

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL0_DMACR_DAMOD
//    <name> DAMOD </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x20000020) \nDestination address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL0_DMACR ) </loc>
//      <o.3..3> DAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL0_DMACR_SAMOD  -------------------------
// SVD Line: 10492

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL0_DMACR_SAMOD
//    <name> SAMOD </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x20000020) \nSource address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL0_DMACR ) </loc>
//      <o.2..2> SAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL0_DMACR_RPTSEL  ------------------------
// SVD Line: 10510

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL0_DMACR_RPTSEL
//    <name> RPTSEL </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x20000020) \nRepeat area selection\n0 : destination = Transfer destination is the repeat area\n1 : source = Transfer source is the repeat area </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL0_DMACR ) </loc>
//      <o.1..1> RPTSEL
//        <0=> 0: destination = Transfer destination is the repeat area
//        <1=> 1: source = Transfer source is the repeat area
//    </combo>
//  </item>
//  


// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL0_DMACR_MODE  -------------------------
// SVD Line: 10528

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL0_DMACR_MODE
//    <name> MODE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x20000020) \nTransfer mode selection\n0 : Normal = Normal mode\n1 : Repeat = Repeat mode </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL0_DMACR ) </loc>
//      <o.0..0> MODE
//        <0=> 0: Normal = Normal mode
//        <1=> 1: Repeat = Repeat mode
//    </combo>
//  </item>
//  


// ----------------------  Register RTree: DMAVEC_CTRL_CTRL_CTRL0_DMACR  --------------------------
// SVD Line: 10409

//  <rtree> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL0_DMACR
//    <name> DMACR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x20000020) DMA Control register </i>
//    <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL0_DMACR >> 0) & 0xFFFF), ((DMAVEC_CTRL_CTRL_CTRL0_DMACR = (DMAVEC_CTRL_CTRL_CTRL0_DMACR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL0_DMACR_SZ </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL0_DMACR_RPTINT </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL0_DMACR_CHNE </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL0_DMACR_DAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL0_DMACR_SAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL0_DMACR_RPTSEL </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL0_DMACR_MODE </item>
//  </rtree>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL0_DMBLS  ----------------------
// SVD Line: 10548

unsigned short DMAVEC_CTRL_CTRL_CTRL0_DMBLS __AT (0x20000022);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL0_DMBLS  --------------------------
// SVD Line: 10548

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL0_DMBLS
//    <name> DMBLS </name>
//    <i> [Bits 15..0] RW (@ 0x20000022) DMA Block Size register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL0_DMBLS >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL0_DMBLS = (DMAVEC_CTRL_CTRL_CTRL0_DMBLS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL0_DMACT  ----------------------
// SVD Line: 10554

unsigned short DMAVEC_CTRL_CTRL_CTRL0_DMACT __AT (0x20000024);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL0_DMACT  --------------------------
// SVD Line: 10554

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL0_DMACT
//    <name> DMACT </name>
//    <i> [Bits 15..0] RW (@ 0x20000024) DMA Transfer Count register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL0_DMACT >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL0_DMACT = (DMAVEC_CTRL_CTRL_CTRL0_DMACT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL0_DMRLD  ----------------------
// SVD Line: 10560

unsigned short DMAVEC_CTRL_CTRL_CTRL0_DMRLD __AT (0x20000026);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL0_DMRLD  --------------------------
// SVD Line: 10560

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL0_DMRLD
//    <name> DMRLD </name>
//    <i> [Bits 15..0] RW (@ 0x20000026) DMA Transfer Count Reload register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL0_DMRLD >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL0_DMRLD = (DMAVEC_CTRL_CTRL_CTRL0_DMRLD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL0_DMSAR  ----------------------
// SVD Line: 10566

unsigned int DMAVEC_CTRL_CTRL_CTRL0_DMSAR __AT (0x20000028);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL0_DMSAR  --------------------------
// SVD Line: 10566

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL0_DMSAR
//    <name> DMSAR </name>
//    <i> [Bits 31..0] RW (@ 0x20000028) DMA Source Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL0_DMSAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL0_DMSAR = (DMAVEC_CTRL_CTRL_CTRL0_DMSAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL0_DMDAR  ----------------------
// SVD Line: 10572

unsigned int DMAVEC_CTRL_CTRL_CTRL0_DMDAR __AT (0x2000002C);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL0_DMDAR  --------------------------
// SVD Line: 10572

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL0_DMDAR
//    <name> DMDAR </name>
//    <i> [Bits 31..0] RW (@ 0x2000002C) DMA Destination Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL0_DMDAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL0_DMDAR = (DMAVEC_CTRL_CTRL_CTRL0_DMDAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Cluster ITree: DMAVEC_CTRL_CTRL_CTRL0  -----------------------------
// SVD Line: 10403

//  <itree> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL0
//    <name> [0] </name>
//    <i> DMA control data area </i>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL0_DMACR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL0_DMBLS </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL0_DMACT </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL0_DMRLD </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL0_DMSAR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL0_DMDAR </item>
//  </itree>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL1_DMACR  ----------------------
// SVD Line: 10409

unsigned short DMAVEC_CTRL_CTRL_CTRL1_DMACR __AT (0x20000030);



// -----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL1_DMACR_SZ  --------------------------
// SVD Line: 10415

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL1_DMACR_SZ
//    <name> SZ </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x20000030) \nTransfer Data size selection\n0 : BYTE = 8 bits\n1 : HALF = 16 bits\n2 : WORD = 32 bits\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL1_DMACR ) </loc>
//      <o.7..6> SZ
//        <0=> 0: BYTE = 8 bits
//        <1=> 1: HALF = 16 bits
//        <2=> 2: WORD = 32 bits
//        <3=> 3: 
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL1_DMACR_RPTINT  ------------------------
// SVD Line: 10438

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL1_DMACR_RPTINT
//    <name> RPTINT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x20000030) \nEnabling/disabling repeat mode interrupts\n0 : disable = Interrupt generation disabled\n1 : enable = Interrupt generation enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL1_DMACR ) </loc>
//      <o.5..5> RPTINT
//        <0=> 0: disable = Interrupt generation disabled
//        <1=> 1: enable = Interrupt generation enabled
//    </combo>
//  </item>
//  


// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL1_DMACR_CHNE  -------------------------
// SVD Line: 10456

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL1_DMACR_CHNE
//    <name> CHNE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x20000030) \nEnabling/disabling chain transfers\n0 : disable = Chain transfers disabled\n1 : enable = Chain transfers enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL1_DMACR ) </loc>
//      <o.4..4> CHNE
//        <0=> 0: disable = Chain transfers disabled
//        <1=> 1: enable = Chain transfers enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL1_DMACR_DAMOD  -------------------------
// SVD Line: 10474

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL1_DMACR_DAMOD
//    <name> DAMOD </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x20000030) \nDestination address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL1_DMACR ) </loc>
//      <o.3..3> DAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL1_DMACR_SAMOD  -------------------------
// SVD Line: 10492

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL1_DMACR_SAMOD
//    <name> SAMOD </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x20000030) \nSource address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL1_DMACR ) </loc>
//      <o.2..2> SAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL1_DMACR_RPTSEL  ------------------------
// SVD Line: 10510

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL1_DMACR_RPTSEL
//    <name> RPTSEL </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x20000030) \nRepeat area selection\n0 : destination = Transfer destination is the repeat area\n1 : source = Transfer source is the repeat area </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL1_DMACR ) </loc>
//      <o.1..1> RPTSEL
//        <0=> 0: destination = Transfer destination is the repeat area
//        <1=> 1: source = Transfer source is the repeat area
//    </combo>
//  </item>
//  


// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL1_DMACR_MODE  -------------------------
// SVD Line: 10528

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL1_DMACR_MODE
//    <name> MODE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x20000030) \nTransfer mode selection\n0 : Normal = Normal mode\n1 : Repeat = Repeat mode </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL1_DMACR ) </loc>
//      <o.0..0> MODE
//        <0=> 0: Normal = Normal mode
//        <1=> 1: Repeat = Repeat mode
//    </combo>
//  </item>
//  


// ----------------------  Register RTree: DMAVEC_CTRL_CTRL_CTRL1_DMACR  --------------------------
// SVD Line: 10409

//  <rtree> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL1_DMACR
//    <name> DMACR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x20000030) DMA Control register </i>
//    <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL1_DMACR >> 0) & 0xFFFF), ((DMAVEC_CTRL_CTRL_CTRL1_DMACR = (DMAVEC_CTRL_CTRL_CTRL1_DMACR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL1_DMACR_SZ </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL1_DMACR_RPTINT </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL1_DMACR_CHNE </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL1_DMACR_DAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL1_DMACR_SAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL1_DMACR_RPTSEL </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL1_DMACR_MODE </item>
//  </rtree>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL1_DMBLS  ----------------------
// SVD Line: 10548

unsigned short DMAVEC_CTRL_CTRL_CTRL1_DMBLS __AT (0x20000032);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL1_DMBLS  --------------------------
// SVD Line: 10548

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL1_DMBLS
//    <name> DMBLS </name>
//    <i> [Bits 15..0] RW (@ 0x20000032) DMA Block Size register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL1_DMBLS >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL1_DMBLS = (DMAVEC_CTRL_CTRL_CTRL1_DMBLS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL1_DMACT  ----------------------
// SVD Line: 10554

unsigned short DMAVEC_CTRL_CTRL_CTRL1_DMACT __AT (0x20000034);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL1_DMACT  --------------------------
// SVD Line: 10554

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL1_DMACT
//    <name> DMACT </name>
//    <i> [Bits 15..0] RW (@ 0x20000034) DMA Transfer Count register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL1_DMACT >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL1_DMACT = (DMAVEC_CTRL_CTRL_CTRL1_DMACT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL1_DMRLD  ----------------------
// SVD Line: 10560

unsigned short DMAVEC_CTRL_CTRL_CTRL1_DMRLD __AT (0x20000036);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL1_DMRLD  --------------------------
// SVD Line: 10560

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL1_DMRLD
//    <name> DMRLD </name>
//    <i> [Bits 15..0] RW (@ 0x20000036) DMA Transfer Count Reload register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL1_DMRLD >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL1_DMRLD = (DMAVEC_CTRL_CTRL_CTRL1_DMRLD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL1_DMSAR  ----------------------
// SVD Line: 10566

unsigned int DMAVEC_CTRL_CTRL_CTRL1_DMSAR __AT (0x20000038);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL1_DMSAR  --------------------------
// SVD Line: 10566

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL1_DMSAR
//    <name> DMSAR </name>
//    <i> [Bits 31..0] RW (@ 0x20000038) DMA Source Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL1_DMSAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL1_DMSAR = (DMAVEC_CTRL_CTRL_CTRL1_DMSAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL1_DMDAR  ----------------------
// SVD Line: 10572

unsigned int DMAVEC_CTRL_CTRL_CTRL1_DMDAR __AT (0x2000003C);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL1_DMDAR  --------------------------
// SVD Line: 10572

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL1_DMDAR
//    <name> DMDAR </name>
//    <i> [Bits 31..0] RW (@ 0x2000003C) DMA Destination Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL1_DMDAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL1_DMDAR = (DMAVEC_CTRL_CTRL_CTRL1_DMDAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Cluster ITree: DMAVEC_CTRL_CTRL_CTRL1  -----------------------------
// SVD Line: 10403

//  <itree> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL1
//    <name> [1] </name>
//    <i> DMA control data area </i>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL1_DMACR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL1_DMBLS </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL1_DMACT </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL1_DMRLD </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL1_DMSAR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL1_DMDAR </item>
//  </itree>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL2_DMACR  ----------------------
// SVD Line: 10409

unsigned short DMAVEC_CTRL_CTRL_CTRL2_DMACR __AT (0x20000040);



// -----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL2_DMACR_SZ  --------------------------
// SVD Line: 10415

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL2_DMACR_SZ
//    <name> SZ </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x20000040) \nTransfer Data size selection\n0 : BYTE = 8 bits\n1 : HALF = 16 bits\n2 : WORD = 32 bits\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL2_DMACR ) </loc>
//      <o.7..6> SZ
//        <0=> 0: BYTE = 8 bits
//        <1=> 1: HALF = 16 bits
//        <2=> 2: WORD = 32 bits
//        <3=> 3: 
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL2_DMACR_RPTINT  ------------------------
// SVD Line: 10438

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL2_DMACR_RPTINT
//    <name> RPTINT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x20000040) \nEnabling/disabling repeat mode interrupts\n0 : disable = Interrupt generation disabled\n1 : enable = Interrupt generation enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL2_DMACR ) </loc>
//      <o.5..5> RPTINT
//        <0=> 0: disable = Interrupt generation disabled
//        <1=> 1: enable = Interrupt generation enabled
//    </combo>
//  </item>
//  


// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL2_DMACR_CHNE  -------------------------
// SVD Line: 10456

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL2_DMACR_CHNE
//    <name> CHNE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x20000040) \nEnabling/disabling chain transfers\n0 : disable = Chain transfers disabled\n1 : enable = Chain transfers enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL2_DMACR ) </loc>
//      <o.4..4> CHNE
//        <0=> 0: disable = Chain transfers disabled
//        <1=> 1: enable = Chain transfers enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL2_DMACR_DAMOD  -------------------------
// SVD Line: 10474

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL2_DMACR_DAMOD
//    <name> DAMOD </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x20000040) \nDestination address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL2_DMACR ) </loc>
//      <o.3..3> DAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL2_DMACR_SAMOD  -------------------------
// SVD Line: 10492

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL2_DMACR_SAMOD
//    <name> SAMOD </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x20000040) \nSource address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL2_DMACR ) </loc>
//      <o.2..2> SAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL2_DMACR_RPTSEL  ------------------------
// SVD Line: 10510

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL2_DMACR_RPTSEL
//    <name> RPTSEL </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x20000040) \nRepeat area selection\n0 : destination = Transfer destination is the repeat area\n1 : source = Transfer source is the repeat area </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL2_DMACR ) </loc>
//      <o.1..1> RPTSEL
//        <0=> 0: destination = Transfer destination is the repeat area
//        <1=> 1: source = Transfer source is the repeat area
//    </combo>
//  </item>
//  


// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL2_DMACR_MODE  -------------------------
// SVD Line: 10528

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL2_DMACR_MODE
//    <name> MODE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x20000040) \nTransfer mode selection\n0 : Normal = Normal mode\n1 : Repeat = Repeat mode </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL2_DMACR ) </loc>
//      <o.0..0> MODE
//        <0=> 0: Normal = Normal mode
//        <1=> 1: Repeat = Repeat mode
//    </combo>
//  </item>
//  


// ----------------------  Register RTree: DMAVEC_CTRL_CTRL_CTRL2_DMACR  --------------------------
// SVD Line: 10409

//  <rtree> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL2_DMACR
//    <name> DMACR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x20000040) DMA Control register </i>
//    <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL2_DMACR >> 0) & 0xFFFF), ((DMAVEC_CTRL_CTRL_CTRL2_DMACR = (DMAVEC_CTRL_CTRL_CTRL2_DMACR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL2_DMACR_SZ </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL2_DMACR_RPTINT </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL2_DMACR_CHNE </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL2_DMACR_DAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL2_DMACR_SAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL2_DMACR_RPTSEL </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL2_DMACR_MODE </item>
//  </rtree>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL2_DMBLS  ----------------------
// SVD Line: 10548

unsigned short DMAVEC_CTRL_CTRL_CTRL2_DMBLS __AT (0x20000042);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL2_DMBLS  --------------------------
// SVD Line: 10548

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL2_DMBLS
//    <name> DMBLS </name>
//    <i> [Bits 15..0] RW (@ 0x20000042) DMA Block Size register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL2_DMBLS >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL2_DMBLS = (DMAVEC_CTRL_CTRL_CTRL2_DMBLS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL2_DMACT  ----------------------
// SVD Line: 10554

unsigned short DMAVEC_CTRL_CTRL_CTRL2_DMACT __AT (0x20000044);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL2_DMACT  --------------------------
// SVD Line: 10554

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL2_DMACT
//    <name> DMACT </name>
//    <i> [Bits 15..0] RW (@ 0x20000044) DMA Transfer Count register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL2_DMACT >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL2_DMACT = (DMAVEC_CTRL_CTRL_CTRL2_DMACT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL2_DMRLD  ----------------------
// SVD Line: 10560

unsigned short DMAVEC_CTRL_CTRL_CTRL2_DMRLD __AT (0x20000046);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL2_DMRLD  --------------------------
// SVD Line: 10560

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL2_DMRLD
//    <name> DMRLD </name>
//    <i> [Bits 15..0] RW (@ 0x20000046) DMA Transfer Count Reload register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL2_DMRLD >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL2_DMRLD = (DMAVEC_CTRL_CTRL_CTRL2_DMRLD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL2_DMSAR  ----------------------
// SVD Line: 10566

unsigned int DMAVEC_CTRL_CTRL_CTRL2_DMSAR __AT (0x20000048);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL2_DMSAR  --------------------------
// SVD Line: 10566

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL2_DMSAR
//    <name> DMSAR </name>
//    <i> [Bits 31..0] RW (@ 0x20000048) DMA Source Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL2_DMSAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL2_DMSAR = (DMAVEC_CTRL_CTRL_CTRL2_DMSAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL2_DMDAR  ----------------------
// SVD Line: 10572

unsigned int DMAVEC_CTRL_CTRL_CTRL2_DMDAR __AT (0x2000004C);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL2_DMDAR  --------------------------
// SVD Line: 10572

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL2_DMDAR
//    <name> DMDAR </name>
//    <i> [Bits 31..0] RW (@ 0x2000004C) DMA Destination Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL2_DMDAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL2_DMDAR = (DMAVEC_CTRL_CTRL_CTRL2_DMDAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Cluster ITree: DMAVEC_CTRL_CTRL_CTRL2  -----------------------------
// SVD Line: 10403

//  <itree> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL2
//    <name> [2] </name>
//    <i> DMA control data area </i>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL2_DMACR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL2_DMBLS </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL2_DMACT </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL2_DMRLD </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL2_DMSAR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL2_DMDAR </item>
//  </itree>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL3_DMACR  ----------------------
// SVD Line: 10409

unsigned short DMAVEC_CTRL_CTRL_CTRL3_DMACR __AT (0x20000050);



// -----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL3_DMACR_SZ  --------------------------
// SVD Line: 10415

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL3_DMACR_SZ
//    <name> SZ </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x20000050) \nTransfer Data size selection\n0 : BYTE = 8 bits\n1 : HALF = 16 bits\n2 : WORD = 32 bits\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL3_DMACR ) </loc>
//      <o.7..6> SZ
//        <0=> 0: BYTE = 8 bits
//        <1=> 1: HALF = 16 bits
//        <2=> 2: WORD = 32 bits
//        <3=> 3: 
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL3_DMACR_RPTINT  ------------------------
// SVD Line: 10438

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL3_DMACR_RPTINT
//    <name> RPTINT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x20000050) \nEnabling/disabling repeat mode interrupts\n0 : disable = Interrupt generation disabled\n1 : enable = Interrupt generation enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL3_DMACR ) </loc>
//      <o.5..5> RPTINT
//        <0=> 0: disable = Interrupt generation disabled
//        <1=> 1: enable = Interrupt generation enabled
//    </combo>
//  </item>
//  


// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL3_DMACR_CHNE  -------------------------
// SVD Line: 10456

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL3_DMACR_CHNE
//    <name> CHNE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x20000050) \nEnabling/disabling chain transfers\n0 : disable = Chain transfers disabled\n1 : enable = Chain transfers enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL3_DMACR ) </loc>
//      <o.4..4> CHNE
//        <0=> 0: disable = Chain transfers disabled
//        <1=> 1: enable = Chain transfers enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL3_DMACR_DAMOD  -------------------------
// SVD Line: 10474

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL3_DMACR_DAMOD
//    <name> DAMOD </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x20000050) \nDestination address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL3_DMACR ) </loc>
//      <o.3..3> DAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL3_DMACR_SAMOD  -------------------------
// SVD Line: 10492

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL3_DMACR_SAMOD
//    <name> SAMOD </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x20000050) \nSource address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL3_DMACR ) </loc>
//      <o.2..2> SAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL3_DMACR_RPTSEL  ------------------------
// SVD Line: 10510

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL3_DMACR_RPTSEL
//    <name> RPTSEL </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x20000050) \nRepeat area selection\n0 : destination = Transfer destination is the repeat area\n1 : source = Transfer source is the repeat area </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL3_DMACR ) </loc>
//      <o.1..1> RPTSEL
//        <0=> 0: destination = Transfer destination is the repeat area
//        <1=> 1: source = Transfer source is the repeat area
//    </combo>
//  </item>
//  


// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL3_DMACR_MODE  -------------------------
// SVD Line: 10528

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL3_DMACR_MODE
//    <name> MODE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x20000050) \nTransfer mode selection\n0 : Normal = Normal mode\n1 : Repeat = Repeat mode </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL3_DMACR ) </loc>
//      <o.0..0> MODE
//        <0=> 0: Normal = Normal mode
//        <1=> 1: Repeat = Repeat mode
//    </combo>
//  </item>
//  


// ----------------------  Register RTree: DMAVEC_CTRL_CTRL_CTRL3_DMACR  --------------------------
// SVD Line: 10409

//  <rtree> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL3_DMACR
//    <name> DMACR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x20000050) DMA Control register </i>
//    <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL3_DMACR >> 0) & 0xFFFF), ((DMAVEC_CTRL_CTRL_CTRL3_DMACR = (DMAVEC_CTRL_CTRL_CTRL3_DMACR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL3_DMACR_SZ </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL3_DMACR_RPTINT </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL3_DMACR_CHNE </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL3_DMACR_DAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL3_DMACR_SAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL3_DMACR_RPTSEL </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL3_DMACR_MODE </item>
//  </rtree>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL3_DMBLS  ----------------------
// SVD Line: 10548

unsigned short DMAVEC_CTRL_CTRL_CTRL3_DMBLS __AT (0x20000052);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL3_DMBLS  --------------------------
// SVD Line: 10548

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL3_DMBLS
//    <name> DMBLS </name>
//    <i> [Bits 15..0] RW (@ 0x20000052) DMA Block Size register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL3_DMBLS >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL3_DMBLS = (DMAVEC_CTRL_CTRL_CTRL3_DMBLS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL3_DMACT  ----------------------
// SVD Line: 10554

unsigned short DMAVEC_CTRL_CTRL_CTRL3_DMACT __AT (0x20000054);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL3_DMACT  --------------------------
// SVD Line: 10554

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL3_DMACT
//    <name> DMACT </name>
//    <i> [Bits 15..0] RW (@ 0x20000054) DMA Transfer Count register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL3_DMACT >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL3_DMACT = (DMAVEC_CTRL_CTRL_CTRL3_DMACT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL3_DMRLD  ----------------------
// SVD Line: 10560

unsigned short DMAVEC_CTRL_CTRL_CTRL3_DMRLD __AT (0x20000056);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL3_DMRLD  --------------------------
// SVD Line: 10560

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL3_DMRLD
//    <name> DMRLD </name>
//    <i> [Bits 15..0] RW (@ 0x20000056) DMA Transfer Count Reload register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL3_DMRLD >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL3_DMRLD = (DMAVEC_CTRL_CTRL_CTRL3_DMRLD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL3_DMSAR  ----------------------
// SVD Line: 10566

unsigned int DMAVEC_CTRL_CTRL_CTRL3_DMSAR __AT (0x20000058);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL3_DMSAR  --------------------------
// SVD Line: 10566

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL3_DMSAR
//    <name> DMSAR </name>
//    <i> [Bits 31..0] RW (@ 0x20000058) DMA Source Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL3_DMSAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL3_DMSAR = (DMAVEC_CTRL_CTRL_CTRL3_DMSAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL3_DMDAR  ----------------------
// SVD Line: 10572

unsigned int DMAVEC_CTRL_CTRL_CTRL3_DMDAR __AT (0x2000005C);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL3_DMDAR  --------------------------
// SVD Line: 10572

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL3_DMDAR
//    <name> DMDAR </name>
//    <i> [Bits 31..0] RW (@ 0x2000005C) DMA Destination Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL3_DMDAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL3_DMDAR = (DMAVEC_CTRL_CTRL_CTRL3_DMDAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Cluster ITree: DMAVEC_CTRL_CTRL_CTRL3  -----------------------------
// SVD Line: 10403

//  <itree> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL3
//    <name> [3] </name>
//    <i> DMA control data area </i>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL3_DMACR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL3_DMBLS </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL3_DMACT </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL3_DMRLD </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL3_DMSAR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL3_DMDAR </item>
//  </itree>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL4_DMACR  ----------------------
// SVD Line: 10409

unsigned short DMAVEC_CTRL_CTRL_CTRL4_DMACR __AT (0x20000060);



// -----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL4_DMACR_SZ  --------------------------
// SVD Line: 10415

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL4_DMACR_SZ
//    <name> SZ </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x20000060) \nTransfer Data size selection\n0 : BYTE = 8 bits\n1 : HALF = 16 bits\n2 : WORD = 32 bits\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL4_DMACR ) </loc>
//      <o.7..6> SZ
//        <0=> 0: BYTE = 8 bits
//        <1=> 1: HALF = 16 bits
//        <2=> 2: WORD = 32 bits
//        <3=> 3: 
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL4_DMACR_RPTINT  ------------------------
// SVD Line: 10438

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL4_DMACR_RPTINT
//    <name> RPTINT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x20000060) \nEnabling/disabling repeat mode interrupts\n0 : disable = Interrupt generation disabled\n1 : enable = Interrupt generation enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL4_DMACR ) </loc>
//      <o.5..5> RPTINT
//        <0=> 0: disable = Interrupt generation disabled
//        <1=> 1: enable = Interrupt generation enabled
//    </combo>
//  </item>
//  


// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL4_DMACR_CHNE  -------------------------
// SVD Line: 10456

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL4_DMACR_CHNE
//    <name> CHNE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x20000060) \nEnabling/disabling chain transfers\n0 : disable = Chain transfers disabled\n1 : enable = Chain transfers enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL4_DMACR ) </loc>
//      <o.4..4> CHNE
//        <0=> 0: disable = Chain transfers disabled
//        <1=> 1: enable = Chain transfers enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL4_DMACR_DAMOD  -------------------------
// SVD Line: 10474

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL4_DMACR_DAMOD
//    <name> DAMOD </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x20000060) \nDestination address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL4_DMACR ) </loc>
//      <o.3..3> DAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL4_DMACR_SAMOD  -------------------------
// SVD Line: 10492

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL4_DMACR_SAMOD
//    <name> SAMOD </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x20000060) \nSource address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL4_DMACR ) </loc>
//      <o.2..2> SAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL4_DMACR_RPTSEL  ------------------------
// SVD Line: 10510

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL4_DMACR_RPTSEL
//    <name> RPTSEL </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x20000060) \nRepeat area selection\n0 : destination = Transfer destination is the repeat area\n1 : source = Transfer source is the repeat area </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL4_DMACR ) </loc>
//      <o.1..1> RPTSEL
//        <0=> 0: destination = Transfer destination is the repeat area
//        <1=> 1: source = Transfer source is the repeat area
//    </combo>
//  </item>
//  


// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL4_DMACR_MODE  -------------------------
// SVD Line: 10528

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL4_DMACR_MODE
//    <name> MODE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x20000060) \nTransfer mode selection\n0 : Normal = Normal mode\n1 : Repeat = Repeat mode </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL4_DMACR ) </loc>
//      <o.0..0> MODE
//        <0=> 0: Normal = Normal mode
//        <1=> 1: Repeat = Repeat mode
//    </combo>
//  </item>
//  


// ----------------------  Register RTree: DMAVEC_CTRL_CTRL_CTRL4_DMACR  --------------------------
// SVD Line: 10409

//  <rtree> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL4_DMACR
//    <name> DMACR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x20000060) DMA Control register </i>
//    <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL4_DMACR >> 0) & 0xFFFF), ((DMAVEC_CTRL_CTRL_CTRL4_DMACR = (DMAVEC_CTRL_CTRL_CTRL4_DMACR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL4_DMACR_SZ </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL4_DMACR_RPTINT </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL4_DMACR_CHNE </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL4_DMACR_DAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL4_DMACR_SAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL4_DMACR_RPTSEL </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL4_DMACR_MODE </item>
//  </rtree>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL4_DMBLS  ----------------------
// SVD Line: 10548

unsigned short DMAVEC_CTRL_CTRL_CTRL4_DMBLS __AT (0x20000062);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL4_DMBLS  --------------------------
// SVD Line: 10548

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL4_DMBLS
//    <name> DMBLS </name>
//    <i> [Bits 15..0] RW (@ 0x20000062) DMA Block Size register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL4_DMBLS >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL4_DMBLS = (DMAVEC_CTRL_CTRL_CTRL4_DMBLS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL4_DMACT  ----------------------
// SVD Line: 10554

unsigned short DMAVEC_CTRL_CTRL_CTRL4_DMACT __AT (0x20000064);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL4_DMACT  --------------------------
// SVD Line: 10554

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL4_DMACT
//    <name> DMACT </name>
//    <i> [Bits 15..0] RW (@ 0x20000064) DMA Transfer Count register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL4_DMACT >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL4_DMACT = (DMAVEC_CTRL_CTRL_CTRL4_DMACT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL4_DMRLD  ----------------------
// SVD Line: 10560

unsigned short DMAVEC_CTRL_CTRL_CTRL4_DMRLD __AT (0x20000066);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL4_DMRLD  --------------------------
// SVD Line: 10560

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL4_DMRLD
//    <name> DMRLD </name>
//    <i> [Bits 15..0] RW (@ 0x20000066) DMA Transfer Count Reload register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL4_DMRLD >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL4_DMRLD = (DMAVEC_CTRL_CTRL_CTRL4_DMRLD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL4_DMSAR  ----------------------
// SVD Line: 10566

unsigned int DMAVEC_CTRL_CTRL_CTRL4_DMSAR __AT (0x20000068);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL4_DMSAR  --------------------------
// SVD Line: 10566

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL4_DMSAR
//    <name> DMSAR </name>
//    <i> [Bits 31..0] RW (@ 0x20000068) DMA Source Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL4_DMSAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL4_DMSAR = (DMAVEC_CTRL_CTRL_CTRL4_DMSAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL4_DMDAR  ----------------------
// SVD Line: 10572

unsigned int DMAVEC_CTRL_CTRL_CTRL4_DMDAR __AT (0x2000006C);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL4_DMDAR  --------------------------
// SVD Line: 10572

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL4_DMDAR
//    <name> DMDAR </name>
//    <i> [Bits 31..0] RW (@ 0x2000006C) DMA Destination Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL4_DMDAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL4_DMDAR = (DMAVEC_CTRL_CTRL_CTRL4_DMDAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Cluster ITree: DMAVEC_CTRL_CTRL_CTRL4  -----------------------------
// SVD Line: 10403

//  <itree> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL4
//    <name> [4] </name>
//    <i> DMA control data area </i>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL4_DMACR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL4_DMBLS </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL4_DMACT </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL4_DMRLD </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL4_DMSAR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL4_DMDAR </item>
//  </itree>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL5_DMACR  ----------------------
// SVD Line: 10409

unsigned short DMAVEC_CTRL_CTRL_CTRL5_DMACR __AT (0x20000070);



// -----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL5_DMACR_SZ  --------------------------
// SVD Line: 10415

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL5_DMACR_SZ
//    <name> SZ </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x20000070) \nTransfer Data size selection\n0 : BYTE = 8 bits\n1 : HALF = 16 bits\n2 : WORD = 32 bits\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL5_DMACR ) </loc>
//      <o.7..6> SZ
//        <0=> 0: BYTE = 8 bits
//        <1=> 1: HALF = 16 bits
//        <2=> 2: WORD = 32 bits
//        <3=> 3: 
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL5_DMACR_RPTINT  ------------------------
// SVD Line: 10438

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL5_DMACR_RPTINT
//    <name> RPTINT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x20000070) \nEnabling/disabling repeat mode interrupts\n0 : disable = Interrupt generation disabled\n1 : enable = Interrupt generation enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL5_DMACR ) </loc>
//      <o.5..5> RPTINT
//        <0=> 0: disable = Interrupt generation disabled
//        <1=> 1: enable = Interrupt generation enabled
//    </combo>
//  </item>
//  


// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL5_DMACR_CHNE  -------------------------
// SVD Line: 10456

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL5_DMACR_CHNE
//    <name> CHNE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x20000070) \nEnabling/disabling chain transfers\n0 : disable = Chain transfers disabled\n1 : enable = Chain transfers enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL5_DMACR ) </loc>
//      <o.4..4> CHNE
//        <0=> 0: disable = Chain transfers disabled
//        <1=> 1: enable = Chain transfers enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL5_DMACR_DAMOD  -------------------------
// SVD Line: 10474

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL5_DMACR_DAMOD
//    <name> DAMOD </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x20000070) \nDestination address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL5_DMACR ) </loc>
//      <o.3..3> DAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL5_DMACR_SAMOD  -------------------------
// SVD Line: 10492

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL5_DMACR_SAMOD
//    <name> SAMOD </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x20000070) \nSource address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL5_DMACR ) </loc>
//      <o.2..2> SAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL5_DMACR_RPTSEL  ------------------------
// SVD Line: 10510

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL5_DMACR_RPTSEL
//    <name> RPTSEL </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x20000070) \nRepeat area selection\n0 : destination = Transfer destination is the repeat area\n1 : source = Transfer source is the repeat area </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL5_DMACR ) </loc>
//      <o.1..1> RPTSEL
//        <0=> 0: destination = Transfer destination is the repeat area
//        <1=> 1: source = Transfer source is the repeat area
//    </combo>
//  </item>
//  


// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL5_DMACR_MODE  -------------------------
// SVD Line: 10528

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL5_DMACR_MODE
//    <name> MODE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x20000070) \nTransfer mode selection\n0 : Normal = Normal mode\n1 : Repeat = Repeat mode </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL5_DMACR ) </loc>
//      <o.0..0> MODE
//        <0=> 0: Normal = Normal mode
//        <1=> 1: Repeat = Repeat mode
//    </combo>
//  </item>
//  


// ----------------------  Register RTree: DMAVEC_CTRL_CTRL_CTRL5_DMACR  --------------------------
// SVD Line: 10409

//  <rtree> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL5_DMACR
//    <name> DMACR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x20000070) DMA Control register </i>
//    <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL5_DMACR >> 0) & 0xFFFF), ((DMAVEC_CTRL_CTRL_CTRL5_DMACR = (DMAVEC_CTRL_CTRL_CTRL5_DMACR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL5_DMACR_SZ </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL5_DMACR_RPTINT </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL5_DMACR_CHNE </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL5_DMACR_DAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL5_DMACR_SAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL5_DMACR_RPTSEL </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL5_DMACR_MODE </item>
//  </rtree>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL5_DMBLS  ----------------------
// SVD Line: 10548

unsigned short DMAVEC_CTRL_CTRL_CTRL5_DMBLS __AT (0x20000072);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL5_DMBLS  --------------------------
// SVD Line: 10548

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL5_DMBLS
//    <name> DMBLS </name>
//    <i> [Bits 15..0] RW (@ 0x20000072) DMA Block Size register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL5_DMBLS >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL5_DMBLS = (DMAVEC_CTRL_CTRL_CTRL5_DMBLS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL5_DMACT  ----------------------
// SVD Line: 10554

unsigned short DMAVEC_CTRL_CTRL_CTRL5_DMACT __AT (0x20000074);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL5_DMACT  --------------------------
// SVD Line: 10554

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL5_DMACT
//    <name> DMACT </name>
//    <i> [Bits 15..0] RW (@ 0x20000074) DMA Transfer Count register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL5_DMACT >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL5_DMACT = (DMAVEC_CTRL_CTRL_CTRL5_DMACT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL5_DMRLD  ----------------------
// SVD Line: 10560

unsigned short DMAVEC_CTRL_CTRL_CTRL5_DMRLD __AT (0x20000076);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL5_DMRLD  --------------------------
// SVD Line: 10560

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL5_DMRLD
//    <name> DMRLD </name>
//    <i> [Bits 15..0] RW (@ 0x20000076) DMA Transfer Count Reload register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL5_DMRLD >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL5_DMRLD = (DMAVEC_CTRL_CTRL_CTRL5_DMRLD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL5_DMSAR  ----------------------
// SVD Line: 10566

unsigned int DMAVEC_CTRL_CTRL_CTRL5_DMSAR __AT (0x20000078);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL5_DMSAR  --------------------------
// SVD Line: 10566

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL5_DMSAR
//    <name> DMSAR </name>
//    <i> [Bits 31..0] RW (@ 0x20000078) DMA Source Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL5_DMSAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL5_DMSAR = (DMAVEC_CTRL_CTRL_CTRL5_DMSAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL5_DMDAR  ----------------------
// SVD Line: 10572

unsigned int DMAVEC_CTRL_CTRL_CTRL5_DMDAR __AT (0x2000007C);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL5_DMDAR  --------------------------
// SVD Line: 10572

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL5_DMDAR
//    <name> DMDAR </name>
//    <i> [Bits 31..0] RW (@ 0x2000007C) DMA Destination Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL5_DMDAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL5_DMDAR = (DMAVEC_CTRL_CTRL_CTRL5_DMDAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Cluster ITree: DMAVEC_CTRL_CTRL_CTRL5  -----------------------------
// SVD Line: 10403

//  <itree> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL5
//    <name> [5] </name>
//    <i> DMA control data area </i>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL5_DMACR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL5_DMBLS </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL5_DMACT </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL5_DMRLD </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL5_DMSAR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL5_DMDAR </item>
//  </itree>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL6_DMACR  ----------------------
// SVD Line: 10409

unsigned short DMAVEC_CTRL_CTRL_CTRL6_DMACR __AT (0x20000080);



// -----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL6_DMACR_SZ  --------------------------
// SVD Line: 10415

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL6_DMACR_SZ
//    <name> SZ </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x20000080) \nTransfer Data size selection\n0 : BYTE = 8 bits\n1 : HALF = 16 bits\n2 : WORD = 32 bits\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL6_DMACR ) </loc>
//      <o.7..6> SZ
//        <0=> 0: BYTE = 8 bits
//        <1=> 1: HALF = 16 bits
//        <2=> 2: WORD = 32 bits
//        <3=> 3: 
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL6_DMACR_RPTINT  ------------------------
// SVD Line: 10438

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL6_DMACR_RPTINT
//    <name> RPTINT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x20000080) \nEnabling/disabling repeat mode interrupts\n0 : disable = Interrupt generation disabled\n1 : enable = Interrupt generation enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL6_DMACR ) </loc>
//      <o.5..5> RPTINT
//        <0=> 0: disable = Interrupt generation disabled
//        <1=> 1: enable = Interrupt generation enabled
//    </combo>
//  </item>
//  


// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL6_DMACR_CHNE  -------------------------
// SVD Line: 10456

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL6_DMACR_CHNE
//    <name> CHNE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x20000080) \nEnabling/disabling chain transfers\n0 : disable = Chain transfers disabled\n1 : enable = Chain transfers enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL6_DMACR ) </loc>
//      <o.4..4> CHNE
//        <0=> 0: disable = Chain transfers disabled
//        <1=> 1: enable = Chain transfers enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL6_DMACR_DAMOD  -------------------------
// SVD Line: 10474

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL6_DMACR_DAMOD
//    <name> DAMOD </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x20000080) \nDestination address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL6_DMACR ) </loc>
//      <o.3..3> DAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL6_DMACR_SAMOD  -------------------------
// SVD Line: 10492

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL6_DMACR_SAMOD
//    <name> SAMOD </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x20000080) \nSource address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL6_DMACR ) </loc>
//      <o.2..2> SAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL6_DMACR_RPTSEL  ------------------------
// SVD Line: 10510

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL6_DMACR_RPTSEL
//    <name> RPTSEL </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x20000080) \nRepeat area selection\n0 : destination = Transfer destination is the repeat area\n1 : source = Transfer source is the repeat area </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL6_DMACR ) </loc>
//      <o.1..1> RPTSEL
//        <0=> 0: destination = Transfer destination is the repeat area
//        <1=> 1: source = Transfer source is the repeat area
//    </combo>
//  </item>
//  


// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL6_DMACR_MODE  -------------------------
// SVD Line: 10528

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL6_DMACR_MODE
//    <name> MODE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x20000080) \nTransfer mode selection\n0 : Normal = Normal mode\n1 : Repeat = Repeat mode </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL6_DMACR ) </loc>
//      <o.0..0> MODE
//        <0=> 0: Normal = Normal mode
//        <1=> 1: Repeat = Repeat mode
//    </combo>
//  </item>
//  


// ----------------------  Register RTree: DMAVEC_CTRL_CTRL_CTRL6_DMACR  --------------------------
// SVD Line: 10409

//  <rtree> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL6_DMACR
//    <name> DMACR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x20000080) DMA Control register </i>
//    <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL6_DMACR >> 0) & 0xFFFF), ((DMAVEC_CTRL_CTRL_CTRL6_DMACR = (DMAVEC_CTRL_CTRL_CTRL6_DMACR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL6_DMACR_SZ </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL6_DMACR_RPTINT </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL6_DMACR_CHNE </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL6_DMACR_DAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL6_DMACR_SAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL6_DMACR_RPTSEL </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL6_DMACR_MODE </item>
//  </rtree>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL6_DMBLS  ----------------------
// SVD Line: 10548

unsigned short DMAVEC_CTRL_CTRL_CTRL6_DMBLS __AT (0x20000082);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL6_DMBLS  --------------------------
// SVD Line: 10548

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL6_DMBLS
//    <name> DMBLS </name>
//    <i> [Bits 15..0] RW (@ 0x20000082) DMA Block Size register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL6_DMBLS >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL6_DMBLS = (DMAVEC_CTRL_CTRL_CTRL6_DMBLS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL6_DMACT  ----------------------
// SVD Line: 10554

unsigned short DMAVEC_CTRL_CTRL_CTRL6_DMACT __AT (0x20000084);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL6_DMACT  --------------------------
// SVD Line: 10554

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL6_DMACT
//    <name> DMACT </name>
//    <i> [Bits 15..0] RW (@ 0x20000084) DMA Transfer Count register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL6_DMACT >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL6_DMACT = (DMAVEC_CTRL_CTRL_CTRL6_DMACT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL6_DMRLD  ----------------------
// SVD Line: 10560

unsigned short DMAVEC_CTRL_CTRL_CTRL6_DMRLD __AT (0x20000086);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL6_DMRLD  --------------------------
// SVD Line: 10560

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL6_DMRLD
//    <name> DMRLD </name>
//    <i> [Bits 15..0] RW (@ 0x20000086) DMA Transfer Count Reload register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL6_DMRLD >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL6_DMRLD = (DMAVEC_CTRL_CTRL_CTRL6_DMRLD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL6_DMSAR  ----------------------
// SVD Line: 10566

unsigned int DMAVEC_CTRL_CTRL_CTRL6_DMSAR __AT (0x20000088);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL6_DMSAR  --------------------------
// SVD Line: 10566

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL6_DMSAR
//    <name> DMSAR </name>
//    <i> [Bits 31..0] RW (@ 0x20000088) DMA Source Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL6_DMSAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL6_DMSAR = (DMAVEC_CTRL_CTRL_CTRL6_DMSAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL6_DMDAR  ----------------------
// SVD Line: 10572

unsigned int DMAVEC_CTRL_CTRL_CTRL6_DMDAR __AT (0x2000008C);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL6_DMDAR  --------------------------
// SVD Line: 10572

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL6_DMDAR
//    <name> DMDAR </name>
//    <i> [Bits 31..0] RW (@ 0x2000008C) DMA Destination Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL6_DMDAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL6_DMDAR = (DMAVEC_CTRL_CTRL_CTRL6_DMDAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Cluster ITree: DMAVEC_CTRL_CTRL_CTRL6  -----------------------------
// SVD Line: 10403

//  <itree> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL6
//    <name> [6] </name>
//    <i> DMA control data area </i>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL6_DMACR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL6_DMBLS </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL6_DMACT </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL6_DMRLD </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL6_DMSAR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL6_DMDAR </item>
//  </itree>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL7_DMACR  ----------------------
// SVD Line: 10409

unsigned short DMAVEC_CTRL_CTRL_CTRL7_DMACR __AT (0x20000090);



// -----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL7_DMACR_SZ  --------------------------
// SVD Line: 10415

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL7_DMACR_SZ
//    <name> SZ </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x20000090) \nTransfer Data size selection\n0 : BYTE = 8 bits\n1 : HALF = 16 bits\n2 : WORD = 32 bits\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL7_DMACR ) </loc>
//      <o.7..6> SZ
//        <0=> 0: BYTE = 8 bits
//        <1=> 1: HALF = 16 bits
//        <2=> 2: WORD = 32 bits
//        <3=> 3: 
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL7_DMACR_RPTINT  ------------------------
// SVD Line: 10438

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL7_DMACR_RPTINT
//    <name> RPTINT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x20000090) \nEnabling/disabling repeat mode interrupts\n0 : disable = Interrupt generation disabled\n1 : enable = Interrupt generation enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL7_DMACR ) </loc>
//      <o.5..5> RPTINT
//        <0=> 0: disable = Interrupt generation disabled
//        <1=> 1: enable = Interrupt generation enabled
//    </combo>
//  </item>
//  


// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL7_DMACR_CHNE  -------------------------
// SVD Line: 10456

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL7_DMACR_CHNE
//    <name> CHNE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x20000090) \nEnabling/disabling chain transfers\n0 : disable = Chain transfers disabled\n1 : enable = Chain transfers enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL7_DMACR ) </loc>
//      <o.4..4> CHNE
//        <0=> 0: disable = Chain transfers disabled
//        <1=> 1: enable = Chain transfers enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL7_DMACR_DAMOD  -------------------------
// SVD Line: 10474

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL7_DMACR_DAMOD
//    <name> DAMOD </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x20000090) \nDestination address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL7_DMACR ) </loc>
//      <o.3..3> DAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL7_DMACR_SAMOD  -------------------------
// SVD Line: 10492

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL7_DMACR_SAMOD
//    <name> SAMOD </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x20000090) \nSource address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL7_DMACR ) </loc>
//      <o.2..2> SAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL7_DMACR_RPTSEL  ------------------------
// SVD Line: 10510

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL7_DMACR_RPTSEL
//    <name> RPTSEL </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x20000090) \nRepeat area selection\n0 : destination = Transfer destination is the repeat area\n1 : source = Transfer source is the repeat area </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL7_DMACR ) </loc>
//      <o.1..1> RPTSEL
//        <0=> 0: destination = Transfer destination is the repeat area
//        <1=> 1: source = Transfer source is the repeat area
//    </combo>
//  </item>
//  


// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL7_DMACR_MODE  -------------------------
// SVD Line: 10528

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL7_DMACR_MODE
//    <name> MODE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x20000090) \nTransfer mode selection\n0 : Normal = Normal mode\n1 : Repeat = Repeat mode </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL7_DMACR ) </loc>
//      <o.0..0> MODE
//        <0=> 0: Normal = Normal mode
//        <1=> 1: Repeat = Repeat mode
//    </combo>
//  </item>
//  


// ----------------------  Register RTree: DMAVEC_CTRL_CTRL_CTRL7_DMACR  --------------------------
// SVD Line: 10409

//  <rtree> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL7_DMACR
//    <name> DMACR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x20000090) DMA Control register </i>
//    <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL7_DMACR >> 0) & 0xFFFF), ((DMAVEC_CTRL_CTRL_CTRL7_DMACR = (DMAVEC_CTRL_CTRL_CTRL7_DMACR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL7_DMACR_SZ </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL7_DMACR_RPTINT </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL7_DMACR_CHNE </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL7_DMACR_DAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL7_DMACR_SAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL7_DMACR_RPTSEL </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL7_DMACR_MODE </item>
//  </rtree>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL7_DMBLS  ----------------------
// SVD Line: 10548

unsigned short DMAVEC_CTRL_CTRL_CTRL7_DMBLS __AT (0x20000092);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL7_DMBLS  --------------------------
// SVD Line: 10548

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL7_DMBLS
//    <name> DMBLS </name>
//    <i> [Bits 15..0] RW (@ 0x20000092) DMA Block Size register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL7_DMBLS >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL7_DMBLS = (DMAVEC_CTRL_CTRL_CTRL7_DMBLS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL7_DMACT  ----------------------
// SVD Line: 10554

unsigned short DMAVEC_CTRL_CTRL_CTRL7_DMACT __AT (0x20000094);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL7_DMACT  --------------------------
// SVD Line: 10554

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL7_DMACT
//    <name> DMACT </name>
//    <i> [Bits 15..0] RW (@ 0x20000094) DMA Transfer Count register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL7_DMACT >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL7_DMACT = (DMAVEC_CTRL_CTRL_CTRL7_DMACT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL7_DMRLD  ----------------------
// SVD Line: 10560

unsigned short DMAVEC_CTRL_CTRL_CTRL7_DMRLD __AT (0x20000096);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL7_DMRLD  --------------------------
// SVD Line: 10560

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL7_DMRLD
//    <name> DMRLD </name>
//    <i> [Bits 15..0] RW (@ 0x20000096) DMA Transfer Count Reload register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL7_DMRLD >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL7_DMRLD = (DMAVEC_CTRL_CTRL_CTRL7_DMRLD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL7_DMSAR  ----------------------
// SVD Line: 10566

unsigned int DMAVEC_CTRL_CTRL_CTRL7_DMSAR __AT (0x20000098);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL7_DMSAR  --------------------------
// SVD Line: 10566

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL7_DMSAR
//    <name> DMSAR </name>
//    <i> [Bits 31..0] RW (@ 0x20000098) DMA Source Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL7_DMSAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL7_DMSAR = (DMAVEC_CTRL_CTRL_CTRL7_DMSAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL7_DMDAR  ----------------------
// SVD Line: 10572

unsigned int DMAVEC_CTRL_CTRL_CTRL7_DMDAR __AT (0x2000009C);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL7_DMDAR  --------------------------
// SVD Line: 10572

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL7_DMDAR
//    <name> DMDAR </name>
//    <i> [Bits 31..0] RW (@ 0x2000009C) DMA Destination Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL7_DMDAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL7_DMDAR = (DMAVEC_CTRL_CTRL_CTRL7_DMDAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Cluster ITree: DMAVEC_CTRL_CTRL_CTRL7  -----------------------------
// SVD Line: 10403

//  <itree> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL7
//    <name> [7] </name>
//    <i> DMA control data area </i>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL7_DMACR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL7_DMBLS </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL7_DMACT </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL7_DMRLD </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL7_DMSAR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL7_DMDAR </item>
//  </itree>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL8_DMACR  ----------------------
// SVD Line: 10409

unsigned short DMAVEC_CTRL_CTRL_CTRL8_DMACR __AT (0x200000A0);



// -----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL8_DMACR_SZ  --------------------------
// SVD Line: 10415

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL8_DMACR_SZ
//    <name> SZ </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x200000A0) \nTransfer Data size selection\n0 : BYTE = 8 bits\n1 : HALF = 16 bits\n2 : WORD = 32 bits\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL8_DMACR ) </loc>
//      <o.7..6> SZ
//        <0=> 0: BYTE = 8 bits
//        <1=> 1: HALF = 16 bits
//        <2=> 2: WORD = 32 bits
//        <3=> 3: 
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL8_DMACR_RPTINT  ------------------------
// SVD Line: 10438

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL8_DMACR_RPTINT
//    <name> RPTINT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x200000A0) \nEnabling/disabling repeat mode interrupts\n0 : disable = Interrupt generation disabled\n1 : enable = Interrupt generation enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL8_DMACR ) </loc>
//      <o.5..5> RPTINT
//        <0=> 0: disable = Interrupt generation disabled
//        <1=> 1: enable = Interrupt generation enabled
//    </combo>
//  </item>
//  


// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL8_DMACR_CHNE  -------------------------
// SVD Line: 10456

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL8_DMACR_CHNE
//    <name> CHNE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x200000A0) \nEnabling/disabling chain transfers\n0 : disable = Chain transfers disabled\n1 : enable = Chain transfers enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL8_DMACR ) </loc>
//      <o.4..4> CHNE
//        <0=> 0: disable = Chain transfers disabled
//        <1=> 1: enable = Chain transfers enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL8_DMACR_DAMOD  -------------------------
// SVD Line: 10474

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL8_DMACR_DAMOD
//    <name> DAMOD </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x200000A0) \nDestination address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL8_DMACR ) </loc>
//      <o.3..3> DAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL8_DMACR_SAMOD  -------------------------
// SVD Line: 10492

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL8_DMACR_SAMOD
//    <name> SAMOD </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x200000A0) \nSource address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL8_DMACR ) </loc>
//      <o.2..2> SAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL8_DMACR_RPTSEL  ------------------------
// SVD Line: 10510

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL8_DMACR_RPTSEL
//    <name> RPTSEL </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x200000A0) \nRepeat area selection\n0 : destination = Transfer destination is the repeat area\n1 : source = Transfer source is the repeat area </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL8_DMACR ) </loc>
//      <o.1..1> RPTSEL
//        <0=> 0: destination = Transfer destination is the repeat area
//        <1=> 1: source = Transfer source is the repeat area
//    </combo>
//  </item>
//  


// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL8_DMACR_MODE  -------------------------
// SVD Line: 10528

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL8_DMACR_MODE
//    <name> MODE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x200000A0) \nTransfer mode selection\n0 : Normal = Normal mode\n1 : Repeat = Repeat mode </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL8_DMACR ) </loc>
//      <o.0..0> MODE
//        <0=> 0: Normal = Normal mode
//        <1=> 1: Repeat = Repeat mode
//    </combo>
//  </item>
//  


// ----------------------  Register RTree: DMAVEC_CTRL_CTRL_CTRL8_DMACR  --------------------------
// SVD Line: 10409

//  <rtree> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL8_DMACR
//    <name> DMACR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x200000A0) DMA Control register </i>
//    <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL8_DMACR >> 0) & 0xFFFF), ((DMAVEC_CTRL_CTRL_CTRL8_DMACR = (DMAVEC_CTRL_CTRL_CTRL8_DMACR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL8_DMACR_SZ </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL8_DMACR_RPTINT </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL8_DMACR_CHNE </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL8_DMACR_DAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL8_DMACR_SAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL8_DMACR_RPTSEL </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL8_DMACR_MODE </item>
//  </rtree>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL8_DMBLS  ----------------------
// SVD Line: 10548

unsigned short DMAVEC_CTRL_CTRL_CTRL8_DMBLS __AT (0x200000A2);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL8_DMBLS  --------------------------
// SVD Line: 10548

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL8_DMBLS
//    <name> DMBLS </name>
//    <i> [Bits 15..0] RW (@ 0x200000A2) DMA Block Size register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL8_DMBLS >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL8_DMBLS = (DMAVEC_CTRL_CTRL_CTRL8_DMBLS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL8_DMACT  ----------------------
// SVD Line: 10554

unsigned short DMAVEC_CTRL_CTRL_CTRL8_DMACT __AT (0x200000A4);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL8_DMACT  --------------------------
// SVD Line: 10554

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL8_DMACT
//    <name> DMACT </name>
//    <i> [Bits 15..0] RW (@ 0x200000A4) DMA Transfer Count register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL8_DMACT >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL8_DMACT = (DMAVEC_CTRL_CTRL_CTRL8_DMACT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL8_DMRLD  ----------------------
// SVD Line: 10560

unsigned short DMAVEC_CTRL_CTRL_CTRL8_DMRLD __AT (0x200000A6);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL8_DMRLD  --------------------------
// SVD Line: 10560

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL8_DMRLD
//    <name> DMRLD </name>
//    <i> [Bits 15..0] RW (@ 0x200000A6) DMA Transfer Count Reload register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL8_DMRLD >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL8_DMRLD = (DMAVEC_CTRL_CTRL_CTRL8_DMRLD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL8_DMSAR  ----------------------
// SVD Line: 10566

unsigned int DMAVEC_CTRL_CTRL_CTRL8_DMSAR __AT (0x200000A8);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL8_DMSAR  --------------------------
// SVD Line: 10566

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL8_DMSAR
//    <name> DMSAR </name>
//    <i> [Bits 31..0] RW (@ 0x200000A8) DMA Source Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL8_DMSAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL8_DMSAR = (DMAVEC_CTRL_CTRL_CTRL8_DMSAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL8_DMDAR  ----------------------
// SVD Line: 10572

unsigned int DMAVEC_CTRL_CTRL_CTRL8_DMDAR __AT (0x200000AC);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL8_DMDAR  --------------------------
// SVD Line: 10572

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL8_DMDAR
//    <name> DMDAR </name>
//    <i> [Bits 31..0] RW (@ 0x200000AC) DMA Destination Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL8_DMDAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL8_DMDAR = (DMAVEC_CTRL_CTRL_CTRL8_DMDAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Cluster ITree: DMAVEC_CTRL_CTRL_CTRL8  -----------------------------
// SVD Line: 10403

//  <itree> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL8
//    <name> [8] </name>
//    <i> DMA control data area </i>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL8_DMACR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL8_DMBLS </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL8_DMACT </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL8_DMRLD </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL8_DMSAR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL8_DMDAR </item>
//  </itree>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL9_DMACR  ----------------------
// SVD Line: 10409

unsigned short DMAVEC_CTRL_CTRL_CTRL9_DMACR __AT (0x200000B0);



// -----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL9_DMACR_SZ  --------------------------
// SVD Line: 10415

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL9_DMACR_SZ
//    <name> SZ </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x200000B0) \nTransfer Data size selection\n0 : BYTE = 8 bits\n1 : HALF = 16 bits\n2 : WORD = 32 bits\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL9_DMACR ) </loc>
//      <o.7..6> SZ
//        <0=> 0: BYTE = 8 bits
//        <1=> 1: HALF = 16 bits
//        <2=> 2: WORD = 32 bits
//        <3=> 3: 
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL9_DMACR_RPTINT  ------------------------
// SVD Line: 10438

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL9_DMACR_RPTINT
//    <name> RPTINT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x200000B0) \nEnabling/disabling repeat mode interrupts\n0 : disable = Interrupt generation disabled\n1 : enable = Interrupt generation enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL9_DMACR ) </loc>
//      <o.5..5> RPTINT
//        <0=> 0: disable = Interrupt generation disabled
//        <1=> 1: enable = Interrupt generation enabled
//    </combo>
//  </item>
//  


// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL9_DMACR_CHNE  -------------------------
// SVD Line: 10456

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL9_DMACR_CHNE
//    <name> CHNE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x200000B0) \nEnabling/disabling chain transfers\n0 : disable = Chain transfers disabled\n1 : enable = Chain transfers enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL9_DMACR ) </loc>
//      <o.4..4> CHNE
//        <0=> 0: disable = Chain transfers disabled
//        <1=> 1: enable = Chain transfers enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL9_DMACR_DAMOD  -------------------------
// SVD Line: 10474

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL9_DMACR_DAMOD
//    <name> DAMOD </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x200000B0) \nDestination address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL9_DMACR ) </loc>
//      <o.3..3> DAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL9_DMACR_SAMOD  -------------------------
// SVD Line: 10492

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL9_DMACR_SAMOD
//    <name> SAMOD </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x200000B0) \nSource address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL9_DMACR ) </loc>
//      <o.2..2> SAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL9_DMACR_RPTSEL  ------------------------
// SVD Line: 10510

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL9_DMACR_RPTSEL
//    <name> RPTSEL </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x200000B0) \nRepeat area selection\n0 : destination = Transfer destination is the repeat area\n1 : source = Transfer source is the repeat area </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL9_DMACR ) </loc>
//      <o.1..1> RPTSEL
//        <0=> 0: destination = Transfer destination is the repeat area
//        <1=> 1: source = Transfer source is the repeat area
//    </combo>
//  </item>
//  


// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL9_DMACR_MODE  -------------------------
// SVD Line: 10528

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL9_DMACR_MODE
//    <name> MODE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x200000B0) \nTransfer mode selection\n0 : Normal = Normal mode\n1 : Repeat = Repeat mode </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL9_DMACR ) </loc>
//      <o.0..0> MODE
//        <0=> 0: Normal = Normal mode
//        <1=> 1: Repeat = Repeat mode
//    </combo>
//  </item>
//  


// ----------------------  Register RTree: DMAVEC_CTRL_CTRL_CTRL9_DMACR  --------------------------
// SVD Line: 10409

//  <rtree> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL9_DMACR
//    <name> DMACR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x200000B0) DMA Control register </i>
//    <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL9_DMACR >> 0) & 0xFFFF), ((DMAVEC_CTRL_CTRL_CTRL9_DMACR = (DMAVEC_CTRL_CTRL_CTRL9_DMACR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL9_DMACR_SZ </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL9_DMACR_RPTINT </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL9_DMACR_CHNE </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL9_DMACR_DAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL9_DMACR_SAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL9_DMACR_RPTSEL </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL9_DMACR_MODE </item>
//  </rtree>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL9_DMBLS  ----------------------
// SVD Line: 10548

unsigned short DMAVEC_CTRL_CTRL_CTRL9_DMBLS __AT (0x200000B2);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL9_DMBLS  --------------------------
// SVD Line: 10548

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL9_DMBLS
//    <name> DMBLS </name>
//    <i> [Bits 15..0] RW (@ 0x200000B2) DMA Block Size register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL9_DMBLS >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL9_DMBLS = (DMAVEC_CTRL_CTRL_CTRL9_DMBLS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL9_DMACT  ----------------------
// SVD Line: 10554

unsigned short DMAVEC_CTRL_CTRL_CTRL9_DMACT __AT (0x200000B4);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL9_DMACT  --------------------------
// SVD Line: 10554

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL9_DMACT
//    <name> DMACT </name>
//    <i> [Bits 15..0] RW (@ 0x200000B4) DMA Transfer Count register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL9_DMACT >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL9_DMACT = (DMAVEC_CTRL_CTRL_CTRL9_DMACT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL9_DMRLD  ----------------------
// SVD Line: 10560

unsigned short DMAVEC_CTRL_CTRL_CTRL9_DMRLD __AT (0x200000B6);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL9_DMRLD  --------------------------
// SVD Line: 10560

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL9_DMRLD
//    <name> DMRLD </name>
//    <i> [Bits 15..0] RW (@ 0x200000B6) DMA Transfer Count Reload register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL9_DMRLD >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL9_DMRLD = (DMAVEC_CTRL_CTRL_CTRL9_DMRLD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL9_DMSAR  ----------------------
// SVD Line: 10566

unsigned int DMAVEC_CTRL_CTRL_CTRL9_DMSAR __AT (0x200000B8);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL9_DMSAR  --------------------------
// SVD Line: 10566

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL9_DMSAR
//    <name> DMSAR </name>
//    <i> [Bits 31..0] RW (@ 0x200000B8) DMA Source Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL9_DMSAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL9_DMSAR = (DMAVEC_CTRL_CTRL_CTRL9_DMSAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL9_DMDAR  ----------------------
// SVD Line: 10572

unsigned int DMAVEC_CTRL_CTRL_CTRL9_DMDAR __AT (0x200000BC);



// -----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL9_DMDAR  --------------------------
// SVD Line: 10572

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL9_DMDAR
//    <name> DMDAR </name>
//    <i> [Bits 31..0] RW (@ 0x200000BC) DMA Destination Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL9_DMDAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL9_DMDAR = (DMAVEC_CTRL_CTRL_CTRL9_DMDAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Cluster ITree: DMAVEC_CTRL_CTRL_CTRL9  -----------------------------
// SVD Line: 10403

//  <itree> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL9
//    <name> [9] </name>
//    <i> DMA control data area </i>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL9_DMACR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL9_DMBLS </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL9_DMACT </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL9_DMRLD </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL9_DMSAR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL9_DMDAR </item>
//  </itree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL10_DMACR  ----------------------
// SVD Line: 10409

unsigned short DMAVEC_CTRL_CTRL_CTRL10_DMACR __AT (0x200000C0);



// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL10_DMACR_SZ  --------------------------
// SVD Line: 10415

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL10_DMACR_SZ
//    <name> SZ </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x200000C0) \nTransfer Data size selection\n0 : BYTE = 8 bits\n1 : HALF = 16 bits\n2 : WORD = 32 bits\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL10_DMACR ) </loc>
//      <o.7..6> SZ
//        <0=> 0: BYTE = 8 bits
//        <1=> 1: HALF = 16 bits
//        <2=> 2: WORD = 32 bits
//        <3=> 3: 
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL10_DMACR_RPTINT  ------------------------
// SVD Line: 10438

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL10_DMACR_RPTINT
//    <name> RPTINT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x200000C0) \nEnabling/disabling repeat mode interrupts\n0 : disable = Interrupt generation disabled\n1 : enable = Interrupt generation enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL10_DMACR ) </loc>
//      <o.5..5> RPTINT
//        <0=> 0: disable = Interrupt generation disabled
//        <1=> 1: enable = Interrupt generation enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL10_DMACR_CHNE  -------------------------
// SVD Line: 10456

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL10_DMACR_CHNE
//    <name> CHNE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x200000C0) \nEnabling/disabling chain transfers\n0 : disable = Chain transfers disabled\n1 : enable = Chain transfers enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL10_DMACR ) </loc>
//      <o.4..4> CHNE
//        <0=> 0: disable = Chain transfers disabled
//        <1=> 1: enable = Chain transfers enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL10_DMACR_DAMOD  ------------------------
// SVD Line: 10474

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL10_DMACR_DAMOD
//    <name> DAMOD </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x200000C0) \nDestination address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL10_DMACR ) </loc>
//      <o.3..3> DAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL10_DMACR_SAMOD  ------------------------
// SVD Line: 10492

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL10_DMACR_SAMOD
//    <name> SAMOD </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x200000C0) \nSource address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL10_DMACR ) </loc>
//      <o.2..2> SAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL10_DMACR_RPTSEL  ------------------------
// SVD Line: 10510

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL10_DMACR_RPTSEL
//    <name> RPTSEL </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x200000C0) \nRepeat area selection\n0 : destination = Transfer destination is the repeat area\n1 : source = Transfer source is the repeat area </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL10_DMACR ) </loc>
//      <o.1..1> RPTSEL
//        <0=> 0: destination = Transfer destination is the repeat area
//        <1=> 1: source = Transfer source is the repeat area
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL10_DMACR_MODE  -------------------------
// SVD Line: 10528

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL10_DMACR_MODE
//    <name> MODE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x200000C0) \nTransfer mode selection\n0 : Normal = Normal mode\n1 : Repeat = Repeat mode </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL10_DMACR ) </loc>
//      <o.0..0> MODE
//        <0=> 0: Normal = Normal mode
//        <1=> 1: Repeat = Repeat mode
//    </combo>
//  </item>
//  


// ----------------------  Register RTree: DMAVEC_CTRL_CTRL_CTRL10_DMACR  -------------------------
// SVD Line: 10409

//  <rtree> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL10_DMACR
//    <name> DMACR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x200000C0) DMA Control register </i>
//    <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL10_DMACR >> 0) & 0xFFFF), ((DMAVEC_CTRL_CTRL_CTRL10_DMACR = (DMAVEC_CTRL_CTRL_CTRL10_DMACR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL10_DMACR_SZ </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL10_DMACR_RPTINT </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL10_DMACR_CHNE </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL10_DMACR_DAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL10_DMACR_SAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL10_DMACR_RPTSEL </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL10_DMACR_MODE </item>
//  </rtree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL10_DMBLS  ----------------------
// SVD Line: 10548

unsigned short DMAVEC_CTRL_CTRL_CTRL10_DMBLS __AT (0x200000C2);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL10_DMBLS  --------------------------
// SVD Line: 10548

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL10_DMBLS
//    <name> DMBLS </name>
//    <i> [Bits 15..0] RW (@ 0x200000C2) DMA Block Size register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL10_DMBLS >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL10_DMBLS = (DMAVEC_CTRL_CTRL_CTRL10_DMBLS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL10_DMACT  ----------------------
// SVD Line: 10554

unsigned short DMAVEC_CTRL_CTRL_CTRL10_DMACT __AT (0x200000C4);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL10_DMACT  --------------------------
// SVD Line: 10554

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL10_DMACT
//    <name> DMACT </name>
//    <i> [Bits 15..0] RW (@ 0x200000C4) DMA Transfer Count register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL10_DMACT >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL10_DMACT = (DMAVEC_CTRL_CTRL_CTRL10_DMACT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL10_DMRLD  ----------------------
// SVD Line: 10560

unsigned short DMAVEC_CTRL_CTRL_CTRL10_DMRLD __AT (0x200000C6);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL10_DMRLD  --------------------------
// SVD Line: 10560

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL10_DMRLD
//    <name> DMRLD </name>
//    <i> [Bits 15..0] RW (@ 0x200000C6) DMA Transfer Count Reload register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL10_DMRLD >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL10_DMRLD = (DMAVEC_CTRL_CTRL_CTRL10_DMRLD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL10_DMSAR  ----------------------
// SVD Line: 10566

unsigned int DMAVEC_CTRL_CTRL_CTRL10_DMSAR __AT (0x200000C8);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL10_DMSAR  --------------------------
// SVD Line: 10566

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL10_DMSAR
//    <name> DMSAR </name>
//    <i> [Bits 31..0] RW (@ 0x200000C8) DMA Source Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL10_DMSAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL10_DMSAR = (DMAVEC_CTRL_CTRL_CTRL10_DMSAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL10_DMDAR  ----------------------
// SVD Line: 10572

unsigned int DMAVEC_CTRL_CTRL_CTRL10_DMDAR __AT (0x200000CC);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL10_DMDAR  --------------------------
// SVD Line: 10572

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL10_DMDAR
//    <name> DMDAR </name>
//    <i> [Bits 31..0] RW (@ 0x200000CC) DMA Destination Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL10_DMDAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL10_DMDAR = (DMAVEC_CTRL_CTRL_CTRL10_DMDAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Cluster ITree: DMAVEC_CTRL_CTRL_CTRL10  -----------------------------
// SVD Line: 10403

//  <itree> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL10
//    <name> [10] </name>
//    <i> DMA control data area </i>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL10_DMACR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL10_DMBLS </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL10_DMACT </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL10_DMRLD </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL10_DMSAR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL10_DMDAR </item>
//  </itree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL11_DMACR  ----------------------
// SVD Line: 10409

unsigned short DMAVEC_CTRL_CTRL_CTRL11_DMACR __AT (0x200000D0);



// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL11_DMACR_SZ  --------------------------
// SVD Line: 10415

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL11_DMACR_SZ
//    <name> SZ </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x200000D0) \nTransfer Data size selection\n0 : BYTE = 8 bits\n1 : HALF = 16 bits\n2 : WORD = 32 bits\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL11_DMACR ) </loc>
//      <o.7..6> SZ
//        <0=> 0: BYTE = 8 bits
//        <1=> 1: HALF = 16 bits
//        <2=> 2: WORD = 32 bits
//        <3=> 3: 
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL11_DMACR_RPTINT  ------------------------
// SVD Line: 10438

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL11_DMACR_RPTINT
//    <name> RPTINT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x200000D0) \nEnabling/disabling repeat mode interrupts\n0 : disable = Interrupt generation disabled\n1 : enable = Interrupt generation enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL11_DMACR ) </loc>
//      <o.5..5> RPTINT
//        <0=> 0: disable = Interrupt generation disabled
//        <1=> 1: enable = Interrupt generation enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL11_DMACR_CHNE  -------------------------
// SVD Line: 10456

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL11_DMACR_CHNE
//    <name> CHNE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x200000D0) \nEnabling/disabling chain transfers\n0 : disable = Chain transfers disabled\n1 : enable = Chain transfers enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL11_DMACR ) </loc>
//      <o.4..4> CHNE
//        <0=> 0: disable = Chain transfers disabled
//        <1=> 1: enable = Chain transfers enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL11_DMACR_DAMOD  ------------------------
// SVD Line: 10474

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL11_DMACR_DAMOD
//    <name> DAMOD </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x200000D0) \nDestination address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL11_DMACR ) </loc>
//      <o.3..3> DAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL11_DMACR_SAMOD  ------------------------
// SVD Line: 10492

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL11_DMACR_SAMOD
//    <name> SAMOD </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x200000D0) \nSource address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL11_DMACR ) </loc>
//      <o.2..2> SAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL11_DMACR_RPTSEL  ------------------------
// SVD Line: 10510

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL11_DMACR_RPTSEL
//    <name> RPTSEL </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x200000D0) \nRepeat area selection\n0 : destination = Transfer destination is the repeat area\n1 : source = Transfer source is the repeat area </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL11_DMACR ) </loc>
//      <o.1..1> RPTSEL
//        <0=> 0: destination = Transfer destination is the repeat area
//        <1=> 1: source = Transfer source is the repeat area
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL11_DMACR_MODE  -------------------------
// SVD Line: 10528

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL11_DMACR_MODE
//    <name> MODE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x200000D0) \nTransfer mode selection\n0 : Normal = Normal mode\n1 : Repeat = Repeat mode </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL11_DMACR ) </loc>
//      <o.0..0> MODE
//        <0=> 0: Normal = Normal mode
//        <1=> 1: Repeat = Repeat mode
//    </combo>
//  </item>
//  


// ----------------------  Register RTree: DMAVEC_CTRL_CTRL_CTRL11_DMACR  -------------------------
// SVD Line: 10409

//  <rtree> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL11_DMACR
//    <name> DMACR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x200000D0) DMA Control register </i>
//    <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL11_DMACR >> 0) & 0xFFFF), ((DMAVEC_CTRL_CTRL_CTRL11_DMACR = (DMAVEC_CTRL_CTRL_CTRL11_DMACR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL11_DMACR_SZ </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL11_DMACR_RPTINT </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL11_DMACR_CHNE </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL11_DMACR_DAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL11_DMACR_SAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL11_DMACR_RPTSEL </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL11_DMACR_MODE </item>
//  </rtree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL11_DMBLS  ----------------------
// SVD Line: 10548

unsigned short DMAVEC_CTRL_CTRL_CTRL11_DMBLS __AT (0x200000D2);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL11_DMBLS  --------------------------
// SVD Line: 10548

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL11_DMBLS
//    <name> DMBLS </name>
//    <i> [Bits 15..0] RW (@ 0x200000D2) DMA Block Size register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL11_DMBLS >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL11_DMBLS = (DMAVEC_CTRL_CTRL_CTRL11_DMBLS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL11_DMACT  ----------------------
// SVD Line: 10554

unsigned short DMAVEC_CTRL_CTRL_CTRL11_DMACT __AT (0x200000D4);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL11_DMACT  --------------------------
// SVD Line: 10554

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL11_DMACT
//    <name> DMACT </name>
//    <i> [Bits 15..0] RW (@ 0x200000D4) DMA Transfer Count register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL11_DMACT >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL11_DMACT = (DMAVEC_CTRL_CTRL_CTRL11_DMACT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL11_DMRLD  ----------------------
// SVD Line: 10560

unsigned short DMAVEC_CTRL_CTRL_CTRL11_DMRLD __AT (0x200000D6);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL11_DMRLD  --------------------------
// SVD Line: 10560

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL11_DMRLD
//    <name> DMRLD </name>
//    <i> [Bits 15..0] RW (@ 0x200000D6) DMA Transfer Count Reload register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL11_DMRLD >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL11_DMRLD = (DMAVEC_CTRL_CTRL_CTRL11_DMRLD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL11_DMSAR  ----------------------
// SVD Line: 10566

unsigned int DMAVEC_CTRL_CTRL_CTRL11_DMSAR __AT (0x200000D8);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL11_DMSAR  --------------------------
// SVD Line: 10566

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL11_DMSAR
//    <name> DMSAR </name>
//    <i> [Bits 31..0] RW (@ 0x200000D8) DMA Source Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL11_DMSAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL11_DMSAR = (DMAVEC_CTRL_CTRL_CTRL11_DMSAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL11_DMDAR  ----------------------
// SVD Line: 10572

unsigned int DMAVEC_CTRL_CTRL_CTRL11_DMDAR __AT (0x200000DC);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL11_DMDAR  --------------------------
// SVD Line: 10572

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL11_DMDAR
//    <name> DMDAR </name>
//    <i> [Bits 31..0] RW (@ 0x200000DC) DMA Destination Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL11_DMDAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL11_DMDAR = (DMAVEC_CTRL_CTRL_CTRL11_DMDAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Cluster ITree: DMAVEC_CTRL_CTRL_CTRL11  -----------------------------
// SVD Line: 10403

//  <itree> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL11
//    <name> [11] </name>
//    <i> DMA control data area </i>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL11_DMACR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL11_DMBLS </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL11_DMACT </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL11_DMRLD </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL11_DMSAR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL11_DMDAR </item>
//  </itree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL12_DMACR  ----------------------
// SVD Line: 10409

unsigned short DMAVEC_CTRL_CTRL_CTRL12_DMACR __AT (0x200000E0);



// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL12_DMACR_SZ  --------------------------
// SVD Line: 10415

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL12_DMACR_SZ
//    <name> SZ </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x200000E0) \nTransfer Data size selection\n0 : BYTE = 8 bits\n1 : HALF = 16 bits\n2 : WORD = 32 bits\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL12_DMACR ) </loc>
//      <o.7..6> SZ
//        <0=> 0: BYTE = 8 bits
//        <1=> 1: HALF = 16 bits
//        <2=> 2: WORD = 32 bits
//        <3=> 3: 
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL12_DMACR_RPTINT  ------------------------
// SVD Line: 10438

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL12_DMACR_RPTINT
//    <name> RPTINT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x200000E0) \nEnabling/disabling repeat mode interrupts\n0 : disable = Interrupt generation disabled\n1 : enable = Interrupt generation enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL12_DMACR ) </loc>
//      <o.5..5> RPTINT
//        <0=> 0: disable = Interrupt generation disabled
//        <1=> 1: enable = Interrupt generation enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL12_DMACR_CHNE  -------------------------
// SVD Line: 10456

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL12_DMACR_CHNE
//    <name> CHNE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x200000E0) \nEnabling/disabling chain transfers\n0 : disable = Chain transfers disabled\n1 : enable = Chain transfers enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL12_DMACR ) </loc>
//      <o.4..4> CHNE
//        <0=> 0: disable = Chain transfers disabled
//        <1=> 1: enable = Chain transfers enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL12_DMACR_DAMOD  ------------------------
// SVD Line: 10474

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL12_DMACR_DAMOD
//    <name> DAMOD </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x200000E0) \nDestination address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL12_DMACR ) </loc>
//      <o.3..3> DAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL12_DMACR_SAMOD  ------------------------
// SVD Line: 10492

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL12_DMACR_SAMOD
//    <name> SAMOD </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x200000E0) \nSource address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL12_DMACR ) </loc>
//      <o.2..2> SAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL12_DMACR_RPTSEL  ------------------------
// SVD Line: 10510

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL12_DMACR_RPTSEL
//    <name> RPTSEL </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x200000E0) \nRepeat area selection\n0 : destination = Transfer destination is the repeat area\n1 : source = Transfer source is the repeat area </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL12_DMACR ) </loc>
//      <o.1..1> RPTSEL
//        <0=> 0: destination = Transfer destination is the repeat area
//        <1=> 1: source = Transfer source is the repeat area
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL12_DMACR_MODE  -------------------------
// SVD Line: 10528

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL12_DMACR_MODE
//    <name> MODE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x200000E0) \nTransfer mode selection\n0 : Normal = Normal mode\n1 : Repeat = Repeat mode </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL12_DMACR ) </loc>
//      <o.0..0> MODE
//        <0=> 0: Normal = Normal mode
//        <1=> 1: Repeat = Repeat mode
//    </combo>
//  </item>
//  


// ----------------------  Register RTree: DMAVEC_CTRL_CTRL_CTRL12_DMACR  -------------------------
// SVD Line: 10409

//  <rtree> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL12_DMACR
//    <name> DMACR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x200000E0) DMA Control register </i>
//    <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL12_DMACR >> 0) & 0xFFFF), ((DMAVEC_CTRL_CTRL_CTRL12_DMACR = (DMAVEC_CTRL_CTRL_CTRL12_DMACR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL12_DMACR_SZ </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL12_DMACR_RPTINT </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL12_DMACR_CHNE </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL12_DMACR_DAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL12_DMACR_SAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL12_DMACR_RPTSEL </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL12_DMACR_MODE </item>
//  </rtree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL12_DMBLS  ----------------------
// SVD Line: 10548

unsigned short DMAVEC_CTRL_CTRL_CTRL12_DMBLS __AT (0x200000E2);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL12_DMBLS  --------------------------
// SVD Line: 10548

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL12_DMBLS
//    <name> DMBLS </name>
//    <i> [Bits 15..0] RW (@ 0x200000E2) DMA Block Size register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL12_DMBLS >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL12_DMBLS = (DMAVEC_CTRL_CTRL_CTRL12_DMBLS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL12_DMACT  ----------------------
// SVD Line: 10554

unsigned short DMAVEC_CTRL_CTRL_CTRL12_DMACT __AT (0x200000E4);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL12_DMACT  --------------------------
// SVD Line: 10554

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL12_DMACT
//    <name> DMACT </name>
//    <i> [Bits 15..0] RW (@ 0x200000E4) DMA Transfer Count register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL12_DMACT >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL12_DMACT = (DMAVEC_CTRL_CTRL_CTRL12_DMACT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL12_DMRLD  ----------------------
// SVD Line: 10560

unsigned short DMAVEC_CTRL_CTRL_CTRL12_DMRLD __AT (0x200000E6);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL12_DMRLD  --------------------------
// SVD Line: 10560

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL12_DMRLD
//    <name> DMRLD </name>
//    <i> [Bits 15..0] RW (@ 0x200000E6) DMA Transfer Count Reload register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL12_DMRLD >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL12_DMRLD = (DMAVEC_CTRL_CTRL_CTRL12_DMRLD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL12_DMSAR  ----------------------
// SVD Line: 10566

unsigned int DMAVEC_CTRL_CTRL_CTRL12_DMSAR __AT (0x200000E8);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL12_DMSAR  --------------------------
// SVD Line: 10566

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL12_DMSAR
//    <name> DMSAR </name>
//    <i> [Bits 31..0] RW (@ 0x200000E8) DMA Source Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL12_DMSAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL12_DMSAR = (DMAVEC_CTRL_CTRL_CTRL12_DMSAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL12_DMDAR  ----------------------
// SVD Line: 10572

unsigned int DMAVEC_CTRL_CTRL_CTRL12_DMDAR __AT (0x200000EC);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL12_DMDAR  --------------------------
// SVD Line: 10572

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL12_DMDAR
//    <name> DMDAR </name>
//    <i> [Bits 31..0] RW (@ 0x200000EC) DMA Destination Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL12_DMDAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL12_DMDAR = (DMAVEC_CTRL_CTRL_CTRL12_DMDAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Cluster ITree: DMAVEC_CTRL_CTRL_CTRL12  -----------------------------
// SVD Line: 10403

//  <itree> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL12
//    <name> [12] </name>
//    <i> DMA control data area </i>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL12_DMACR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL12_DMBLS </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL12_DMACT </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL12_DMRLD </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL12_DMSAR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL12_DMDAR </item>
//  </itree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL13_DMACR  ----------------------
// SVD Line: 10409

unsigned short DMAVEC_CTRL_CTRL_CTRL13_DMACR __AT (0x200000F0);



// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL13_DMACR_SZ  --------------------------
// SVD Line: 10415

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL13_DMACR_SZ
//    <name> SZ </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x200000F0) \nTransfer Data size selection\n0 : BYTE = 8 bits\n1 : HALF = 16 bits\n2 : WORD = 32 bits\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL13_DMACR ) </loc>
//      <o.7..6> SZ
//        <0=> 0: BYTE = 8 bits
//        <1=> 1: HALF = 16 bits
//        <2=> 2: WORD = 32 bits
//        <3=> 3: 
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL13_DMACR_RPTINT  ------------------------
// SVD Line: 10438

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL13_DMACR_RPTINT
//    <name> RPTINT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x200000F0) \nEnabling/disabling repeat mode interrupts\n0 : disable = Interrupt generation disabled\n1 : enable = Interrupt generation enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL13_DMACR ) </loc>
//      <o.5..5> RPTINT
//        <0=> 0: disable = Interrupt generation disabled
//        <1=> 1: enable = Interrupt generation enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL13_DMACR_CHNE  -------------------------
// SVD Line: 10456

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL13_DMACR_CHNE
//    <name> CHNE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x200000F0) \nEnabling/disabling chain transfers\n0 : disable = Chain transfers disabled\n1 : enable = Chain transfers enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL13_DMACR ) </loc>
//      <o.4..4> CHNE
//        <0=> 0: disable = Chain transfers disabled
//        <1=> 1: enable = Chain transfers enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL13_DMACR_DAMOD  ------------------------
// SVD Line: 10474

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL13_DMACR_DAMOD
//    <name> DAMOD </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x200000F0) \nDestination address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL13_DMACR ) </loc>
//      <o.3..3> DAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL13_DMACR_SAMOD  ------------------------
// SVD Line: 10492

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL13_DMACR_SAMOD
//    <name> SAMOD </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x200000F0) \nSource address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL13_DMACR ) </loc>
//      <o.2..2> SAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL13_DMACR_RPTSEL  ------------------------
// SVD Line: 10510

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL13_DMACR_RPTSEL
//    <name> RPTSEL </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x200000F0) \nRepeat area selection\n0 : destination = Transfer destination is the repeat area\n1 : source = Transfer source is the repeat area </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL13_DMACR ) </loc>
//      <o.1..1> RPTSEL
//        <0=> 0: destination = Transfer destination is the repeat area
//        <1=> 1: source = Transfer source is the repeat area
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL13_DMACR_MODE  -------------------------
// SVD Line: 10528

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL13_DMACR_MODE
//    <name> MODE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x200000F0) \nTransfer mode selection\n0 : Normal = Normal mode\n1 : Repeat = Repeat mode </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL13_DMACR ) </loc>
//      <o.0..0> MODE
//        <0=> 0: Normal = Normal mode
//        <1=> 1: Repeat = Repeat mode
//    </combo>
//  </item>
//  


// ----------------------  Register RTree: DMAVEC_CTRL_CTRL_CTRL13_DMACR  -------------------------
// SVD Line: 10409

//  <rtree> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL13_DMACR
//    <name> DMACR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x200000F0) DMA Control register </i>
//    <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL13_DMACR >> 0) & 0xFFFF), ((DMAVEC_CTRL_CTRL_CTRL13_DMACR = (DMAVEC_CTRL_CTRL_CTRL13_DMACR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL13_DMACR_SZ </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL13_DMACR_RPTINT </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL13_DMACR_CHNE </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL13_DMACR_DAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL13_DMACR_SAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL13_DMACR_RPTSEL </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL13_DMACR_MODE </item>
//  </rtree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL13_DMBLS  ----------------------
// SVD Line: 10548

unsigned short DMAVEC_CTRL_CTRL_CTRL13_DMBLS __AT (0x200000F2);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL13_DMBLS  --------------------------
// SVD Line: 10548

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL13_DMBLS
//    <name> DMBLS </name>
//    <i> [Bits 15..0] RW (@ 0x200000F2) DMA Block Size register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL13_DMBLS >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL13_DMBLS = (DMAVEC_CTRL_CTRL_CTRL13_DMBLS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL13_DMACT  ----------------------
// SVD Line: 10554

unsigned short DMAVEC_CTRL_CTRL_CTRL13_DMACT __AT (0x200000F4);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL13_DMACT  --------------------------
// SVD Line: 10554

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL13_DMACT
//    <name> DMACT </name>
//    <i> [Bits 15..0] RW (@ 0x200000F4) DMA Transfer Count register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL13_DMACT >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL13_DMACT = (DMAVEC_CTRL_CTRL_CTRL13_DMACT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL13_DMRLD  ----------------------
// SVD Line: 10560

unsigned short DMAVEC_CTRL_CTRL_CTRL13_DMRLD __AT (0x200000F6);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL13_DMRLD  --------------------------
// SVD Line: 10560

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL13_DMRLD
//    <name> DMRLD </name>
//    <i> [Bits 15..0] RW (@ 0x200000F6) DMA Transfer Count Reload register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL13_DMRLD >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL13_DMRLD = (DMAVEC_CTRL_CTRL_CTRL13_DMRLD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL13_DMSAR  ----------------------
// SVD Line: 10566

unsigned int DMAVEC_CTRL_CTRL_CTRL13_DMSAR __AT (0x200000F8);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL13_DMSAR  --------------------------
// SVD Line: 10566

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL13_DMSAR
//    <name> DMSAR </name>
//    <i> [Bits 31..0] RW (@ 0x200000F8) DMA Source Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL13_DMSAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL13_DMSAR = (DMAVEC_CTRL_CTRL_CTRL13_DMSAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL13_DMDAR  ----------------------
// SVD Line: 10572

unsigned int DMAVEC_CTRL_CTRL_CTRL13_DMDAR __AT (0x200000FC);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL13_DMDAR  --------------------------
// SVD Line: 10572

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL13_DMDAR
//    <name> DMDAR </name>
//    <i> [Bits 31..0] RW (@ 0x200000FC) DMA Destination Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL13_DMDAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL13_DMDAR = (DMAVEC_CTRL_CTRL_CTRL13_DMDAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Cluster ITree: DMAVEC_CTRL_CTRL_CTRL13  -----------------------------
// SVD Line: 10403

//  <itree> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL13
//    <name> [13] </name>
//    <i> DMA control data area </i>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL13_DMACR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL13_DMBLS </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL13_DMACT </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL13_DMRLD </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL13_DMSAR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL13_DMDAR </item>
//  </itree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL14_DMACR  ----------------------
// SVD Line: 10409

unsigned short DMAVEC_CTRL_CTRL_CTRL14_DMACR __AT (0x20000100);



// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL14_DMACR_SZ  --------------------------
// SVD Line: 10415

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL14_DMACR_SZ
//    <name> SZ </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x20000100) \nTransfer Data size selection\n0 : BYTE = 8 bits\n1 : HALF = 16 bits\n2 : WORD = 32 bits\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL14_DMACR ) </loc>
//      <o.7..6> SZ
//        <0=> 0: BYTE = 8 bits
//        <1=> 1: HALF = 16 bits
//        <2=> 2: WORD = 32 bits
//        <3=> 3: 
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL14_DMACR_RPTINT  ------------------------
// SVD Line: 10438

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL14_DMACR_RPTINT
//    <name> RPTINT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x20000100) \nEnabling/disabling repeat mode interrupts\n0 : disable = Interrupt generation disabled\n1 : enable = Interrupt generation enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL14_DMACR ) </loc>
//      <o.5..5> RPTINT
//        <0=> 0: disable = Interrupt generation disabled
//        <1=> 1: enable = Interrupt generation enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL14_DMACR_CHNE  -------------------------
// SVD Line: 10456

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL14_DMACR_CHNE
//    <name> CHNE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x20000100) \nEnabling/disabling chain transfers\n0 : disable = Chain transfers disabled\n1 : enable = Chain transfers enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL14_DMACR ) </loc>
//      <o.4..4> CHNE
//        <0=> 0: disable = Chain transfers disabled
//        <1=> 1: enable = Chain transfers enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL14_DMACR_DAMOD  ------------------------
// SVD Line: 10474

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL14_DMACR_DAMOD
//    <name> DAMOD </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x20000100) \nDestination address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL14_DMACR ) </loc>
//      <o.3..3> DAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL14_DMACR_SAMOD  ------------------------
// SVD Line: 10492

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL14_DMACR_SAMOD
//    <name> SAMOD </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x20000100) \nSource address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL14_DMACR ) </loc>
//      <o.2..2> SAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL14_DMACR_RPTSEL  ------------------------
// SVD Line: 10510

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL14_DMACR_RPTSEL
//    <name> RPTSEL </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x20000100) \nRepeat area selection\n0 : destination = Transfer destination is the repeat area\n1 : source = Transfer source is the repeat area </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL14_DMACR ) </loc>
//      <o.1..1> RPTSEL
//        <0=> 0: destination = Transfer destination is the repeat area
//        <1=> 1: source = Transfer source is the repeat area
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL14_DMACR_MODE  -------------------------
// SVD Line: 10528

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL14_DMACR_MODE
//    <name> MODE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x20000100) \nTransfer mode selection\n0 : Normal = Normal mode\n1 : Repeat = Repeat mode </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL14_DMACR ) </loc>
//      <o.0..0> MODE
//        <0=> 0: Normal = Normal mode
//        <1=> 1: Repeat = Repeat mode
//    </combo>
//  </item>
//  


// ----------------------  Register RTree: DMAVEC_CTRL_CTRL_CTRL14_DMACR  -------------------------
// SVD Line: 10409

//  <rtree> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL14_DMACR
//    <name> DMACR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x20000100) DMA Control register </i>
//    <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL14_DMACR >> 0) & 0xFFFF), ((DMAVEC_CTRL_CTRL_CTRL14_DMACR = (DMAVEC_CTRL_CTRL_CTRL14_DMACR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL14_DMACR_SZ </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL14_DMACR_RPTINT </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL14_DMACR_CHNE </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL14_DMACR_DAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL14_DMACR_SAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL14_DMACR_RPTSEL </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL14_DMACR_MODE </item>
//  </rtree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL14_DMBLS  ----------------------
// SVD Line: 10548

unsigned short DMAVEC_CTRL_CTRL_CTRL14_DMBLS __AT (0x20000102);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL14_DMBLS  --------------------------
// SVD Line: 10548

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL14_DMBLS
//    <name> DMBLS </name>
//    <i> [Bits 15..0] RW (@ 0x20000102) DMA Block Size register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL14_DMBLS >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL14_DMBLS = (DMAVEC_CTRL_CTRL_CTRL14_DMBLS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL14_DMACT  ----------------------
// SVD Line: 10554

unsigned short DMAVEC_CTRL_CTRL_CTRL14_DMACT __AT (0x20000104);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL14_DMACT  --------------------------
// SVD Line: 10554

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL14_DMACT
//    <name> DMACT </name>
//    <i> [Bits 15..0] RW (@ 0x20000104) DMA Transfer Count register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL14_DMACT >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL14_DMACT = (DMAVEC_CTRL_CTRL_CTRL14_DMACT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL14_DMRLD  ----------------------
// SVD Line: 10560

unsigned short DMAVEC_CTRL_CTRL_CTRL14_DMRLD __AT (0x20000106);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL14_DMRLD  --------------------------
// SVD Line: 10560

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL14_DMRLD
//    <name> DMRLD </name>
//    <i> [Bits 15..0] RW (@ 0x20000106) DMA Transfer Count Reload register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL14_DMRLD >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL14_DMRLD = (DMAVEC_CTRL_CTRL_CTRL14_DMRLD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL14_DMSAR  ----------------------
// SVD Line: 10566

unsigned int DMAVEC_CTRL_CTRL_CTRL14_DMSAR __AT (0x20000108);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL14_DMSAR  --------------------------
// SVD Line: 10566

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL14_DMSAR
//    <name> DMSAR </name>
//    <i> [Bits 31..0] RW (@ 0x20000108) DMA Source Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL14_DMSAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL14_DMSAR = (DMAVEC_CTRL_CTRL_CTRL14_DMSAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL14_DMDAR  ----------------------
// SVD Line: 10572

unsigned int DMAVEC_CTRL_CTRL_CTRL14_DMDAR __AT (0x2000010C);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL14_DMDAR  --------------------------
// SVD Line: 10572

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL14_DMDAR
//    <name> DMDAR </name>
//    <i> [Bits 31..0] RW (@ 0x2000010C) DMA Destination Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL14_DMDAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL14_DMDAR = (DMAVEC_CTRL_CTRL_CTRL14_DMDAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Cluster ITree: DMAVEC_CTRL_CTRL_CTRL14  -----------------------------
// SVD Line: 10403

//  <itree> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL14
//    <name> [14] </name>
//    <i> DMA control data area </i>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL14_DMACR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL14_DMBLS </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL14_DMACT </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL14_DMRLD </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL14_DMSAR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL14_DMDAR </item>
//  </itree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL15_DMACR  ----------------------
// SVD Line: 10409

unsigned short DMAVEC_CTRL_CTRL_CTRL15_DMACR __AT (0x20000110);



// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL15_DMACR_SZ  --------------------------
// SVD Line: 10415

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL15_DMACR_SZ
//    <name> SZ </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x20000110) \nTransfer Data size selection\n0 : BYTE = 8 bits\n1 : HALF = 16 bits\n2 : WORD = 32 bits\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL15_DMACR ) </loc>
//      <o.7..6> SZ
//        <0=> 0: BYTE = 8 bits
//        <1=> 1: HALF = 16 bits
//        <2=> 2: WORD = 32 bits
//        <3=> 3: 
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL15_DMACR_RPTINT  ------------------------
// SVD Line: 10438

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL15_DMACR_RPTINT
//    <name> RPTINT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x20000110) \nEnabling/disabling repeat mode interrupts\n0 : disable = Interrupt generation disabled\n1 : enable = Interrupt generation enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL15_DMACR ) </loc>
//      <o.5..5> RPTINT
//        <0=> 0: disable = Interrupt generation disabled
//        <1=> 1: enable = Interrupt generation enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL15_DMACR_CHNE  -------------------------
// SVD Line: 10456

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL15_DMACR_CHNE
//    <name> CHNE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x20000110) \nEnabling/disabling chain transfers\n0 : disable = Chain transfers disabled\n1 : enable = Chain transfers enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL15_DMACR ) </loc>
//      <o.4..4> CHNE
//        <0=> 0: disable = Chain transfers disabled
//        <1=> 1: enable = Chain transfers enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL15_DMACR_DAMOD  ------------------------
// SVD Line: 10474

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL15_DMACR_DAMOD
//    <name> DAMOD </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x20000110) \nDestination address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL15_DMACR ) </loc>
//      <o.3..3> DAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL15_DMACR_SAMOD  ------------------------
// SVD Line: 10492

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL15_DMACR_SAMOD
//    <name> SAMOD </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x20000110) \nSource address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL15_DMACR ) </loc>
//      <o.2..2> SAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL15_DMACR_RPTSEL  ------------------------
// SVD Line: 10510

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL15_DMACR_RPTSEL
//    <name> RPTSEL </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x20000110) \nRepeat area selection\n0 : destination = Transfer destination is the repeat area\n1 : source = Transfer source is the repeat area </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL15_DMACR ) </loc>
//      <o.1..1> RPTSEL
//        <0=> 0: destination = Transfer destination is the repeat area
//        <1=> 1: source = Transfer source is the repeat area
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL15_DMACR_MODE  -------------------------
// SVD Line: 10528

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL15_DMACR_MODE
//    <name> MODE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x20000110) \nTransfer mode selection\n0 : Normal = Normal mode\n1 : Repeat = Repeat mode </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL15_DMACR ) </loc>
//      <o.0..0> MODE
//        <0=> 0: Normal = Normal mode
//        <1=> 1: Repeat = Repeat mode
//    </combo>
//  </item>
//  


// ----------------------  Register RTree: DMAVEC_CTRL_CTRL_CTRL15_DMACR  -------------------------
// SVD Line: 10409

//  <rtree> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL15_DMACR
//    <name> DMACR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x20000110) DMA Control register </i>
//    <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL15_DMACR >> 0) & 0xFFFF), ((DMAVEC_CTRL_CTRL_CTRL15_DMACR = (DMAVEC_CTRL_CTRL_CTRL15_DMACR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL15_DMACR_SZ </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL15_DMACR_RPTINT </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL15_DMACR_CHNE </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL15_DMACR_DAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL15_DMACR_SAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL15_DMACR_RPTSEL </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL15_DMACR_MODE </item>
//  </rtree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL15_DMBLS  ----------------------
// SVD Line: 10548

unsigned short DMAVEC_CTRL_CTRL_CTRL15_DMBLS __AT (0x20000112);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL15_DMBLS  --------------------------
// SVD Line: 10548

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL15_DMBLS
//    <name> DMBLS </name>
//    <i> [Bits 15..0] RW (@ 0x20000112) DMA Block Size register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL15_DMBLS >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL15_DMBLS = (DMAVEC_CTRL_CTRL_CTRL15_DMBLS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL15_DMACT  ----------------------
// SVD Line: 10554

unsigned short DMAVEC_CTRL_CTRL_CTRL15_DMACT __AT (0x20000114);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL15_DMACT  --------------------------
// SVD Line: 10554

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL15_DMACT
//    <name> DMACT </name>
//    <i> [Bits 15..0] RW (@ 0x20000114) DMA Transfer Count register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL15_DMACT >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL15_DMACT = (DMAVEC_CTRL_CTRL_CTRL15_DMACT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL15_DMRLD  ----------------------
// SVD Line: 10560

unsigned short DMAVEC_CTRL_CTRL_CTRL15_DMRLD __AT (0x20000116);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL15_DMRLD  --------------------------
// SVD Line: 10560

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL15_DMRLD
//    <name> DMRLD </name>
//    <i> [Bits 15..0] RW (@ 0x20000116) DMA Transfer Count Reload register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL15_DMRLD >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL15_DMRLD = (DMAVEC_CTRL_CTRL_CTRL15_DMRLD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL15_DMSAR  ----------------------
// SVD Line: 10566

unsigned int DMAVEC_CTRL_CTRL_CTRL15_DMSAR __AT (0x20000118);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL15_DMSAR  --------------------------
// SVD Line: 10566

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL15_DMSAR
//    <name> DMSAR </name>
//    <i> [Bits 31..0] RW (@ 0x20000118) DMA Source Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL15_DMSAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL15_DMSAR = (DMAVEC_CTRL_CTRL_CTRL15_DMSAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL15_DMDAR  ----------------------
// SVD Line: 10572

unsigned int DMAVEC_CTRL_CTRL_CTRL15_DMDAR __AT (0x2000011C);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL15_DMDAR  --------------------------
// SVD Line: 10572

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL15_DMDAR
//    <name> DMDAR </name>
//    <i> [Bits 31..0] RW (@ 0x2000011C) DMA Destination Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL15_DMDAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL15_DMDAR = (DMAVEC_CTRL_CTRL_CTRL15_DMDAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Cluster ITree: DMAVEC_CTRL_CTRL_CTRL15  -----------------------------
// SVD Line: 10403

//  <itree> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL15
//    <name> [15] </name>
//    <i> DMA control data area </i>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL15_DMACR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL15_DMBLS </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL15_DMACT </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL15_DMRLD </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL15_DMSAR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL15_DMDAR </item>
//  </itree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL16_DMACR  ----------------------
// SVD Line: 10409

unsigned short DMAVEC_CTRL_CTRL_CTRL16_DMACR __AT (0x20000120);



// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL16_DMACR_SZ  --------------------------
// SVD Line: 10415

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL16_DMACR_SZ
//    <name> SZ </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x20000120) \nTransfer Data size selection\n0 : BYTE = 8 bits\n1 : HALF = 16 bits\n2 : WORD = 32 bits\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL16_DMACR ) </loc>
//      <o.7..6> SZ
//        <0=> 0: BYTE = 8 bits
//        <1=> 1: HALF = 16 bits
//        <2=> 2: WORD = 32 bits
//        <3=> 3: 
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL16_DMACR_RPTINT  ------------------------
// SVD Line: 10438

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL16_DMACR_RPTINT
//    <name> RPTINT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x20000120) \nEnabling/disabling repeat mode interrupts\n0 : disable = Interrupt generation disabled\n1 : enable = Interrupt generation enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL16_DMACR ) </loc>
//      <o.5..5> RPTINT
//        <0=> 0: disable = Interrupt generation disabled
//        <1=> 1: enable = Interrupt generation enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL16_DMACR_CHNE  -------------------------
// SVD Line: 10456

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL16_DMACR_CHNE
//    <name> CHNE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x20000120) \nEnabling/disabling chain transfers\n0 : disable = Chain transfers disabled\n1 : enable = Chain transfers enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL16_DMACR ) </loc>
//      <o.4..4> CHNE
//        <0=> 0: disable = Chain transfers disabled
//        <1=> 1: enable = Chain transfers enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL16_DMACR_DAMOD  ------------------------
// SVD Line: 10474

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL16_DMACR_DAMOD
//    <name> DAMOD </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x20000120) \nDestination address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL16_DMACR ) </loc>
//      <o.3..3> DAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL16_DMACR_SAMOD  ------------------------
// SVD Line: 10492

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL16_DMACR_SAMOD
//    <name> SAMOD </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x20000120) \nSource address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL16_DMACR ) </loc>
//      <o.2..2> SAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL16_DMACR_RPTSEL  ------------------------
// SVD Line: 10510

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL16_DMACR_RPTSEL
//    <name> RPTSEL </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x20000120) \nRepeat area selection\n0 : destination = Transfer destination is the repeat area\n1 : source = Transfer source is the repeat area </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL16_DMACR ) </loc>
//      <o.1..1> RPTSEL
//        <0=> 0: destination = Transfer destination is the repeat area
//        <1=> 1: source = Transfer source is the repeat area
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL16_DMACR_MODE  -------------------------
// SVD Line: 10528

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL16_DMACR_MODE
//    <name> MODE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x20000120) \nTransfer mode selection\n0 : Normal = Normal mode\n1 : Repeat = Repeat mode </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL16_DMACR ) </loc>
//      <o.0..0> MODE
//        <0=> 0: Normal = Normal mode
//        <1=> 1: Repeat = Repeat mode
//    </combo>
//  </item>
//  


// ----------------------  Register RTree: DMAVEC_CTRL_CTRL_CTRL16_DMACR  -------------------------
// SVD Line: 10409

//  <rtree> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL16_DMACR
//    <name> DMACR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x20000120) DMA Control register </i>
//    <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL16_DMACR >> 0) & 0xFFFF), ((DMAVEC_CTRL_CTRL_CTRL16_DMACR = (DMAVEC_CTRL_CTRL_CTRL16_DMACR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL16_DMACR_SZ </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL16_DMACR_RPTINT </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL16_DMACR_CHNE </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL16_DMACR_DAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL16_DMACR_SAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL16_DMACR_RPTSEL </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL16_DMACR_MODE </item>
//  </rtree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL16_DMBLS  ----------------------
// SVD Line: 10548

unsigned short DMAVEC_CTRL_CTRL_CTRL16_DMBLS __AT (0x20000122);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL16_DMBLS  --------------------------
// SVD Line: 10548

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL16_DMBLS
//    <name> DMBLS </name>
//    <i> [Bits 15..0] RW (@ 0x20000122) DMA Block Size register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL16_DMBLS >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL16_DMBLS = (DMAVEC_CTRL_CTRL_CTRL16_DMBLS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL16_DMACT  ----------------------
// SVD Line: 10554

unsigned short DMAVEC_CTRL_CTRL_CTRL16_DMACT __AT (0x20000124);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL16_DMACT  --------------------------
// SVD Line: 10554

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL16_DMACT
//    <name> DMACT </name>
//    <i> [Bits 15..0] RW (@ 0x20000124) DMA Transfer Count register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL16_DMACT >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL16_DMACT = (DMAVEC_CTRL_CTRL_CTRL16_DMACT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL16_DMRLD  ----------------------
// SVD Line: 10560

unsigned short DMAVEC_CTRL_CTRL_CTRL16_DMRLD __AT (0x20000126);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL16_DMRLD  --------------------------
// SVD Line: 10560

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL16_DMRLD
//    <name> DMRLD </name>
//    <i> [Bits 15..0] RW (@ 0x20000126) DMA Transfer Count Reload register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL16_DMRLD >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL16_DMRLD = (DMAVEC_CTRL_CTRL_CTRL16_DMRLD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL16_DMSAR  ----------------------
// SVD Line: 10566

unsigned int DMAVEC_CTRL_CTRL_CTRL16_DMSAR __AT (0x20000128);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL16_DMSAR  --------------------------
// SVD Line: 10566

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL16_DMSAR
//    <name> DMSAR </name>
//    <i> [Bits 31..0] RW (@ 0x20000128) DMA Source Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL16_DMSAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL16_DMSAR = (DMAVEC_CTRL_CTRL_CTRL16_DMSAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL16_DMDAR  ----------------------
// SVD Line: 10572

unsigned int DMAVEC_CTRL_CTRL_CTRL16_DMDAR __AT (0x2000012C);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL16_DMDAR  --------------------------
// SVD Line: 10572

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL16_DMDAR
//    <name> DMDAR </name>
//    <i> [Bits 31..0] RW (@ 0x2000012C) DMA Destination Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL16_DMDAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL16_DMDAR = (DMAVEC_CTRL_CTRL_CTRL16_DMDAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Cluster ITree: DMAVEC_CTRL_CTRL_CTRL16  -----------------------------
// SVD Line: 10403

//  <itree> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL16
//    <name> [16] </name>
//    <i> DMA control data area </i>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL16_DMACR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL16_DMBLS </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL16_DMACT </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL16_DMRLD </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL16_DMSAR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL16_DMDAR </item>
//  </itree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL17_DMACR  ----------------------
// SVD Line: 10409

unsigned short DMAVEC_CTRL_CTRL_CTRL17_DMACR __AT (0x20000130);



// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL17_DMACR_SZ  --------------------------
// SVD Line: 10415

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL17_DMACR_SZ
//    <name> SZ </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x20000130) \nTransfer Data size selection\n0 : BYTE = 8 bits\n1 : HALF = 16 bits\n2 : WORD = 32 bits\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL17_DMACR ) </loc>
//      <o.7..6> SZ
//        <0=> 0: BYTE = 8 bits
//        <1=> 1: HALF = 16 bits
//        <2=> 2: WORD = 32 bits
//        <3=> 3: 
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL17_DMACR_RPTINT  ------------------------
// SVD Line: 10438

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL17_DMACR_RPTINT
//    <name> RPTINT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x20000130) \nEnabling/disabling repeat mode interrupts\n0 : disable = Interrupt generation disabled\n1 : enable = Interrupt generation enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL17_DMACR ) </loc>
//      <o.5..5> RPTINT
//        <0=> 0: disable = Interrupt generation disabled
//        <1=> 1: enable = Interrupt generation enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL17_DMACR_CHNE  -------------------------
// SVD Line: 10456

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL17_DMACR_CHNE
//    <name> CHNE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x20000130) \nEnabling/disabling chain transfers\n0 : disable = Chain transfers disabled\n1 : enable = Chain transfers enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL17_DMACR ) </loc>
//      <o.4..4> CHNE
//        <0=> 0: disable = Chain transfers disabled
//        <1=> 1: enable = Chain transfers enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL17_DMACR_DAMOD  ------------------------
// SVD Line: 10474

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL17_DMACR_DAMOD
//    <name> DAMOD </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x20000130) \nDestination address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL17_DMACR ) </loc>
//      <o.3..3> DAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL17_DMACR_SAMOD  ------------------------
// SVD Line: 10492

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL17_DMACR_SAMOD
//    <name> SAMOD </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x20000130) \nSource address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL17_DMACR ) </loc>
//      <o.2..2> SAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL17_DMACR_RPTSEL  ------------------------
// SVD Line: 10510

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL17_DMACR_RPTSEL
//    <name> RPTSEL </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x20000130) \nRepeat area selection\n0 : destination = Transfer destination is the repeat area\n1 : source = Transfer source is the repeat area </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL17_DMACR ) </loc>
//      <o.1..1> RPTSEL
//        <0=> 0: destination = Transfer destination is the repeat area
//        <1=> 1: source = Transfer source is the repeat area
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL17_DMACR_MODE  -------------------------
// SVD Line: 10528

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL17_DMACR_MODE
//    <name> MODE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x20000130) \nTransfer mode selection\n0 : Normal = Normal mode\n1 : Repeat = Repeat mode </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL17_DMACR ) </loc>
//      <o.0..0> MODE
//        <0=> 0: Normal = Normal mode
//        <1=> 1: Repeat = Repeat mode
//    </combo>
//  </item>
//  


// ----------------------  Register RTree: DMAVEC_CTRL_CTRL_CTRL17_DMACR  -------------------------
// SVD Line: 10409

//  <rtree> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL17_DMACR
//    <name> DMACR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x20000130) DMA Control register </i>
//    <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL17_DMACR >> 0) & 0xFFFF), ((DMAVEC_CTRL_CTRL_CTRL17_DMACR = (DMAVEC_CTRL_CTRL_CTRL17_DMACR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL17_DMACR_SZ </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL17_DMACR_RPTINT </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL17_DMACR_CHNE </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL17_DMACR_DAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL17_DMACR_SAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL17_DMACR_RPTSEL </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL17_DMACR_MODE </item>
//  </rtree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL17_DMBLS  ----------------------
// SVD Line: 10548

unsigned short DMAVEC_CTRL_CTRL_CTRL17_DMBLS __AT (0x20000132);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL17_DMBLS  --------------------------
// SVD Line: 10548

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL17_DMBLS
//    <name> DMBLS </name>
//    <i> [Bits 15..0] RW (@ 0x20000132) DMA Block Size register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL17_DMBLS >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL17_DMBLS = (DMAVEC_CTRL_CTRL_CTRL17_DMBLS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL17_DMACT  ----------------------
// SVD Line: 10554

unsigned short DMAVEC_CTRL_CTRL_CTRL17_DMACT __AT (0x20000134);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL17_DMACT  --------------------------
// SVD Line: 10554

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL17_DMACT
//    <name> DMACT </name>
//    <i> [Bits 15..0] RW (@ 0x20000134) DMA Transfer Count register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL17_DMACT >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL17_DMACT = (DMAVEC_CTRL_CTRL_CTRL17_DMACT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL17_DMRLD  ----------------------
// SVD Line: 10560

unsigned short DMAVEC_CTRL_CTRL_CTRL17_DMRLD __AT (0x20000136);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL17_DMRLD  --------------------------
// SVD Line: 10560

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL17_DMRLD
//    <name> DMRLD </name>
//    <i> [Bits 15..0] RW (@ 0x20000136) DMA Transfer Count Reload register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL17_DMRLD >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL17_DMRLD = (DMAVEC_CTRL_CTRL_CTRL17_DMRLD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL17_DMSAR  ----------------------
// SVD Line: 10566

unsigned int DMAVEC_CTRL_CTRL_CTRL17_DMSAR __AT (0x20000138);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL17_DMSAR  --------------------------
// SVD Line: 10566

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL17_DMSAR
//    <name> DMSAR </name>
//    <i> [Bits 31..0] RW (@ 0x20000138) DMA Source Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL17_DMSAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL17_DMSAR = (DMAVEC_CTRL_CTRL_CTRL17_DMSAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL17_DMDAR  ----------------------
// SVD Line: 10572

unsigned int DMAVEC_CTRL_CTRL_CTRL17_DMDAR __AT (0x2000013C);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL17_DMDAR  --------------------------
// SVD Line: 10572

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL17_DMDAR
//    <name> DMDAR </name>
//    <i> [Bits 31..0] RW (@ 0x2000013C) DMA Destination Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL17_DMDAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL17_DMDAR = (DMAVEC_CTRL_CTRL_CTRL17_DMDAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Cluster ITree: DMAVEC_CTRL_CTRL_CTRL17  -----------------------------
// SVD Line: 10403

//  <itree> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL17
//    <name> [17] </name>
//    <i> DMA control data area </i>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL17_DMACR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL17_DMBLS </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL17_DMACT </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL17_DMRLD </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL17_DMSAR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL17_DMDAR </item>
//  </itree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL18_DMACR  ----------------------
// SVD Line: 10409

unsigned short DMAVEC_CTRL_CTRL_CTRL18_DMACR __AT (0x20000140);



// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL18_DMACR_SZ  --------------------------
// SVD Line: 10415

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL18_DMACR_SZ
//    <name> SZ </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x20000140) \nTransfer Data size selection\n0 : BYTE = 8 bits\n1 : HALF = 16 bits\n2 : WORD = 32 bits\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL18_DMACR ) </loc>
//      <o.7..6> SZ
//        <0=> 0: BYTE = 8 bits
//        <1=> 1: HALF = 16 bits
//        <2=> 2: WORD = 32 bits
//        <3=> 3: 
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL18_DMACR_RPTINT  ------------------------
// SVD Line: 10438

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL18_DMACR_RPTINT
//    <name> RPTINT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x20000140) \nEnabling/disabling repeat mode interrupts\n0 : disable = Interrupt generation disabled\n1 : enable = Interrupt generation enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL18_DMACR ) </loc>
//      <o.5..5> RPTINT
//        <0=> 0: disable = Interrupt generation disabled
//        <1=> 1: enable = Interrupt generation enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL18_DMACR_CHNE  -------------------------
// SVD Line: 10456

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL18_DMACR_CHNE
//    <name> CHNE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x20000140) \nEnabling/disabling chain transfers\n0 : disable = Chain transfers disabled\n1 : enable = Chain transfers enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL18_DMACR ) </loc>
//      <o.4..4> CHNE
//        <0=> 0: disable = Chain transfers disabled
//        <1=> 1: enable = Chain transfers enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL18_DMACR_DAMOD  ------------------------
// SVD Line: 10474

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL18_DMACR_DAMOD
//    <name> DAMOD </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x20000140) \nDestination address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL18_DMACR ) </loc>
//      <o.3..3> DAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL18_DMACR_SAMOD  ------------------------
// SVD Line: 10492

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL18_DMACR_SAMOD
//    <name> SAMOD </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x20000140) \nSource address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL18_DMACR ) </loc>
//      <o.2..2> SAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL18_DMACR_RPTSEL  ------------------------
// SVD Line: 10510

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL18_DMACR_RPTSEL
//    <name> RPTSEL </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x20000140) \nRepeat area selection\n0 : destination = Transfer destination is the repeat area\n1 : source = Transfer source is the repeat area </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL18_DMACR ) </loc>
//      <o.1..1> RPTSEL
//        <0=> 0: destination = Transfer destination is the repeat area
//        <1=> 1: source = Transfer source is the repeat area
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL18_DMACR_MODE  -------------------------
// SVD Line: 10528

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL18_DMACR_MODE
//    <name> MODE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x20000140) \nTransfer mode selection\n0 : Normal = Normal mode\n1 : Repeat = Repeat mode </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL18_DMACR ) </loc>
//      <o.0..0> MODE
//        <0=> 0: Normal = Normal mode
//        <1=> 1: Repeat = Repeat mode
//    </combo>
//  </item>
//  


// ----------------------  Register RTree: DMAVEC_CTRL_CTRL_CTRL18_DMACR  -------------------------
// SVD Line: 10409

//  <rtree> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL18_DMACR
//    <name> DMACR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x20000140) DMA Control register </i>
//    <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL18_DMACR >> 0) & 0xFFFF), ((DMAVEC_CTRL_CTRL_CTRL18_DMACR = (DMAVEC_CTRL_CTRL_CTRL18_DMACR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL18_DMACR_SZ </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL18_DMACR_RPTINT </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL18_DMACR_CHNE </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL18_DMACR_DAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL18_DMACR_SAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL18_DMACR_RPTSEL </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL18_DMACR_MODE </item>
//  </rtree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL18_DMBLS  ----------------------
// SVD Line: 10548

unsigned short DMAVEC_CTRL_CTRL_CTRL18_DMBLS __AT (0x20000142);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL18_DMBLS  --------------------------
// SVD Line: 10548

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL18_DMBLS
//    <name> DMBLS </name>
//    <i> [Bits 15..0] RW (@ 0x20000142) DMA Block Size register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL18_DMBLS >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL18_DMBLS = (DMAVEC_CTRL_CTRL_CTRL18_DMBLS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL18_DMACT  ----------------------
// SVD Line: 10554

unsigned short DMAVEC_CTRL_CTRL_CTRL18_DMACT __AT (0x20000144);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL18_DMACT  --------------------------
// SVD Line: 10554

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL18_DMACT
//    <name> DMACT </name>
//    <i> [Bits 15..0] RW (@ 0x20000144) DMA Transfer Count register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL18_DMACT >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL18_DMACT = (DMAVEC_CTRL_CTRL_CTRL18_DMACT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL18_DMRLD  ----------------------
// SVD Line: 10560

unsigned short DMAVEC_CTRL_CTRL_CTRL18_DMRLD __AT (0x20000146);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL18_DMRLD  --------------------------
// SVD Line: 10560

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL18_DMRLD
//    <name> DMRLD </name>
//    <i> [Bits 15..0] RW (@ 0x20000146) DMA Transfer Count Reload register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL18_DMRLD >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL18_DMRLD = (DMAVEC_CTRL_CTRL_CTRL18_DMRLD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL18_DMSAR  ----------------------
// SVD Line: 10566

unsigned int DMAVEC_CTRL_CTRL_CTRL18_DMSAR __AT (0x20000148);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL18_DMSAR  --------------------------
// SVD Line: 10566

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL18_DMSAR
//    <name> DMSAR </name>
//    <i> [Bits 31..0] RW (@ 0x20000148) DMA Source Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL18_DMSAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL18_DMSAR = (DMAVEC_CTRL_CTRL_CTRL18_DMSAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL18_DMDAR  ----------------------
// SVD Line: 10572

unsigned int DMAVEC_CTRL_CTRL_CTRL18_DMDAR __AT (0x2000014C);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL18_DMDAR  --------------------------
// SVD Line: 10572

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL18_DMDAR
//    <name> DMDAR </name>
//    <i> [Bits 31..0] RW (@ 0x2000014C) DMA Destination Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL18_DMDAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL18_DMDAR = (DMAVEC_CTRL_CTRL_CTRL18_DMDAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Cluster ITree: DMAVEC_CTRL_CTRL_CTRL18  -----------------------------
// SVD Line: 10403

//  <itree> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL18
//    <name> [18] </name>
//    <i> DMA control data area </i>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL18_DMACR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL18_DMBLS </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL18_DMACT </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL18_DMRLD </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL18_DMSAR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL18_DMDAR </item>
//  </itree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL19_DMACR  ----------------------
// SVD Line: 10409

unsigned short DMAVEC_CTRL_CTRL_CTRL19_DMACR __AT (0x20000150);



// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL19_DMACR_SZ  --------------------------
// SVD Line: 10415

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL19_DMACR_SZ
//    <name> SZ </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x20000150) \nTransfer Data size selection\n0 : BYTE = 8 bits\n1 : HALF = 16 bits\n2 : WORD = 32 bits\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL19_DMACR ) </loc>
//      <o.7..6> SZ
//        <0=> 0: BYTE = 8 bits
//        <1=> 1: HALF = 16 bits
//        <2=> 2: WORD = 32 bits
//        <3=> 3: 
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL19_DMACR_RPTINT  ------------------------
// SVD Line: 10438

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL19_DMACR_RPTINT
//    <name> RPTINT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x20000150) \nEnabling/disabling repeat mode interrupts\n0 : disable = Interrupt generation disabled\n1 : enable = Interrupt generation enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL19_DMACR ) </loc>
//      <o.5..5> RPTINT
//        <0=> 0: disable = Interrupt generation disabled
//        <1=> 1: enable = Interrupt generation enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL19_DMACR_CHNE  -------------------------
// SVD Line: 10456

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL19_DMACR_CHNE
//    <name> CHNE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x20000150) \nEnabling/disabling chain transfers\n0 : disable = Chain transfers disabled\n1 : enable = Chain transfers enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL19_DMACR ) </loc>
//      <o.4..4> CHNE
//        <0=> 0: disable = Chain transfers disabled
//        <1=> 1: enable = Chain transfers enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL19_DMACR_DAMOD  ------------------------
// SVD Line: 10474

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL19_DMACR_DAMOD
//    <name> DAMOD </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x20000150) \nDestination address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL19_DMACR ) </loc>
//      <o.3..3> DAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL19_DMACR_SAMOD  ------------------------
// SVD Line: 10492

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL19_DMACR_SAMOD
//    <name> SAMOD </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x20000150) \nSource address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL19_DMACR ) </loc>
//      <o.2..2> SAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL19_DMACR_RPTSEL  ------------------------
// SVD Line: 10510

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL19_DMACR_RPTSEL
//    <name> RPTSEL </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x20000150) \nRepeat area selection\n0 : destination = Transfer destination is the repeat area\n1 : source = Transfer source is the repeat area </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL19_DMACR ) </loc>
//      <o.1..1> RPTSEL
//        <0=> 0: destination = Transfer destination is the repeat area
//        <1=> 1: source = Transfer source is the repeat area
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL19_DMACR_MODE  -------------------------
// SVD Line: 10528

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL19_DMACR_MODE
//    <name> MODE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x20000150) \nTransfer mode selection\n0 : Normal = Normal mode\n1 : Repeat = Repeat mode </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL19_DMACR ) </loc>
//      <o.0..0> MODE
//        <0=> 0: Normal = Normal mode
//        <1=> 1: Repeat = Repeat mode
//    </combo>
//  </item>
//  


// ----------------------  Register RTree: DMAVEC_CTRL_CTRL_CTRL19_DMACR  -------------------------
// SVD Line: 10409

//  <rtree> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL19_DMACR
//    <name> DMACR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x20000150) DMA Control register </i>
//    <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL19_DMACR >> 0) & 0xFFFF), ((DMAVEC_CTRL_CTRL_CTRL19_DMACR = (DMAVEC_CTRL_CTRL_CTRL19_DMACR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL19_DMACR_SZ </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL19_DMACR_RPTINT </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL19_DMACR_CHNE </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL19_DMACR_DAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL19_DMACR_SAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL19_DMACR_RPTSEL </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL19_DMACR_MODE </item>
//  </rtree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL19_DMBLS  ----------------------
// SVD Line: 10548

unsigned short DMAVEC_CTRL_CTRL_CTRL19_DMBLS __AT (0x20000152);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL19_DMBLS  --------------------------
// SVD Line: 10548

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL19_DMBLS
//    <name> DMBLS </name>
//    <i> [Bits 15..0] RW (@ 0x20000152) DMA Block Size register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL19_DMBLS >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL19_DMBLS = (DMAVEC_CTRL_CTRL_CTRL19_DMBLS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL19_DMACT  ----------------------
// SVD Line: 10554

unsigned short DMAVEC_CTRL_CTRL_CTRL19_DMACT __AT (0x20000154);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL19_DMACT  --------------------------
// SVD Line: 10554

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL19_DMACT
//    <name> DMACT </name>
//    <i> [Bits 15..0] RW (@ 0x20000154) DMA Transfer Count register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL19_DMACT >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL19_DMACT = (DMAVEC_CTRL_CTRL_CTRL19_DMACT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL19_DMRLD  ----------------------
// SVD Line: 10560

unsigned short DMAVEC_CTRL_CTRL_CTRL19_DMRLD __AT (0x20000156);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL19_DMRLD  --------------------------
// SVD Line: 10560

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL19_DMRLD
//    <name> DMRLD </name>
//    <i> [Bits 15..0] RW (@ 0x20000156) DMA Transfer Count Reload register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL19_DMRLD >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL19_DMRLD = (DMAVEC_CTRL_CTRL_CTRL19_DMRLD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL19_DMSAR  ----------------------
// SVD Line: 10566

unsigned int DMAVEC_CTRL_CTRL_CTRL19_DMSAR __AT (0x20000158);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL19_DMSAR  --------------------------
// SVD Line: 10566

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL19_DMSAR
//    <name> DMSAR </name>
//    <i> [Bits 31..0] RW (@ 0x20000158) DMA Source Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL19_DMSAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL19_DMSAR = (DMAVEC_CTRL_CTRL_CTRL19_DMSAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL19_DMDAR  ----------------------
// SVD Line: 10572

unsigned int DMAVEC_CTRL_CTRL_CTRL19_DMDAR __AT (0x2000015C);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL19_DMDAR  --------------------------
// SVD Line: 10572

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL19_DMDAR
//    <name> DMDAR </name>
//    <i> [Bits 31..0] RW (@ 0x2000015C) DMA Destination Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL19_DMDAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL19_DMDAR = (DMAVEC_CTRL_CTRL_CTRL19_DMDAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Cluster ITree: DMAVEC_CTRL_CTRL_CTRL19  -----------------------------
// SVD Line: 10403

//  <itree> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL19
//    <name> [19] </name>
//    <i> DMA control data area </i>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL19_DMACR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL19_DMBLS </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL19_DMACT </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL19_DMRLD </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL19_DMSAR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL19_DMDAR </item>
//  </itree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL20_DMACR  ----------------------
// SVD Line: 10409

unsigned short DMAVEC_CTRL_CTRL_CTRL20_DMACR __AT (0x20000160);



// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL20_DMACR_SZ  --------------------------
// SVD Line: 10415

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL20_DMACR_SZ
//    <name> SZ </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x20000160) \nTransfer Data size selection\n0 : BYTE = 8 bits\n1 : HALF = 16 bits\n2 : WORD = 32 bits\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL20_DMACR ) </loc>
//      <o.7..6> SZ
//        <0=> 0: BYTE = 8 bits
//        <1=> 1: HALF = 16 bits
//        <2=> 2: WORD = 32 bits
//        <3=> 3: 
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL20_DMACR_RPTINT  ------------------------
// SVD Line: 10438

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL20_DMACR_RPTINT
//    <name> RPTINT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x20000160) \nEnabling/disabling repeat mode interrupts\n0 : disable = Interrupt generation disabled\n1 : enable = Interrupt generation enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL20_DMACR ) </loc>
//      <o.5..5> RPTINT
//        <0=> 0: disable = Interrupt generation disabled
//        <1=> 1: enable = Interrupt generation enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL20_DMACR_CHNE  -------------------------
// SVD Line: 10456

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL20_DMACR_CHNE
//    <name> CHNE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x20000160) \nEnabling/disabling chain transfers\n0 : disable = Chain transfers disabled\n1 : enable = Chain transfers enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL20_DMACR ) </loc>
//      <o.4..4> CHNE
//        <0=> 0: disable = Chain transfers disabled
//        <1=> 1: enable = Chain transfers enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL20_DMACR_DAMOD  ------------------------
// SVD Line: 10474

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL20_DMACR_DAMOD
//    <name> DAMOD </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x20000160) \nDestination address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL20_DMACR ) </loc>
//      <o.3..3> DAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL20_DMACR_SAMOD  ------------------------
// SVD Line: 10492

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL20_DMACR_SAMOD
//    <name> SAMOD </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x20000160) \nSource address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL20_DMACR ) </loc>
//      <o.2..2> SAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL20_DMACR_RPTSEL  ------------------------
// SVD Line: 10510

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL20_DMACR_RPTSEL
//    <name> RPTSEL </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x20000160) \nRepeat area selection\n0 : destination = Transfer destination is the repeat area\n1 : source = Transfer source is the repeat area </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL20_DMACR ) </loc>
//      <o.1..1> RPTSEL
//        <0=> 0: destination = Transfer destination is the repeat area
//        <1=> 1: source = Transfer source is the repeat area
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL20_DMACR_MODE  -------------------------
// SVD Line: 10528

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL20_DMACR_MODE
//    <name> MODE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x20000160) \nTransfer mode selection\n0 : Normal = Normal mode\n1 : Repeat = Repeat mode </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL20_DMACR ) </loc>
//      <o.0..0> MODE
//        <0=> 0: Normal = Normal mode
//        <1=> 1: Repeat = Repeat mode
//    </combo>
//  </item>
//  


// ----------------------  Register RTree: DMAVEC_CTRL_CTRL_CTRL20_DMACR  -------------------------
// SVD Line: 10409

//  <rtree> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL20_DMACR
//    <name> DMACR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x20000160) DMA Control register </i>
//    <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL20_DMACR >> 0) & 0xFFFF), ((DMAVEC_CTRL_CTRL_CTRL20_DMACR = (DMAVEC_CTRL_CTRL_CTRL20_DMACR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL20_DMACR_SZ </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL20_DMACR_RPTINT </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL20_DMACR_CHNE </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL20_DMACR_DAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL20_DMACR_SAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL20_DMACR_RPTSEL </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL20_DMACR_MODE </item>
//  </rtree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL20_DMBLS  ----------------------
// SVD Line: 10548

unsigned short DMAVEC_CTRL_CTRL_CTRL20_DMBLS __AT (0x20000162);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL20_DMBLS  --------------------------
// SVD Line: 10548

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL20_DMBLS
//    <name> DMBLS </name>
//    <i> [Bits 15..0] RW (@ 0x20000162) DMA Block Size register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL20_DMBLS >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL20_DMBLS = (DMAVEC_CTRL_CTRL_CTRL20_DMBLS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL20_DMACT  ----------------------
// SVD Line: 10554

unsigned short DMAVEC_CTRL_CTRL_CTRL20_DMACT __AT (0x20000164);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL20_DMACT  --------------------------
// SVD Line: 10554

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL20_DMACT
//    <name> DMACT </name>
//    <i> [Bits 15..0] RW (@ 0x20000164) DMA Transfer Count register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL20_DMACT >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL20_DMACT = (DMAVEC_CTRL_CTRL_CTRL20_DMACT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL20_DMRLD  ----------------------
// SVD Line: 10560

unsigned short DMAVEC_CTRL_CTRL_CTRL20_DMRLD __AT (0x20000166);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL20_DMRLD  --------------------------
// SVD Line: 10560

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL20_DMRLD
//    <name> DMRLD </name>
//    <i> [Bits 15..0] RW (@ 0x20000166) DMA Transfer Count Reload register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL20_DMRLD >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL20_DMRLD = (DMAVEC_CTRL_CTRL_CTRL20_DMRLD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL20_DMSAR  ----------------------
// SVD Line: 10566

unsigned int DMAVEC_CTRL_CTRL_CTRL20_DMSAR __AT (0x20000168);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL20_DMSAR  --------------------------
// SVD Line: 10566

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL20_DMSAR
//    <name> DMSAR </name>
//    <i> [Bits 31..0] RW (@ 0x20000168) DMA Source Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL20_DMSAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL20_DMSAR = (DMAVEC_CTRL_CTRL_CTRL20_DMSAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL20_DMDAR  ----------------------
// SVD Line: 10572

unsigned int DMAVEC_CTRL_CTRL_CTRL20_DMDAR __AT (0x2000016C);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL20_DMDAR  --------------------------
// SVD Line: 10572

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL20_DMDAR
//    <name> DMDAR </name>
//    <i> [Bits 31..0] RW (@ 0x2000016C) DMA Destination Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL20_DMDAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL20_DMDAR = (DMAVEC_CTRL_CTRL_CTRL20_DMDAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Cluster ITree: DMAVEC_CTRL_CTRL_CTRL20  -----------------------------
// SVD Line: 10403

//  <itree> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL20
//    <name> [20] </name>
//    <i> DMA control data area </i>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL20_DMACR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL20_DMBLS </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL20_DMACT </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL20_DMRLD </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL20_DMSAR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL20_DMDAR </item>
//  </itree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL21_DMACR  ----------------------
// SVD Line: 10409

unsigned short DMAVEC_CTRL_CTRL_CTRL21_DMACR __AT (0x20000170);



// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL21_DMACR_SZ  --------------------------
// SVD Line: 10415

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL21_DMACR_SZ
//    <name> SZ </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x20000170) \nTransfer Data size selection\n0 : BYTE = 8 bits\n1 : HALF = 16 bits\n2 : WORD = 32 bits\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL21_DMACR ) </loc>
//      <o.7..6> SZ
//        <0=> 0: BYTE = 8 bits
//        <1=> 1: HALF = 16 bits
//        <2=> 2: WORD = 32 bits
//        <3=> 3: 
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL21_DMACR_RPTINT  ------------------------
// SVD Line: 10438

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL21_DMACR_RPTINT
//    <name> RPTINT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x20000170) \nEnabling/disabling repeat mode interrupts\n0 : disable = Interrupt generation disabled\n1 : enable = Interrupt generation enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL21_DMACR ) </loc>
//      <o.5..5> RPTINT
//        <0=> 0: disable = Interrupt generation disabled
//        <1=> 1: enable = Interrupt generation enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL21_DMACR_CHNE  -------------------------
// SVD Line: 10456

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL21_DMACR_CHNE
//    <name> CHNE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x20000170) \nEnabling/disabling chain transfers\n0 : disable = Chain transfers disabled\n1 : enable = Chain transfers enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL21_DMACR ) </loc>
//      <o.4..4> CHNE
//        <0=> 0: disable = Chain transfers disabled
//        <1=> 1: enable = Chain transfers enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL21_DMACR_DAMOD  ------------------------
// SVD Line: 10474

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL21_DMACR_DAMOD
//    <name> DAMOD </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x20000170) \nDestination address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL21_DMACR ) </loc>
//      <o.3..3> DAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL21_DMACR_SAMOD  ------------------------
// SVD Line: 10492

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL21_DMACR_SAMOD
//    <name> SAMOD </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x20000170) \nSource address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL21_DMACR ) </loc>
//      <o.2..2> SAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL21_DMACR_RPTSEL  ------------------------
// SVD Line: 10510

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL21_DMACR_RPTSEL
//    <name> RPTSEL </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x20000170) \nRepeat area selection\n0 : destination = Transfer destination is the repeat area\n1 : source = Transfer source is the repeat area </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL21_DMACR ) </loc>
//      <o.1..1> RPTSEL
//        <0=> 0: destination = Transfer destination is the repeat area
//        <1=> 1: source = Transfer source is the repeat area
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL21_DMACR_MODE  -------------------------
// SVD Line: 10528

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL21_DMACR_MODE
//    <name> MODE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x20000170) \nTransfer mode selection\n0 : Normal = Normal mode\n1 : Repeat = Repeat mode </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL21_DMACR ) </loc>
//      <o.0..0> MODE
//        <0=> 0: Normal = Normal mode
//        <1=> 1: Repeat = Repeat mode
//    </combo>
//  </item>
//  


// ----------------------  Register RTree: DMAVEC_CTRL_CTRL_CTRL21_DMACR  -------------------------
// SVD Line: 10409

//  <rtree> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL21_DMACR
//    <name> DMACR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x20000170) DMA Control register </i>
//    <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL21_DMACR >> 0) & 0xFFFF), ((DMAVEC_CTRL_CTRL_CTRL21_DMACR = (DMAVEC_CTRL_CTRL_CTRL21_DMACR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL21_DMACR_SZ </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL21_DMACR_RPTINT </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL21_DMACR_CHNE </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL21_DMACR_DAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL21_DMACR_SAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL21_DMACR_RPTSEL </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL21_DMACR_MODE </item>
//  </rtree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL21_DMBLS  ----------------------
// SVD Line: 10548

unsigned short DMAVEC_CTRL_CTRL_CTRL21_DMBLS __AT (0x20000172);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL21_DMBLS  --------------------------
// SVD Line: 10548

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL21_DMBLS
//    <name> DMBLS </name>
//    <i> [Bits 15..0] RW (@ 0x20000172) DMA Block Size register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL21_DMBLS >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL21_DMBLS = (DMAVEC_CTRL_CTRL_CTRL21_DMBLS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL21_DMACT  ----------------------
// SVD Line: 10554

unsigned short DMAVEC_CTRL_CTRL_CTRL21_DMACT __AT (0x20000174);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL21_DMACT  --------------------------
// SVD Line: 10554

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL21_DMACT
//    <name> DMACT </name>
//    <i> [Bits 15..0] RW (@ 0x20000174) DMA Transfer Count register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL21_DMACT >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL21_DMACT = (DMAVEC_CTRL_CTRL_CTRL21_DMACT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL21_DMRLD  ----------------------
// SVD Line: 10560

unsigned short DMAVEC_CTRL_CTRL_CTRL21_DMRLD __AT (0x20000176);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL21_DMRLD  --------------------------
// SVD Line: 10560

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL21_DMRLD
//    <name> DMRLD </name>
//    <i> [Bits 15..0] RW (@ 0x20000176) DMA Transfer Count Reload register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL21_DMRLD >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL21_DMRLD = (DMAVEC_CTRL_CTRL_CTRL21_DMRLD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL21_DMSAR  ----------------------
// SVD Line: 10566

unsigned int DMAVEC_CTRL_CTRL_CTRL21_DMSAR __AT (0x20000178);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL21_DMSAR  --------------------------
// SVD Line: 10566

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL21_DMSAR
//    <name> DMSAR </name>
//    <i> [Bits 31..0] RW (@ 0x20000178) DMA Source Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL21_DMSAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL21_DMSAR = (DMAVEC_CTRL_CTRL_CTRL21_DMSAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL21_DMDAR  ----------------------
// SVD Line: 10572

unsigned int DMAVEC_CTRL_CTRL_CTRL21_DMDAR __AT (0x2000017C);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL21_DMDAR  --------------------------
// SVD Line: 10572

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL21_DMDAR
//    <name> DMDAR </name>
//    <i> [Bits 31..0] RW (@ 0x2000017C) DMA Destination Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL21_DMDAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL21_DMDAR = (DMAVEC_CTRL_CTRL_CTRL21_DMDAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Cluster ITree: DMAVEC_CTRL_CTRL_CTRL21  -----------------------------
// SVD Line: 10403

//  <itree> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL21
//    <name> [21] </name>
//    <i> DMA control data area </i>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL21_DMACR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL21_DMBLS </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL21_DMACT </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL21_DMRLD </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL21_DMSAR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL21_DMDAR </item>
//  </itree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL22_DMACR  ----------------------
// SVD Line: 10409

unsigned short DMAVEC_CTRL_CTRL_CTRL22_DMACR __AT (0x20000180);



// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL22_DMACR_SZ  --------------------------
// SVD Line: 10415

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL22_DMACR_SZ
//    <name> SZ </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x20000180) \nTransfer Data size selection\n0 : BYTE = 8 bits\n1 : HALF = 16 bits\n2 : WORD = 32 bits\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL22_DMACR ) </loc>
//      <o.7..6> SZ
//        <0=> 0: BYTE = 8 bits
//        <1=> 1: HALF = 16 bits
//        <2=> 2: WORD = 32 bits
//        <3=> 3: 
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL22_DMACR_RPTINT  ------------------------
// SVD Line: 10438

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL22_DMACR_RPTINT
//    <name> RPTINT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x20000180) \nEnabling/disabling repeat mode interrupts\n0 : disable = Interrupt generation disabled\n1 : enable = Interrupt generation enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL22_DMACR ) </loc>
//      <o.5..5> RPTINT
//        <0=> 0: disable = Interrupt generation disabled
//        <1=> 1: enable = Interrupt generation enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL22_DMACR_CHNE  -------------------------
// SVD Line: 10456

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL22_DMACR_CHNE
//    <name> CHNE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x20000180) \nEnabling/disabling chain transfers\n0 : disable = Chain transfers disabled\n1 : enable = Chain transfers enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL22_DMACR ) </loc>
//      <o.4..4> CHNE
//        <0=> 0: disable = Chain transfers disabled
//        <1=> 1: enable = Chain transfers enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL22_DMACR_DAMOD  ------------------------
// SVD Line: 10474

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL22_DMACR_DAMOD
//    <name> DAMOD </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x20000180) \nDestination address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL22_DMACR ) </loc>
//      <o.3..3> DAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL22_DMACR_SAMOD  ------------------------
// SVD Line: 10492

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL22_DMACR_SAMOD
//    <name> SAMOD </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x20000180) \nSource address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL22_DMACR ) </loc>
//      <o.2..2> SAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL22_DMACR_RPTSEL  ------------------------
// SVD Line: 10510

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL22_DMACR_RPTSEL
//    <name> RPTSEL </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x20000180) \nRepeat area selection\n0 : destination = Transfer destination is the repeat area\n1 : source = Transfer source is the repeat area </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL22_DMACR ) </loc>
//      <o.1..1> RPTSEL
//        <0=> 0: destination = Transfer destination is the repeat area
//        <1=> 1: source = Transfer source is the repeat area
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL22_DMACR_MODE  -------------------------
// SVD Line: 10528

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL22_DMACR_MODE
//    <name> MODE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x20000180) \nTransfer mode selection\n0 : Normal = Normal mode\n1 : Repeat = Repeat mode </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL22_DMACR ) </loc>
//      <o.0..0> MODE
//        <0=> 0: Normal = Normal mode
//        <1=> 1: Repeat = Repeat mode
//    </combo>
//  </item>
//  


// ----------------------  Register RTree: DMAVEC_CTRL_CTRL_CTRL22_DMACR  -------------------------
// SVD Line: 10409

//  <rtree> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL22_DMACR
//    <name> DMACR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x20000180) DMA Control register </i>
//    <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL22_DMACR >> 0) & 0xFFFF), ((DMAVEC_CTRL_CTRL_CTRL22_DMACR = (DMAVEC_CTRL_CTRL_CTRL22_DMACR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL22_DMACR_SZ </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL22_DMACR_RPTINT </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL22_DMACR_CHNE </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL22_DMACR_DAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL22_DMACR_SAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL22_DMACR_RPTSEL </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL22_DMACR_MODE </item>
//  </rtree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL22_DMBLS  ----------------------
// SVD Line: 10548

unsigned short DMAVEC_CTRL_CTRL_CTRL22_DMBLS __AT (0x20000182);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL22_DMBLS  --------------------------
// SVD Line: 10548

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL22_DMBLS
//    <name> DMBLS </name>
//    <i> [Bits 15..0] RW (@ 0x20000182) DMA Block Size register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL22_DMBLS >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL22_DMBLS = (DMAVEC_CTRL_CTRL_CTRL22_DMBLS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL22_DMACT  ----------------------
// SVD Line: 10554

unsigned short DMAVEC_CTRL_CTRL_CTRL22_DMACT __AT (0x20000184);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL22_DMACT  --------------------------
// SVD Line: 10554

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL22_DMACT
//    <name> DMACT </name>
//    <i> [Bits 15..0] RW (@ 0x20000184) DMA Transfer Count register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL22_DMACT >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL22_DMACT = (DMAVEC_CTRL_CTRL_CTRL22_DMACT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL22_DMRLD  ----------------------
// SVD Line: 10560

unsigned short DMAVEC_CTRL_CTRL_CTRL22_DMRLD __AT (0x20000186);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL22_DMRLD  --------------------------
// SVD Line: 10560

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL22_DMRLD
//    <name> DMRLD </name>
//    <i> [Bits 15..0] RW (@ 0x20000186) DMA Transfer Count Reload register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL22_DMRLD >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL22_DMRLD = (DMAVEC_CTRL_CTRL_CTRL22_DMRLD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL22_DMSAR  ----------------------
// SVD Line: 10566

unsigned int DMAVEC_CTRL_CTRL_CTRL22_DMSAR __AT (0x20000188);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL22_DMSAR  --------------------------
// SVD Line: 10566

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL22_DMSAR
//    <name> DMSAR </name>
//    <i> [Bits 31..0] RW (@ 0x20000188) DMA Source Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL22_DMSAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL22_DMSAR = (DMAVEC_CTRL_CTRL_CTRL22_DMSAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL22_DMDAR  ----------------------
// SVD Line: 10572

unsigned int DMAVEC_CTRL_CTRL_CTRL22_DMDAR __AT (0x2000018C);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL22_DMDAR  --------------------------
// SVD Line: 10572

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL22_DMDAR
//    <name> DMDAR </name>
//    <i> [Bits 31..0] RW (@ 0x2000018C) DMA Destination Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL22_DMDAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL22_DMDAR = (DMAVEC_CTRL_CTRL_CTRL22_DMDAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Cluster ITree: DMAVEC_CTRL_CTRL_CTRL22  -----------------------------
// SVD Line: 10403

//  <itree> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL22
//    <name> [22] </name>
//    <i> DMA control data area </i>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL22_DMACR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL22_DMBLS </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL22_DMACT </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL22_DMRLD </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL22_DMSAR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL22_DMDAR </item>
//  </itree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL23_DMACR  ----------------------
// SVD Line: 10409

unsigned short DMAVEC_CTRL_CTRL_CTRL23_DMACR __AT (0x20000190);



// ----------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL23_DMACR_SZ  --------------------------
// SVD Line: 10415

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL23_DMACR_SZ
//    <name> SZ </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x20000190) \nTransfer Data size selection\n0 : BYTE = 8 bits\n1 : HALF = 16 bits\n2 : WORD = 32 bits\n3 : Reserved - do not use </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL23_DMACR ) </loc>
//      <o.7..6> SZ
//        <0=> 0: BYTE = 8 bits
//        <1=> 1: HALF = 16 bits
//        <2=> 2: WORD = 32 bits
//        <3=> 3: 
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL23_DMACR_RPTINT  ------------------------
// SVD Line: 10438

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL23_DMACR_RPTINT
//    <name> RPTINT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x20000190) \nEnabling/disabling repeat mode interrupts\n0 : disable = Interrupt generation disabled\n1 : enable = Interrupt generation enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL23_DMACR ) </loc>
//      <o.5..5> RPTINT
//        <0=> 0: disable = Interrupt generation disabled
//        <1=> 1: enable = Interrupt generation enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL23_DMACR_CHNE  -------------------------
// SVD Line: 10456

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL23_DMACR_CHNE
//    <name> CHNE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x20000190) \nEnabling/disabling chain transfers\n0 : disable = Chain transfers disabled\n1 : enable = Chain transfers enabled </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL23_DMACR ) </loc>
//      <o.4..4> CHNE
//        <0=> 0: disable = Chain transfers disabled
//        <1=> 1: enable = Chain transfers enabled
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL23_DMACR_DAMOD  ------------------------
// SVD Line: 10474

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL23_DMACR_DAMOD
//    <name> DAMOD </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x20000190) \nDestination address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL23_DMACR ) </loc>
//      <o.3..3> DAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL23_DMACR_SAMOD  ------------------------
// SVD Line: 10492

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL23_DMACR_SAMOD
//    <name> SAMOD </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x20000190) \nSource address control\n0 : Fixed = Fixed\n1 : Incremented = Incremented </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL23_DMACR ) </loc>
//      <o.2..2> SAMOD
//        <0=> 0: Fixed = Fixed
//        <1=> 1: Incremented = Incremented
//    </combo>
//  </item>
//  


// --------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL23_DMACR_RPTSEL  ------------------------
// SVD Line: 10510

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL23_DMACR_RPTSEL
//    <name> RPTSEL </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x20000190) \nRepeat area selection\n0 : destination = Transfer destination is the repeat area\n1 : source = Transfer source is the repeat area </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL23_DMACR ) </loc>
//      <o.1..1> RPTSEL
//        <0=> 0: destination = Transfer destination is the repeat area
//        <1=> 1: source = Transfer source is the repeat area
//    </combo>
//  </item>
//  


// ---------------------  Field Item: DMAVEC_CTRL_CTRL_CTRL23_DMACR_MODE  -------------------------
// SVD Line: 10528

//  <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL23_DMACR_MODE
//    <name> MODE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x20000190) \nTransfer mode selection\n0 : Normal = Normal mode\n1 : Repeat = Repeat mode </i>
//    <combo> 
//      <loc> ( (unsigned short) DMAVEC_CTRL_CTRL_CTRL23_DMACR ) </loc>
//      <o.0..0> MODE
//        <0=> 0: Normal = Normal mode
//        <1=> 1: Repeat = Repeat mode
//    </combo>
//  </item>
//  


// ----------------------  Register RTree: DMAVEC_CTRL_CTRL_CTRL23_DMACR  -------------------------
// SVD Line: 10409

//  <rtree> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL23_DMACR
//    <name> DMACR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x20000190) DMA Control register </i>
//    <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL23_DMACR >> 0) & 0xFFFF), ((DMAVEC_CTRL_CTRL_CTRL23_DMACR = (DMAVEC_CTRL_CTRL_CTRL23_DMACR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL23_DMACR_SZ </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL23_DMACR_RPTINT </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL23_DMACR_CHNE </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL23_DMACR_DAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL23_DMACR_SAMOD </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL23_DMACR_RPTSEL </item>
//    <item> SFDITEM_FIELD__DMAVEC_CTRL_CTRL_CTRL23_DMACR_MODE </item>
//  </rtree>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL23_DMBLS  ----------------------
// SVD Line: 10548

unsigned short DMAVEC_CTRL_CTRL_CTRL23_DMBLS __AT (0x20000192);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL23_DMBLS  --------------------------
// SVD Line: 10548

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL23_DMBLS
//    <name> DMBLS </name>
//    <i> [Bits 15..0] RW (@ 0x20000192) DMA Block Size register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL23_DMBLS >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL23_DMBLS = (DMAVEC_CTRL_CTRL_CTRL23_DMBLS & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL23_DMACT  ----------------------
// SVD Line: 10554

unsigned short DMAVEC_CTRL_CTRL_CTRL23_DMACT __AT (0x20000194);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL23_DMACT  --------------------------
// SVD Line: 10554

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL23_DMACT
//    <name> DMACT </name>
//    <i> [Bits 15..0] RW (@ 0x20000194) DMA Transfer Count register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL23_DMACT >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL23_DMACT = (DMAVEC_CTRL_CTRL_CTRL23_DMACT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL23_DMRLD  ----------------------
// SVD Line: 10560

unsigned short DMAVEC_CTRL_CTRL_CTRL23_DMRLD __AT (0x20000196);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL23_DMRLD  --------------------------
// SVD Line: 10560

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL23_DMRLD
//    <name> DMRLD </name>
//    <i> [Bits 15..0] RW (@ 0x20000196) DMA Transfer Count Reload register </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAVEC_CTRL_CTRL_CTRL23_DMRLD >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL23_DMRLD = (DMAVEC_CTRL_CTRL_CTRL23_DMRLD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL23_DMSAR  ----------------------
// SVD Line: 10566

unsigned int DMAVEC_CTRL_CTRL_CTRL23_DMSAR __AT (0x20000198);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL23_DMSAR  --------------------------
// SVD Line: 10566

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL23_DMSAR
//    <name> DMSAR </name>
//    <i> [Bits 31..0] RW (@ 0x20000198) DMA Source Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL23_DMSAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL23_DMSAR = (DMAVEC_CTRL_CTRL_CTRL23_DMSAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Register Item Address: DMAVEC_CTRL_CTRL_CTRL23_DMDAR  ----------------------
// SVD Line: 10572

unsigned int DMAVEC_CTRL_CTRL_CTRL23_DMDAR __AT (0x2000019C);



// ----------------------  Register Item: DMAVEC_CTRL_CTRL_CTRL23_DMDAR  --------------------------
// SVD Line: 10572

//  <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL23_DMDAR
//    <name> DMDAR </name>
//    <i> [Bits 31..0] RW (@ 0x2000019C) DMA Destination Address register </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAVEC_CTRL_CTRL_CTRL23_DMDAR >> 0) & 0xFFFFFFFF), ((DMAVEC_CTRL_CTRL_CTRL23_DMDAR = (DMAVEC_CTRL_CTRL_CTRL23_DMDAR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Cluster ITree: DMAVEC_CTRL_CTRL_CTRL23  -----------------------------
// SVD Line: 10403

//  <itree> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL23
//    <name> [23] </name>
//    <i> DMA control data area </i>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL23_DMACR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL23_DMBLS </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL23_DMACT </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL23_DMRLD </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL23_DMSAR </item>
//    <item> SFDITEM_REG__DMAVEC_CTRL_CTRL_CTRL23_DMDAR </item>
//  </itree>
//  


// ----------------------------  Cluster Array ITree: DMAVEC_CTRL  --------------------------------
// SVD Line: 10403

//  <itree> SFDITEM_CLUST__DMAVEC_CTRL
//    <name> CTRL </name>
//    <i> DMA control data area </i>
//    <item> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL0 </item>
//    <item> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL1 </item>
//    <item> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL2 </item>
//    <item> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL3 </item>
//    <item> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL4 </item>
//    <item> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL5 </item>
//    <item> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL6 </item>
//    <item> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL7 </item>
//    <item> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL8 </item>
//    <item> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL9 </item>
//    <item> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL10 </item>
//    <item> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL11 </item>
//    <item> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL12 </item>
//    <item> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL13 </item>
//    <item> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL14 </item>
//    <item> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL15 </item>
//    <item> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL16 </item>
//    <item> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL17 </item>
//    <item> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL18 </item>
//    <item> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL19 </item>
//    <item> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL20 </item>
//    <item> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL21 </item>
//    <item> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL22 </item>
//    <item> SFDITEM_CLUST__DMAVEC_CTRL_CTRL_CTRL23 </item>
//  </itree>
//  


// ---------------------------------  Peripheral View: DMAVEC  ------------------------------------
// SVD Line: 10378

//  <view> DMAVEC
//    <name> DMAVEC </name>
//    <item> SFDITEM_REG__DMAVEC_VEC </item>
//    <item> SFDITEM_CLUST__DMAVEC_CTRL </item>
//  </view>
//  


// ---------------------------  Register Item Address: ELC_ELSELR00  ------------------------------
// SVD Line: 10600

unsigned char ELC_ELSELR00 __AT (0x40043400);



// -------------------------------  Register Item: ELC_ELSELR00  ----------------------------------
// SVD Line: 10600

//  <item> SFDITEM_REG__ELC_ELSELR00
//    <name> ELSELR00 </name>
//    <i> [Bits 7..0] RW (@ 0x40043400) Event output destination select register 00 </i>
//    <edit> 
//      <loc> ( (unsigned char)((ELC_ELSELR00 >> 0) & 0xFFFFFFFF), ((ELC_ELSELR00 = (ELC_ELSELR00 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: ELC_ELSELR01  ------------------------------
// SVD Line: 10608

unsigned char ELC_ELSELR01 __AT (0x40043401);



// -------------------------------  Register Item: ELC_ELSELR01  ----------------------------------
// SVD Line: 10608

//  <item> SFDITEM_REG__ELC_ELSELR01
//    <name> ELSELR01 </name>
//    <i> [Bits 7..0] RW (@ 0x40043401) Event output destination select register 01 </i>
//    <edit> 
//      <loc> ( (unsigned char)((ELC_ELSELR01 >> 0) & 0xFFFFFFFF), ((ELC_ELSELR01 = (ELC_ELSELR01 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: ELC_ELSELR02  ------------------------------
// SVD Line: 10614

unsigned char ELC_ELSELR02 __AT (0x40043402);



// -------------------------------  Register Item: ELC_ELSELR02  ----------------------------------
// SVD Line: 10614

//  <item> SFDITEM_REG__ELC_ELSELR02
//    <name> ELSELR02 </name>
//    <i> [Bits 7..0] RW (@ 0x40043402) Event output destination select register 02 </i>
//    <edit> 
//      <loc> ( (unsigned char)((ELC_ELSELR02 >> 0) & 0xFFFFFFFF), ((ELC_ELSELR02 = (ELC_ELSELR02 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: ELC_ELSELR03  ------------------------------
// SVD Line: 10620

unsigned char ELC_ELSELR03 __AT (0x40043403);



// -------------------------------  Register Item: ELC_ELSELR03  ----------------------------------
// SVD Line: 10620

//  <item> SFDITEM_REG__ELC_ELSELR03
//    <name> ELSELR03 </name>
//    <i> [Bits 7..0] RW (@ 0x40043403) Event output destination select register 03 </i>
//    <edit> 
//      <loc> ( (unsigned char)((ELC_ELSELR03 >> 0) & 0xFFFFFFFF), ((ELC_ELSELR03 = (ELC_ELSELR03 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: ELC_ELSELR04  ------------------------------
// SVD Line: 10626

unsigned char ELC_ELSELR04 __AT (0x40043404);



// -------------------------------  Register Item: ELC_ELSELR04  ----------------------------------
// SVD Line: 10626

//  <item> SFDITEM_REG__ELC_ELSELR04
//    <name> ELSELR04 </name>
//    <i> [Bits 7..0] RW (@ 0x40043404) Event output destination select register 04 </i>
//    <edit> 
//      <loc> ( (unsigned char)((ELC_ELSELR04 >> 0) & 0xFFFFFFFF), ((ELC_ELSELR04 = (ELC_ELSELR04 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: ELC_ELSELR05  ------------------------------
// SVD Line: 10632

unsigned char ELC_ELSELR05 __AT (0x40043405);



// -------------------------------  Register Item: ELC_ELSELR05  ----------------------------------
// SVD Line: 10632

//  <item> SFDITEM_REG__ELC_ELSELR05
//    <name> ELSELR05 </name>
//    <i> [Bits 7..0] RW (@ 0x40043405) Event output destination select register 05 </i>
//    <edit> 
//      <loc> ( (unsigned char)((ELC_ELSELR05 >> 0) & 0xFFFFFFFF), ((ELC_ELSELR05 = (ELC_ELSELR05 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: ELC_ELSELR06  ------------------------------
// SVD Line: 10638

unsigned char ELC_ELSELR06 __AT (0x40043406);



// -------------------------------  Register Item: ELC_ELSELR06  ----------------------------------
// SVD Line: 10638

//  <item> SFDITEM_REG__ELC_ELSELR06
//    <name> ELSELR06 </name>
//    <i> [Bits 7..0] RW (@ 0x40043406) Event output destination select register 06 </i>
//    <edit> 
//      <loc> ( (unsigned char)((ELC_ELSELR06 >> 0) & 0xFFFFFFFF), ((ELC_ELSELR06 = (ELC_ELSELR06 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: ELC_ELSELR07  ------------------------------
// SVD Line: 10644

unsigned char ELC_ELSELR07 __AT (0x40043407);



// -------------------------------  Register Item: ELC_ELSELR07  ----------------------------------
// SVD Line: 10644

//  <item> SFDITEM_REG__ELC_ELSELR07
//    <name> ELSELR07 </name>
//    <i> [Bits 7..0] RW (@ 0x40043407) Event output destination select register 07 </i>
//    <edit> 
//      <loc> ( (unsigned char)((ELC_ELSELR07 >> 0) & 0xFFFFFFFF), ((ELC_ELSELR07 = (ELC_ELSELR07 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: ELC_ELSELR08  ------------------------------
// SVD Line: 10650

unsigned char ELC_ELSELR08 __AT (0x40043408);



// -------------------------------  Register Item: ELC_ELSELR08  ----------------------------------
// SVD Line: 10650

//  <item> SFDITEM_REG__ELC_ELSELR08
//    <name> ELSELR08 </name>
//    <i> [Bits 7..0] RW (@ 0x40043408) Event output destination select register 08 </i>
//    <edit> 
//      <loc> ( (unsigned char)((ELC_ELSELR08 >> 0) & 0xFFFFFFFF), ((ELC_ELSELR08 = (ELC_ELSELR08 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: ELC_ELSELR09  ------------------------------
// SVD Line: 10656

unsigned char ELC_ELSELR09 __AT (0x40043409);



// -------------------------------  Register Item: ELC_ELSELR09  ----------------------------------
// SVD Line: 10656

//  <item> SFDITEM_REG__ELC_ELSELR09
//    <name> ELSELR09 </name>
//    <i> [Bits 7..0] RW (@ 0x40043409) Event output destination select register 09 </i>
//    <edit> 
//      <loc> ( (unsigned char)((ELC_ELSELR09 >> 0) & 0xFFFFFFFF), ((ELC_ELSELR09 = (ELC_ELSELR09 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: ELC_ELSELR10  ------------------------------
// SVD Line: 10662

unsigned char ELC_ELSELR10 __AT (0x4004340A);



// -------------------------------  Register Item: ELC_ELSELR10  ----------------------------------
// SVD Line: 10662

//  <item> SFDITEM_REG__ELC_ELSELR10
//    <name> ELSELR10 </name>
//    <i> [Bits 7..0] RW (@ 0x4004340A) Event output destination select register 10 </i>
//    <edit> 
//      <loc> ( (unsigned char)((ELC_ELSELR10 >> 0) & 0xFFFFFFFF), ((ELC_ELSELR10 = (ELC_ELSELR10 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: ELC_ELSELR11  ------------------------------
// SVD Line: 10668

unsigned char ELC_ELSELR11 __AT (0x4004340B);



// -------------------------------  Register Item: ELC_ELSELR11  ----------------------------------
// SVD Line: 10668

//  <item> SFDITEM_REG__ELC_ELSELR11
//    <name> ELSELR11 </name>
//    <i> [Bits 7..0] RW (@ 0x4004340B) Event output destination select register 11 </i>
//    <edit> 
//      <loc> ( (unsigned char)((ELC_ELSELR11 >> 0) & 0xFFFFFFFF), ((ELC_ELSELR11 = (ELC_ELSELR11 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: ELC_ELSELR12  ------------------------------
// SVD Line: 10674

unsigned char ELC_ELSELR12 __AT (0x4004340C);



// -------------------------------  Register Item: ELC_ELSELR12  ----------------------------------
// SVD Line: 10674

//  <item> SFDITEM_REG__ELC_ELSELR12
//    <name> ELSELR12 </name>
//    <i> [Bits 7..0] RW (@ 0x4004340C) Event output destination select register 12 </i>
//    <edit> 
//      <loc> ( (unsigned char)((ELC_ELSELR12 >> 0) & 0xFFFFFFFF), ((ELC_ELSELR12 = (ELC_ELSELR12 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: ELC_ELSELR13  ------------------------------
// SVD Line: 10680

unsigned char ELC_ELSELR13 __AT (0x4004340D);



// -------------------------------  Register Item: ELC_ELSELR13  ----------------------------------
// SVD Line: 10680

//  <item> SFDITEM_REG__ELC_ELSELR13
//    <name> ELSELR13 </name>
//    <i> [Bits 7..0] RW (@ 0x4004340D) Event output destination select register 13 </i>
//    <edit> 
//      <loc> ( (unsigned char)((ELC_ELSELR13 >> 0) & 0xFFFFFFFF), ((ELC_ELSELR13 = (ELC_ELSELR13 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: ELC_ELSELR14  ------------------------------
// SVD Line: 10686

unsigned char ELC_ELSELR14 __AT (0x4004340E);



// -------------------------------  Register Item: ELC_ELSELR14  ----------------------------------
// SVD Line: 10686

//  <item> SFDITEM_REG__ELC_ELSELR14
//    <name> ELSELR14 </name>
//    <i> [Bits 7..0] RW (@ 0x4004340E) Event output destination select register 14 </i>
//    <edit> 
//      <loc> ( (unsigned char)((ELC_ELSELR14 >> 0) & 0xFFFFFFFF), ((ELC_ELSELR14 = (ELC_ELSELR14 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------------  Peripheral View: ELC  --------------------------------------
// SVD Line: 10584

//  <view> ELC
//    <name> ELC </name>
//    <item> SFDITEM_REG__ELC_ELSELR00 </item>
//    <item> SFDITEM_REG__ELC_ELSELR01 </item>
//    <item> SFDITEM_REG__ELC_ELSELR02 </item>
//    <item> SFDITEM_REG__ELC_ELSELR03 </item>
//    <item> SFDITEM_REG__ELC_ELSELR04 </item>
//    <item> SFDITEM_REG__ELC_ELSELR05 </item>
//    <item> SFDITEM_REG__ELC_ELSELR06 </item>
//    <item> SFDITEM_REG__ELC_ELSELR07 </item>
//    <item> SFDITEM_REG__ELC_ELSELR08 </item>
//    <item> SFDITEM_REG__ELC_ELSELR09 </item>
//    <item> SFDITEM_REG__ELC_ELSELR10 </item>
//    <item> SFDITEM_REG__ELC_ELSELR11 </item>
//    <item> SFDITEM_REG__ELC_ELSELR12 </item>
//    <item> SFDITEM_REG__ELC_ELSELR13 </item>
//    <item> SFDITEM_REG__ELC_ELSELR14 </item>
//  </view>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF0_IFL  ----------------------------
// SVD Line: 10720

unsigned char INT_IF_IF_IF0_IFL __AT (0x40006000);



// ----------------------------  Register Item: INT_IF_IF_IF0_IFL  --------------------------------
// SVD Line: 10720

//  <item> SFDITEM_REG__INT_IF_IF_IF0_IFL
//    <name> IFL </name>
//    <i> [Bits 7..0] RW (@ 0x40006000) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF0_IFL >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF0_IFL = (INT_IF_IF_IF0_IFL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_IF_IF_IF0  ----------------------------------
// SVD Line: 10712

//  <itree> SFDITEM_CLUST__INT_IF_IF_IF0
//    <name> [0] </name>
//    <i> Interrupt flag register </i>
//    <item> SFDITEM_REG__INT_IF_IF_IF0_IFL </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF1_IFL  ----------------------------
// SVD Line: 10720

unsigned char INT_IF_IF_IF1_IFL __AT (0x40006004);



// ----------------------------  Register Item: INT_IF_IF_IF1_IFL  --------------------------------
// SVD Line: 10720

//  <item> SFDITEM_REG__INT_IF_IF_IF1_IFL
//    <name> IFL </name>
//    <i> [Bits 7..0] RW (@ 0x40006004) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF1_IFL >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF1_IFL = (INT_IF_IF_IF1_IFL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_IF_IF_IF1  ----------------------------------
// SVD Line: 10712

//  <itree> SFDITEM_CLUST__INT_IF_IF_IF1
//    <name> [1] </name>
//    <i> Interrupt flag register </i>
//    <item> SFDITEM_REG__INT_IF_IF_IF1_IFL </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF2_IFL  ----------------------------
// SVD Line: 10720

unsigned char INT_IF_IF_IF2_IFL __AT (0x40006008);



// ----------------------------  Register Item: INT_IF_IF_IF2_IFL  --------------------------------
// SVD Line: 10720

//  <item> SFDITEM_REG__INT_IF_IF_IF2_IFL
//    <name> IFL </name>
//    <i> [Bits 7..0] RW (@ 0x40006008) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF2_IFL >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF2_IFL = (INT_IF_IF_IF2_IFL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_IF_IF_IF2  ----------------------------------
// SVD Line: 10712

//  <itree> SFDITEM_CLUST__INT_IF_IF_IF2
//    <name> [2] </name>
//    <i> Interrupt flag register </i>
//    <item> SFDITEM_REG__INT_IF_IF_IF2_IFL </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF3_IFL  ----------------------------
// SVD Line: 10720

unsigned char INT_IF_IF_IF3_IFL __AT (0x4000600C);



// ----------------------------  Register Item: INT_IF_IF_IF3_IFL  --------------------------------
// SVD Line: 10720

//  <item> SFDITEM_REG__INT_IF_IF_IF3_IFL
//    <name> IFL </name>
//    <i> [Bits 7..0] RW (@ 0x4000600C) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF3_IFL >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF3_IFL = (INT_IF_IF_IF3_IFL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_IF_IF_IF3  ----------------------------------
// SVD Line: 10712

//  <itree> SFDITEM_CLUST__INT_IF_IF_IF3
//    <name> [3] </name>
//    <i> Interrupt flag register </i>
//    <item> SFDITEM_REG__INT_IF_IF_IF3_IFL </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF4_IFL  ----------------------------
// SVD Line: 10720

unsigned char INT_IF_IF_IF4_IFL __AT (0x40006010);



// ----------------------------  Register Item: INT_IF_IF_IF4_IFL  --------------------------------
// SVD Line: 10720

//  <item> SFDITEM_REG__INT_IF_IF_IF4_IFL
//    <name> IFL </name>
//    <i> [Bits 7..0] RW (@ 0x40006010) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF4_IFL >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF4_IFL = (INT_IF_IF_IF4_IFL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_IF_IF_IF4  ----------------------------------
// SVD Line: 10712

//  <itree> SFDITEM_CLUST__INT_IF_IF_IF4
//    <name> [4] </name>
//    <i> Interrupt flag register </i>
//    <item> SFDITEM_REG__INT_IF_IF_IF4_IFL </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF5_IFL  ----------------------------
// SVD Line: 10720

unsigned char INT_IF_IF_IF5_IFL __AT (0x40006014);



// ----------------------------  Register Item: INT_IF_IF_IF5_IFL  --------------------------------
// SVD Line: 10720

//  <item> SFDITEM_REG__INT_IF_IF_IF5_IFL
//    <name> IFL </name>
//    <i> [Bits 7..0] RW (@ 0x40006014) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF5_IFL >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF5_IFL = (INT_IF_IF_IF5_IFL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_IF_IF_IF5  ----------------------------------
// SVD Line: 10712

//  <itree> SFDITEM_CLUST__INT_IF_IF_IF5
//    <name> [5] </name>
//    <i> Interrupt flag register </i>
//    <item> SFDITEM_REG__INT_IF_IF_IF5_IFL </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF6_IFL  ----------------------------
// SVD Line: 10720

unsigned char INT_IF_IF_IF6_IFL __AT (0x40006018);



// ----------------------------  Register Item: INT_IF_IF_IF6_IFL  --------------------------------
// SVD Line: 10720

//  <item> SFDITEM_REG__INT_IF_IF_IF6_IFL
//    <name> IFL </name>
//    <i> [Bits 7..0] RW (@ 0x40006018) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF6_IFL >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF6_IFL = (INT_IF_IF_IF6_IFL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_IF_IF_IF6  ----------------------------------
// SVD Line: 10712

//  <itree> SFDITEM_CLUST__INT_IF_IF_IF6
//    <name> [6] </name>
//    <i> Interrupt flag register </i>
//    <item> SFDITEM_REG__INT_IF_IF_IF6_IFL </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF7_IFL  ----------------------------
// SVD Line: 10720

unsigned char INT_IF_IF_IF7_IFL __AT (0x4000601C);



// ----------------------------  Register Item: INT_IF_IF_IF7_IFL  --------------------------------
// SVD Line: 10720

//  <item> SFDITEM_REG__INT_IF_IF_IF7_IFL
//    <name> IFL </name>
//    <i> [Bits 7..0] RW (@ 0x4000601C) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF7_IFL >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF7_IFL = (INT_IF_IF_IF7_IFL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_IF_IF_IF7  ----------------------------------
// SVD Line: 10712

//  <itree> SFDITEM_CLUST__INT_IF_IF_IF7
//    <name> [7] </name>
//    <i> Interrupt flag register </i>
//    <item> SFDITEM_REG__INT_IF_IF_IF7_IFL </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF8_IFL  ----------------------------
// SVD Line: 10720

unsigned char INT_IF_IF_IF8_IFL __AT (0x40006020);



// ----------------------------  Register Item: INT_IF_IF_IF8_IFL  --------------------------------
// SVD Line: 10720

//  <item> SFDITEM_REG__INT_IF_IF_IF8_IFL
//    <name> IFL </name>
//    <i> [Bits 7..0] RW (@ 0x40006020) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF8_IFL >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF8_IFL = (INT_IF_IF_IF8_IFL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_IF_IF_IF8  ----------------------------------
// SVD Line: 10712

//  <itree> SFDITEM_CLUST__INT_IF_IF_IF8
//    <name> [8] </name>
//    <i> Interrupt flag register </i>
//    <item> SFDITEM_REG__INT_IF_IF_IF8_IFL </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF9_IFL  ----------------------------
// SVD Line: 10720

unsigned char INT_IF_IF_IF9_IFL __AT (0x40006024);



// ----------------------------  Register Item: INT_IF_IF_IF9_IFL  --------------------------------
// SVD Line: 10720

//  <item> SFDITEM_REG__INT_IF_IF_IF9_IFL
//    <name> IFL </name>
//    <i> [Bits 7..0] RW (@ 0x40006024) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF9_IFL >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF9_IFL = (INT_IF_IF_IF9_IFL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_IF_IF_IF9  ----------------------------------
// SVD Line: 10712

//  <itree> SFDITEM_CLUST__INT_IF_IF_IF9
//    <name> [9] </name>
//    <i> Interrupt flag register </i>
//    <item> SFDITEM_REG__INT_IF_IF_IF9_IFL </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF10_IFL  ---------------------------
// SVD Line: 10720

unsigned char INT_IF_IF_IF10_IFL __AT (0x40006028);



// ----------------------------  Register Item: INT_IF_IF_IF10_IFL  -------------------------------
// SVD Line: 10720

//  <item> SFDITEM_REG__INT_IF_IF_IF10_IFL
//    <name> IFL </name>
//    <i> [Bits 7..0] RW (@ 0x40006028) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF10_IFL >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF10_IFL = (INT_IF_IF_IF10_IFL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_IF_IF_IF10  ---------------------------------
// SVD Line: 10712

//  <itree> SFDITEM_CLUST__INT_IF_IF_IF10
//    <name> [10] </name>
//    <i> Interrupt flag register </i>
//    <item> SFDITEM_REG__INT_IF_IF_IF10_IFL </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF11_IFL  ---------------------------
// SVD Line: 10720

unsigned char INT_IF_IF_IF11_IFL __AT (0x4000602C);



// ----------------------------  Register Item: INT_IF_IF_IF11_IFL  -------------------------------
// SVD Line: 10720

//  <item> SFDITEM_REG__INT_IF_IF_IF11_IFL
//    <name> IFL </name>
//    <i> [Bits 7..0] RW (@ 0x4000602C) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF11_IFL >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF11_IFL = (INT_IF_IF_IF11_IFL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_IF_IF_IF11  ---------------------------------
// SVD Line: 10712

//  <itree> SFDITEM_CLUST__INT_IF_IF_IF11
//    <name> [11] </name>
//    <i> Interrupt flag register </i>
//    <item> SFDITEM_REG__INT_IF_IF_IF11_IFL </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF12_IFL  ---------------------------
// SVD Line: 10720

unsigned char INT_IF_IF_IF12_IFL __AT (0x40006030);



// ----------------------------  Register Item: INT_IF_IF_IF12_IFL  -------------------------------
// SVD Line: 10720

//  <item> SFDITEM_REG__INT_IF_IF_IF12_IFL
//    <name> IFL </name>
//    <i> [Bits 7..0] RW (@ 0x40006030) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF12_IFL >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF12_IFL = (INT_IF_IF_IF12_IFL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_IF_IF_IF12  ---------------------------------
// SVD Line: 10712

//  <itree> SFDITEM_CLUST__INT_IF_IF_IF12
//    <name> [12] </name>
//    <i> Interrupt flag register </i>
//    <item> SFDITEM_REG__INT_IF_IF_IF12_IFL </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF13_IFL  ---------------------------
// SVD Line: 10720

unsigned char INT_IF_IF_IF13_IFL __AT (0x40006034);



// ----------------------------  Register Item: INT_IF_IF_IF13_IFL  -------------------------------
// SVD Line: 10720

//  <item> SFDITEM_REG__INT_IF_IF_IF13_IFL
//    <name> IFL </name>
//    <i> [Bits 7..0] RW (@ 0x40006034) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF13_IFL >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF13_IFL = (INT_IF_IF_IF13_IFL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_IF_IF_IF13  ---------------------------------
// SVD Line: 10712

//  <itree> SFDITEM_CLUST__INT_IF_IF_IF13
//    <name> [13] </name>
//    <i> Interrupt flag register </i>
//    <item> SFDITEM_REG__INT_IF_IF_IF13_IFL </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF14_IFL  ---------------------------
// SVD Line: 10720

unsigned char INT_IF_IF_IF14_IFL __AT (0x40006038);



// ----------------------------  Register Item: INT_IF_IF_IF14_IFL  -------------------------------
// SVD Line: 10720

//  <item> SFDITEM_REG__INT_IF_IF_IF14_IFL
//    <name> IFL </name>
//    <i> [Bits 7..0] RW (@ 0x40006038) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF14_IFL >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF14_IFL = (INT_IF_IF_IF14_IFL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_IF_IF_IF14  ---------------------------------
// SVD Line: 10712

//  <itree> SFDITEM_CLUST__INT_IF_IF_IF14
//    <name> [14] </name>
//    <i> Interrupt flag register </i>
//    <item> SFDITEM_REG__INT_IF_IF_IF14_IFL </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF15_IFL  ---------------------------
// SVD Line: 10720

unsigned char INT_IF_IF_IF15_IFL __AT (0x4000603C);



// ----------------------------  Register Item: INT_IF_IF_IF15_IFL  -------------------------------
// SVD Line: 10720

//  <item> SFDITEM_REG__INT_IF_IF_IF15_IFL
//    <name> IFL </name>
//    <i> [Bits 7..0] RW (@ 0x4000603C) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF15_IFL >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF15_IFL = (INT_IF_IF_IF15_IFL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_IF_IF_IF15  ---------------------------------
// SVD Line: 10712

//  <itree> SFDITEM_CLUST__INT_IF_IF_IF15
//    <name> [15] </name>
//    <i> Interrupt flag register </i>
//    <item> SFDITEM_REG__INT_IF_IF_IF15_IFL </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF16_IFL  ---------------------------
// SVD Line: 10720

unsigned char INT_IF_IF_IF16_IFL __AT (0x40006040);



// ----------------------------  Register Item: INT_IF_IF_IF16_IFL  -------------------------------
// SVD Line: 10720

//  <item> SFDITEM_REG__INT_IF_IF_IF16_IFL
//    <name> IFL </name>
//    <i> [Bits 7..0] RW (@ 0x40006040) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF16_IFL >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF16_IFL = (INT_IF_IF_IF16_IFL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_IF_IF_IF16  ---------------------------------
// SVD Line: 10712

//  <itree> SFDITEM_CLUST__INT_IF_IF_IF16
//    <name> [16] </name>
//    <i> Interrupt flag register </i>
//    <item> SFDITEM_REG__INT_IF_IF_IF16_IFL </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF17_IFL  ---------------------------
// SVD Line: 10720

unsigned char INT_IF_IF_IF17_IFL __AT (0x40006044);



// ----------------------------  Register Item: INT_IF_IF_IF17_IFL  -------------------------------
// SVD Line: 10720

//  <item> SFDITEM_REG__INT_IF_IF_IF17_IFL
//    <name> IFL </name>
//    <i> [Bits 7..0] RW (@ 0x40006044) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF17_IFL >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF17_IFL = (INT_IF_IF_IF17_IFL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_IF_IF_IF17  ---------------------------------
// SVD Line: 10712

//  <itree> SFDITEM_CLUST__INT_IF_IF_IF17
//    <name> [17] </name>
//    <i> Interrupt flag register </i>
//    <item> SFDITEM_REG__INT_IF_IF_IF17_IFL </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF18_IFL  ---------------------------
// SVD Line: 10720

unsigned char INT_IF_IF_IF18_IFL __AT (0x40006048);



// ----------------------------  Register Item: INT_IF_IF_IF18_IFL  -------------------------------
// SVD Line: 10720

//  <item> SFDITEM_REG__INT_IF_IF_IF18_IFL
//    <name> IFL </name>
//    <i> [Bits 7..0] RW (@ 0x40006048) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF18_IFL >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF18_IFL = (INT_IF_IF_IF18_IFL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_IF_IF_IF18  ---------------------------------
// SVD Line: 10712

//  <itree> SFDITEM_CLUST__INT_IF_IF_IF18
//    <name> [18] </name>
//    <i> Interrupt flag register </i>
//    <item> SFDITEM_REG__INT_IF_IF_IF18_IFL </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF19_IFL  ---------------------------
// SVD Line: 10720

unsigned char INT_IF_IF_IF19_IFL __AT (0x4000604C);



// ----------------------------  Register Item: INT_IF_IF_IF19_IFL  -------------------------------
// SVD Line: 10720

//  <item> SFDITEM_REG__INT_IF_IF_IF19_IFL
//    <name> IFL </name>
//    <i> [Bits 7..0] RW (@ 0x4000604C) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF19_IFL >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF19_IFL = (INT_IF_IF_IF19_IFL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_IF_IF_IF19  ---------------------------------
// SVD Line: 10712

//  <itree> SFDITEM_CLUST__INT_IF_IF_IF19
//    <name> [19] </name>
//    <i> Interrupt flag register </i>
//    <item> SFDITEM_REG__INT_IF_IF_IF19_IFL </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF20_IFL  ---------------------------
// SVD Line: 10720

unsigned char INT_IF_IF_IF20_IFL __AT (0x40006050);



// ----------------------------  Register Item: INT_IF_IF_IF20_IFL  -------------------------------
// SVD Line: 10720

//  <item> SFDITEM_REG__INT_IF_IF_IF20_IFL
//    <name> IFL </name>
//    <i> [Bits 7..0] RW (@ 0x40006050) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF20_IFL >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF20_IFL = (INT_IF_IF_IF20_IFL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_IF_IF_IF20  ---------------------------------
// SVD Line: 10712

//  <itree> SFDITEM_CLUST__INT_IF_IF_IF20
//    <name> [20] </name>
//    <i> Interrupt flag register </i>
//    <item> SFDITEM_REG__INT_IF_IF_IF20_IFL </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF21_IFL  ---------------------------
// SVD Line: 10720

unsigned char INT_IF_IF_IF21_IFL __AT (0x40006054);



// ----------------------------  Register Item: INT_IF_IF_IF21_IFL  -------------------------------
// SVD Line: 10720

//  <item> SFDITEM_REG__INT_IF_IF_IF21_IFL
//    <name> IFL </name>
//    <i> [Bits 7..0] RW (@ 0x40006054) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF21_IFL >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF21_IFL = (INT_IF_IF_IF21_IFL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_IF_IF_IF21  ---------------------------------
// SVD Line: 10712

//  <itree> SFDITEM_CLUST__INT_IF_IF_IF21
//    <name> [21] </name>
//    <i> Interrupt flag register </i>
//    <item> SFDITEM_REG__INT_IF_IF_IF21_IFL </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF22_IFL  ---------------------------
// SVD Line: 10720

unsigned char INT_IF_IF_IF22_IFL __AT (0x40006058);



// ----------------------------  Register Item: INT_IF_IF_IF22_IFL  -------------------------------
// SVD Line: 10720

//  <item> SFDITEM_REG__INT_IF_IF_IF22_IFL
//    <name> IFL </name>
//    <i> [Bits 7..0] RW (@ 0x40006058) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF22_IFL >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF22_IFL = (INT_IF_IF_IF22_IFL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_IF_IF_IF22  ---------------------------------
// SVD Line: 10712

//  <itree> SFDITEM_CLUST__INT_IF_IF_IF22
//    <name> [22] </name>
//    <i> Interrupt flag register </i>
//    <item> SFDITEM_REG__INT_IF_IF_IF22_IFL </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF23_IFL  ---------------------------
// SVD Line: 10720

unsigned char INT_IF_IF_IF23_IFL __AT (0x4000605C);



// ----------------------------  Register Item: INT_IF_IF_IF23_IFL  -------------------------------
// SVD Line: 10720

//  <item> SFDITEM_REG__INT_IF_IF_IF23_IFL
//    <name> IFL </name>
//    <i> [Bits 7..0] RW (@ 0x4000605C) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF23_IFL >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF23_IFL = (INT_IF_IF_IF23_IFL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_IF_IF_IF23  ---------------------------------
// SVD Line: 10712

//  <itree> SFDITEM_CLUST__INT_IF_IF_IF23
//    <name> [23] </name>
//    <i> Interrupt flag register </i>
//    <item> SFDITEM_REG__INT_IF_IF_IF23_IFL </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF24_IFL  ---------------------------
// SVD Line: 10720

unsigned char INT_IF_IF_IF24_IFL __AT (0x40006060);



// ----------------------------  Register Item: INT_IF_IF_IF24_IFL  -------------------------------
// SVD Line: 10720

//  <item> SFDITEM_REG__INT_IF_IF_IF24_IFL
//    <name> IFL </name>
//    <i> [Bits 7..0] RW (@ 0x40006060) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF24_IFL >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF24_IFL = (INT_IF_IF_IF24_IFL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_IF_IF_IF24  ---------------------------------
// SVD Line: 10712

//  <itree> SFDITEM_CLUST__INT_IF_IF_IF24
//    <name> [24] </name>
//    <i> Interrupt flag register </i>
//    <item> SFDITEM_REG__INT_IF_IF_IF24_IFL </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF25_IFL  ---------------------------
// SVD Line: 10720

unsigned char INT_IF_IF_IF25_IFL __AT (0x40006064);



// ----------------------------  Register Item: INT_IF_IF_IF25_IFL  -------------------------------
// SVD Line: 10720

//  <item> SFDITEM_REG__INT_IF_IF_IF25_IFL
//    <name> IFL </name>
//    <i> [Bits 7..0] RW (@ 0x40006064) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF25_IFL >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF25_IFL = (INT_IF_IF_IF25_IFL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_IF_IF_IF25  ---------------------------------
// SVD Line: 10712

//  <itree> SFDITEM_CLUST__INT_IF_IF_IF25
//    <name> [25] </name>
//    <i> Interrupt flag register </i>
//    <item> SFDITEM_REG__INT_IF_IF_IF25_IFL </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF26_IFL  ---------------------------
// SVD Line: 10720

unsigned char INT_IF_IF_IF26_IFL __AT (0x40006068);



// ----------------------------  Register Item: INT_IF_IF_IF26_IFL  -------------------------------
// SVD Line: 10720

//  <item> SFDITEM_REG__INT_IF_IF_IF26_IFL
//    <name> IFL </name>
//    <i> [Bits 7..0] RW (@ 0x40006068) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF26_IFL >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF26_IFL = (INT_IF_IF_IF26_IFL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_IF_IF_IF26  ---------------------------------
// SVD Line: 10712

//  <itree> SFDITEM_CLUST__INT_IF_IF_IF26
//    <name> [26] </name>
//    <i> Interrupt flag register </i>
//    <item> SFDITEM_REG__INT_IF_IF_IF26_IFL </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF27_IFL  ---------------------------
// SVD Line: 10720

unsigned char INT_IF_IF_IF27_IFL __AT (0x4000606C);



// ----------------------------  Register Item: INT_IF_IF_IF27_IFL  -------------------------------
// SVD Line: 10720

//  <item> SFDITEM_REG__INT_IF_IF_IF27_IFL
//    <name> IFL </name>
//    <i> [Bits 7..0] RW (@ 0x4000606C) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF27_IFL >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF27_IFL = (INT_IF_IF_IF27_IFL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_IF_IF_IF27  ---------------------------------
// SVD Line: 10712

//  <itree> SFDITEM_CLUST__INT_IF_IF_IF27
//    <name> [27] </name>
//    <i> Interrupt flag register </i>
//    <item> SFDITEM_REG__INT_IF_IF_IF27_IFL </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF28_IFL  ---------------------------
// SVD Line: 10720

unsigned char INT_IF_IF_IF28_IFL __AT (0x40006070);



// ----------------------------  Register Item: INT_IF_IF_IF28_IFL  -------------------------------
// SVD Line: 10720

//  <item> SFDITEM_REG__INT_IF_IF_IF28_IFL
//    <name> IFL </name>
//    <i> [Bits 7..0] RW (@ 0x40006070) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF28_IFL >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF28_IFL = (INT_IF_IF_IF28_IFL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_IF_IF_IF28  ---------------------------------
// SVD Line: 10712

//  <itree> SFDITEM_CLUST__INT_IF_IF_IF28
//    <name> [28] </name>
//    <i> Interrupt flag register </i>
//    <item> SFDITEM_REG__INT_IF_IF_IF28_IFL </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF29_IFL  ---------------------------
// SVD Line: 10720

unsigned char INT_IF_IF_IF29_IFL __AT (0x40006074);



// ----------------------------  Register Item: INT_IF_IF_IF29_IFL  -------------------------------
// SVD Line: 10720

//  <item> SFDITEM_REG__INT_IF_IF_IF29_IFL
//    <name> IFL </name>
//    <i> [Bits 7..0] RW (@ 0x40006074) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF29_IFL >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF29_IFL = (INT_IF_IF_IF29_IFL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_IF_IF_IF29  ---------------------------------
// SVD Line: 10712

//  <itree> SFDITEM_CLUST__INT_IF_IF_IF29
//    <name> [29] </name>
//    <i> Interrupt flag register </i>
//    <item> SFDITEM_REG__INT_IF_IF_IF29_IFL </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF30_IFL  ---------------------------
// SVD Line: 10720

unsigned char INT_IF_IF_IF30_IFL __AT (0x40006078);



// ----------------------------  Register Item: INT_IF_IF_IF30_IFL  -------------------------------
// SVD Line: 10720

//  <item> SFDITEM_REG__INT_IF_IF_IF30_IFL
//    <name> IFL </name>
//    <i> [Bits 7..0] RW (@ 0x40006078) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF30_IFL >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF30_IFL = (INT_IF_IF_IF30_IFL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_IF_IF_IF30  ---------------------------------
// SVD Line: 10712

//  <itree> SFDITEM_CLUST__INT_IF_IF_IF30
//    <name> [30] </name>
//    <i> Interrupt flag register </i>
//    <item> SFDITEM_REG__INT_IF_IF_IF30_IFL </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_IF_IF_IF31_IFL  ---------------------------
// SVD Line: 10720

unsigned char INT_IF_IF_IF31_IFL __AT (0x4000607C);



// ----------------------------  Register Item: INT_IF_IF_IF31_IFL  -------------------------------
// SVD Line: 10720

//  <item> SFDITEM_REG__INT_IF_IF_IF31_IFL
//    <name> IFL </name>
//    <i> [Bits 7..0] RW (@ 0x4000607C) Interrupt flag register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_IF_IF_IF31_IFL >> 0) & 0xFFFFFFFF), ((INT_IF_IF_IF31_IFL = (INT_IF_IF_IF31_IFL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_IF_IF_IF31  ---------------------------------
// SVD Line: 10712

//  <itree> SFDITEM_CLUST__INT_IF_IF_IF31
//    <name> [31] </name>
//    <i> Interrupt flag register </i>
//    <item> SFDITEM_REG__INT_IF_IF_IF31_IFL </item>
//  </itree>
//  


// -------------------------------  Cluster Array ITree: INT_IF  ----------------------------------
// SVD Line: 10712

//  <itree> SFDITEM_CLUST__INT_IF
//    <name> IF </name>
//    <i> Interrupt flag register </i>
//    <item> SFDITEM_CLUST__INT_IF_IF_IF0 </item>
//    <item> SFDITEM_CLUST__INT_IF_IF_IF1 </item>
//    <item> SFDITEM_CLUST__INT_IF_IF_IF2 </item>
//    <item> SFDITEM_CLUST__INT_IF_IF_IF3 </item>
//    <item> SFDITEM_CLUST__INT_IF_IF_IF4 </item>
//    <item> SFDITEM_CLUST__INT_IF_IF_IF5 </item>
//    <item> SFDITEM_CLUST__INT_IF_IF_IF6 </item>
//    <item> SFDITEM_CLUST__INT_IF_IF_IF7 </item>
//    <item> SFDITEM_CLUST__INT_IF_IF_IF8 </item>
//    <item> SFDITEM_CLUST__INT_IF_IF_IF9 </item>
//    <item> SFDITEM_CLUST__INT_IF_IF_IF10 </item>
//    <item> SFDITEM_CLUST__INT_IF_IF_IF11 </item>
//    <item> SFDITEM_CLUST__INT_IF_IF_IF12 </item>
//    <item> SFDITEM_CLUST__INT_IF_IF_IF13 </item>
//    <item> SFDITEM_CLUST__INT_IF_IF_IF14 </item>
//    <item> SFDITEM_CLUST__INT_IF_IF_IF15 </item>
//    <item> SFDITEM_CLUST__INT_IF_IF_IF16 </item>
//    <item> SFDITEM_CLUST__INT_IF_IF_IF17 </item>
//    <item> SFDITEM_CLUST__INT_IF_IF_IF18 </item>
//    <item> SFDITEM_CLUST__INT_IF_IF_IF19 </item>
//    <item> SFDITEM_CLUST__INT_IF_IF_IF20 </item>
//    <item> SFDITEM_CLUST__INT_IF_IF_IF21 </item>
//    <item> SFDITEM_CLUST__INT_IF_IF_IF22 </item>
//    <item> SFDITEM_CLUST__INT_IF_IF_IF23 </item>
//    <item> SFDITEM_CLUST__INT_IF_IF_IF24 </item>
//    <item> SFDITEM_CLUST__INT_IF_IF_IF25 </item>
//    <item> SFDITEM_CLUST__INT_IF_IF_IF26 </item>
//    <item> SFDITEM_CLUST__INT_IF_IF_IF27 </item>
//    <item> SFDITEM_CLUST__INT_IF_IF_IF28 </item>
//    <item> SFDITEM_CLUST__INT_IF_IF_IF29 </item>
//    <item> SFDITEM_CLUST__INT_IF_IF_IF30 </item>
//    <item> SFDITEM_CLUST__INT_IF_IF_IF31 </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK0_MKL  ----------------------------
// SVD Line: 10736

unsigned char INT_MK_MK_MK0_MKL __AT (0x40006100);



// ----------------------------  Register Item: INT_MK_MK_MK0_MKL  --------------------------------
// SVD Line: 10736

//  <item> SFDITEM_REG__INT_MK_MK_MK0_MKL
//    <name> MKL </name>
//    <i> [Bits 7..0] RW (@ 0x40006100) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK0_MKL >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK0_MKL = (INT_MK_MK_MK0_MKL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_MK_MK_MK0  ----------------------------------
// SVD Line: 10728

//  <itree> SFDITEM_CLUST__INT_MK_MK_MK0
//    <name> [0] </name>
//    <i> Interrupt mask register </i>
//    <item> SFDITEM_REG__INT_MK_MK_MK0_MKL </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK1_MKL  ----------------------------
// SVD Line: 10736

unsigned char INT_MK_MK_MK1_MKL __AT (0x40006104);



// ----------------------------  Register Item: INT_MK_MK_MK1_MKL  --------------------------------
// SVD Line: 10736

//  <item> SFDITEM_REG__INT_MK_MK_MK1_MKL
//    <name> MKL </name>
//    <i> [Bits 7..0] RW (@ 0x40006104) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK1_MKL >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK1_MKL = (INT_MK_MK_MK1_MKL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_MK_MK_MK1  ----------------------------------
// SVD Line: 10728

//  <itree> SFDITEM_CLUST__INT_MK_MK_MK1
//    <name> [1] </name>
//    <i> Interrupt mask register </i>
//    <item> SFDITEM_REG__INT_MK_MK_MK1_MKL </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK2_MKL  ----------------------------
// SVD Line: 10736

unsigned char INT_MK_MK_MK2_MKL __AT (0x40006108);



// ----------------------------  Register Item: INT_MK_MK_MK2_MKL  --------------------------------
// SVD Line: 10736

//  <item> SFDITEM_REG__INT_MK_MK_MK2_MKL
//    <name> MKL </name>
//    <i> [Bits 7..0] RW (@ 0x40006108) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK2_MKL >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK2_MKL = (INT_MK_MK_MK2_MKL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_MK_MK_MK2  ----------------------------------
// SVD Line: 10728

//  <itree> SFDITEM_CLUST__INT_MK_MK_MK2
//    <name> [2] </name>
//    <i> Interrupt mask register </i>
//    <item> SFDITEM_REG__INT_MK_MK_MK2_MKL </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK3_MKL  ----------------------------
// SVD Line: 10736

unsigned char INT_MK_MK_MK3_MKL __AT (0x4000610C);



// ----------------------------  Register Item: INT_MK_MK_MK3_MKL  --------------------------------
// SVD Line: 10736

//  <item> SFDITEM_REG__INT_MK_MK_MK3_MKL
//    <name> MKL </name>
//    <i> [Bits 7..0] RW (@ 0x4000610C) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK3_MKL >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK3_MKL = (INT_MK_MK_MK3_MKL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_MK_MK_MK3  ----------------------------------
// SVD Line: 10728

//  <itree> SFDITEM_CLUST__INT_MK_MK_MK3
//    <name> [3] </name>
//    <i> Interrupt mask register </i>
//    <item> SFDITEM_REG__INT_MK_MK_MK3_MKL </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK4_MKL  ----------------------------
// SVD Line: 10736

unsigned char INT_MK_MK_MK4_MKL __AT (0x40006110);



// ----------------------------  Register Item: INT_MK_MK_MK4_MKL  --------------------------------
// SVD Line: 10736

//  <item> SFDITEM_REG__INT_MK_MK_MK4_MKL
//    <name> MKL </name>
//    <i> [Bits 7..0] RW (@ 0x40006110) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK4_MKL >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK4_MKL = (INT_MK_MK_MK4_MKL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_MK_MK_MK4  ----------------------------------
// SVD Line: 10728

//  <itree> SFDITEM_CLUST__INT_MK_MK_MK4
//    <name> [4] </name>
//    <i> Interrupt mask register </i>
//    <item> SFDITEM_REG__INT_MK_MK_MK4_MKL </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK5_MKL  ----------------------------
// SVD Line: 10736

unsigned char INT_MK_MK_MK5_MKL __AT (0x40006114);



// ----------------------------  Register Item: INT_MK_MK_MK5_MKL  --------------------------------
// SVD Line: 10736

//  <item> SFDITEM_REG__INT_MK_MK_MK5_MKL
//    <name> MKL </name>
//    <i> [Bits 7..0] RW (@ 0x40006114) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK5_MKL >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK5_MKL = (INT_MK_MK_MK5_MKL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_MK_MK_MK5  ----------------------------------
// SVD Line: 10728

//  <itree> SFDITEM_CLUST__INT_MK_MK_MK5
//    <name> [5] </name>
//    <i> Interrupt mask register </i>
//    <item> SFDITEM_REG__INT_MK_MK_MK5_MKL </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK6_MKL  ----------------------------
// SVD Line: 10736

unsigned char INT_MK_MK_MK6_MKL __AT (0x40006118);



// ----------------------------  Register Item: INT_MK_MK_MK6_MKL  --------------------------------
// SVD Line: 10736

//  <item> SFDITEM_REG__INT_MK_MK_MK6_MKL
//    <name> MKL </name>
//    <i> [Bits 7..0] RW (@ 0x40006118) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK6_MKL >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK6_MKL = (INT_MK_MK_MK6_MKL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_MK_MK_MK6  ----------------------------------
// SVD Line: 10728

//  <itree> SFDITEM_CLUST__INT_MK_MK_MK6
//    <name> [6] </name>
//    <i> Interrupt mask register </i>
//    <item> SFDITEM_REG__INT_MK_MK_MK6_MKL </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK7_MKL  ----------------------------
// SVD Line: 10736

unsigned char INT_MK_MK_MK7_MKL __AT (0x4000611C);



// ----------------------------  Register Item: INT_MK_MK_MK7_MKL  --------------------------------
// SVD Line: 10736

//  <item> SFDITEM_REG__INT_MK_MK_MK7_MKL
//    <name> MKL </name>
//    <i> [Bits 7..0] RW (@ 0x4000611C) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK7_MKL >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK7_MKL = (INT_MK_MK_MK7_MKL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_MK_MK_MK7  ----------------------------------
// SVD Line: 10728

//  <itree> SFDITEM_CLUST__INT_MK_MK_MK7
//    <name> [7] </name>
//    <i> Interrupt mask register </i>
//    <item> SFDITEM_REG__INT_MK_MK_MK7_MKL </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK8_MKL  ----------------------------
// SVD Line: 10736

unsigned char INT_MK_MK_MK8_MKL __AT (0x40006120);



// ----------------------------  Register Item: INT_MK_MK_MK8_MKL  --------------------------------
// SVD Line: 10736

//  <item> SFDITEM_REG__INT_MK_MK_MK8_MKL
//    <name> MKL </name>
//    <i> [Bits 7..0] RW (@ 0x40006120) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK8_MKL >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK8_MKL = (INT_MK_MK_MK8_MKL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_MK_MK_MK8  ----------------------------------
// SVD Line: 10728

//  <itree> SFDITEM_CLUST__INT_MK_MK_MK8
//    <name> [8] </name>
//    <i> Interrupt mask register </i>
//    <item> SFDITEM_REG__INT_MK_MK_MK8_MKL </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK9_MKL  ----------------------------
// SVD Line: 10736

unsigned char INT_MK_MK_MK9_MKL __AT (0x40006124);



// ----------------------------  Register Item: INT_MK_MK_MK9_MKL  --------------------------------
// SVD Line: 10736

//  <item> SFDITEM_REG__INT_MK_MK_MK9_MKL
//    <name> MKL </name>
//    <i> [Bits 7..0] RW (@ 0x40006124) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK9_MKL >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK9_MKL = (INT_MK_MK_MK9_MKL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_MK_MK_MK9  ----------------------------------
// SVD Line: 10728

//  <itree> SFDITEM_CLUST__INT_MK_MK_MK9
//    <name> [9] </name>
//    <i> Interrupt mask register </i>
//    <item> SFDITEM_REG__INT_MK_MK_MK9_MKL </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK10_MKL  ---------------------------
// SVD Line: 10736

unsigned char INT_MK_MK_MK10_MKL __AT (0x40006128);



// ----------------------------  Register Item: INT_MK_MK_MK10_MKL  -------------------------------
// SVD Line: 10736

//  <item> SFDITEM_REG__INT_MK_MK_MK10_MKL
//    <name> MKL </name>
//    <i> [Bits 7..0] RW (@ 0x40006128) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK10_MKL >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK10_MKL = (INT_MK_MK_MK10_MKL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_MK_MK_MK10  ---------------------------------
// SVD Line: 10728

//  <itree> SFDITEM_CLUST__INT_MK_MK_MK10
//    <name> [10] </name>
//    <i> Interrupt mask register </i>
//    <item> SFDITEM_REG__INT_MK_MK_MK10_MKL </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK11_MKL  ---------------------------
// SVD Line: 10736

unsigned char INT_MK_MK_MK11_MKL __AT (0x4000612C);



// ----------------------------  Register Item: INT_MK_MK_MK11_MKL  -------------------------------
// SVD Line: 10736

//  <item> SFDITEM_REG__INT_MK_MK_MK11_MKL
//    <name> MKL </name>
//    <i> [Bits 7..0] RW (@ 0x4000612C) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK11_MKL >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK11_MKL = (INT_MK_MK_MK11_MKL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_MK_MK_MK11  ---------------------------------
// SVD Line: 10728

//  <itree> SFDITEM_CLUST__INT_MK_MK_MK11
//    <name> [11] </name>
//    <i> Interrupt mask register </i>
//    <item> SFDITEM_REG__INT_MK_MK_MK11_MKL </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK12_MKL  ---------------------------
// SVD Line: 10736

unsigned char INT_MK_MK_MK12_MKL __AT (0x40006130);



// ----------------------------  Register Item: INT_MK_MK_MK12_MKL  -------------------------------
// SVD Line: 10736

//  <item> SFDITEM_REG__INT_MK_MK_MK12_MKL
//    <name> MKL </name>
//    <i> [Bits 7..0] RW (@ 0x40006130) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK12_MKL >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK12_MKL = (INT_MK_MK_MK12_MKL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_MK_MK_MK12  ---------------------------------
// SVD Line: 10728

//  <itree> SFDITEM_CLUST__INT_MK_MK_MK12
//    <name> [12] </name>
//    <i> Interrupt mask register </i>
//    <item> SFDITEM_REG__INT_MK_MK_MK12_MKL </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK13_MKL  ---------------------------
// SVD Line: 10736

unsigned char INT_MK_MK_MK13_MKL __AT (0x40006134);



// ----------------------------  Register Item: INT_MK_MK_MK13_MKL  -------------------------------
// SVD Line: 10736

//  <item> SFDITEM_REG__INT_MK_MK_MK13_MKL
//    <name> MKL </name>
//    <i> [Bits 7..0] RW (@ 0x40006134) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK13_MKL >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK13_MKL = (INT_MK_MK_MK13_MKL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_MK_MK_MK13  ---------------------------------
// SVD Line: 10728

//  <itree> SFDITEM_CLUST__INT_MK_MK_MK13
//    <name> [13] </name>
//    <i> Interrupt mask register </i>
//    <item> SFDITEM_REG__INT_MK_MK_MK13_MKL </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK14_MKL  ---------------------------
// SVD Line: 10736

unsigned char INT_MK_MK_MK14_MKL __AT (0x40006138);



// ----------------------------  Register Item: INT_MK_MK_MK14_MKL  -------------------------------
// SVD Line: 10736

//  <item> SFDITEM_REG__INT_MK_MK_MK14_MKL
//    <name> MKL </name>
//    <i> [Bits 7..0] RW (@ 0x40006138) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK14_MKL >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK14_MKL = (INT_MK_MK_MK14_MKL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_MK_MK_MK14  ---------------------------------
// SVD Line: 10728

//  <itree> SFDITEM_CLUST__INT_MK_MK_MK14
//    <name> [14] </name>
//    <i> Interrupt mask register </i>
//    <item> SFDITEM_REG__INT_MK_MK_MK14_MKL </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK15_MKL  ---------------------------
// SVD Line: 10736

unsigned char INT_MK_MK_MK15_MKL __AT (0x4000613C);



// ----------------------------  Register Item: INT_MK_MK_MK15_MKL  -------------------------------
// SVD Line: 10736

//  <item> SFDITEM_REG__INT_MK_MK_MK15_MKL
//    <name> MKL </name>
//    <i> [Bits 7..0] RW (@ 0x4000613C) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK15_MKL >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK15_MKL = (INT_MK_MK_MK15_MKL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_MK_MK_MK15  ---------------------------------
// SVD Line: 10728

//  <itree> SFDITEM_CLUST__INT_MK_MK_MK15
//    <name> [15] </name>
//    <i> Interrupt mask register </i>
//    <item> SFDITEM_REG__INT_MK_MK_MK15_MKL </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK16_MKL  ---------------------------
// SVD Line: 10736

unsigned char INT_MK_MK_MK16_MKL __AT (0x40006140);



// ----------------------------  Register Item: INT_MK_MK_MK16_MKL  -------------------------------
// SVD Line: 10736

//  <item> SFDITEM_REG__INT_MK_MK_MK16_MKL
//    <name> MKL </name>
//    <i> [Bits 7..0] RW (@ 0x40006140) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK16_MKL >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK16_MKL = (INT_MK_MK_MK16_MKL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_MK_MK_MK16  ---------------------------------
// SVD Line: 10728

//  <itree> SFDITEM_CLUST__INT_MK_MK_MK16
//    <name> [16] </name>
//    <i> Interrupt mask register </i>
//    <item> SFDITEM_REG__INT_MK_MK_MK16_MKL </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK17_MKL  ---------------------------
// SVD Line: 10736

unsigned char INT_MK_MK_MK17_MKL __AT (0x40006144);



// ----------------------------  Register Item: INT_MK_MK_MK17_MKL  -------------------------------
// SVD Line: 10736

//  <item> SFDITEM_REG__INT_MK_MK_MK17_MKL
//    <name> MKL </name>
//    <i> [Bits 7..0] RW (@ 0x40006144) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK17_MKL >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK17_MKL = (INT_MK_MK_MK17_MKL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_MK_MK_MK17  ---------------------------------
// SVD Line: 10728

//  <itree> SFDITEM_CLUST__INT_MK_MK_MK17
//    <name> [17] </name>
//    <i> Interrupt mask register </i>
//    <item> SFDITEM_REG__INT_MK_MK_MK17_MKL </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK18_MKL  ---------------------------
// SVD Line: 10736

unsigned char INT_MK_MK_MK18_MKL __AT (0x40006148);



// ----------------------------  Register Item: INT_MK_MK_MK18_MKL  -------------------------------
// SVD Line: 10736

//  <item> SFDITEM_REG__INT_MK_MK_MK18_MKL
//    <name> MKL </name>
//    <i> [Bits 7..0] RW (@ 0x40006148) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK18_MKL >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK18_MKL = (INT_MK_MK_MK18_MKL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_MK_MK_MK18  ---------------------------------
// SVD Line: 10728

//  <itree> SFDITEM_CLUST__INT_MK_MK_MK18
//    <name> [18] </name>
//    <i> Interrupt mask register </i>
//    <item> SFDITEM_REG__INT_MK_MK_MK18_MKL </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK19_MKL  ---------------------------
// SVD Line: 10736

unsigned char INT_MK_MK_MK19_MKL __AT (0x4000614C);



// ----------------------------  Register Item: INT_MK_MK_MK19_MKL  -------------------------------
// SVD Line: 10736

//  <item> SFDITEM_REG__INT_MK_MK_MK19_MKL
//    <name> MKL </name>
//    <i> [Bits 7..0] RW (@ 0x4000614C) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK19_MKL >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK19_MKL = (INT_MK_MK_MK19_MKL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_MK_MK_MK19  ---------------------------------
// SVD Line: 10728

//  <itree> SFDITEM_CLUST__INT_MK_MK_MK19
//    <name> [19] </name>
//    <i> Interrupt mask register </i>
//    <item> SFDITEM_REG__INT_MK_MK_MK19_MKL </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK20_MKL  ---------------------------
// SVD Line: 10736

unsigned char INT_MK_MK_MK20_MKL __AT (0x40006150);



// ----------------------------  Register Item: INT_MK_MK_MK20_MKL  -------------------------------
// SVD Line: 10736

//  <item> SFDITEM_REG__INT_MK_MK_MK20_MKL
//    <name> MKL </name>
//    <i> [Bits 7..0] RW (@ 0x40006150) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK20_MKL >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK20_MKL = (INT_MK_MK_MK20_MKL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_MK_MK_MK20  ---------------------------------
// SVD Line: 10728

//  <itree> SFDITEM_CLUST__INT_MK_MK_MK20
//    <name> [20] </name>
//    <i> Interrupt mask register </i>
//    <item> SFDITEM_REG__INT_MK_MK_MK20_MKL </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK21_MKL  ---------------------------
// SVD Line: 10736

unsigned char INT_MK_MK_MK21_MKL __AT (0x40006154);



// ----------------------------  Register Item: INT_MK_MK_MK21_MKL  -------------------------------
// SVD Line: 10736

//  <item> SFDITEM_REG__INT_MK_MK_MK21_MKL
//    <name> MKL </name>
//    <i> [Bits 7..0] RW (@ 0x40006154) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK21_MKL >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK21_MKL = (INT_MK_MK_MK21_MKL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_MK_MK_MK21  ---------------------------------
// SVD Line: 10728

//  <itree> SFDITEM_CLUST__INT_MK_MK_MK21
//    <name> [21] </name>
//    <i> Interrupt mask register </i>
//    <item> SFDITEM_REG__INT_MK_MK_MK21_MKL </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK22_MKL  ---------------------------
// SVD Line: 10736

unsigned char INT_MK_MK_MK22_MKL __AT (0x40006158);



// ----------------------------  Register Item: INT_MK_MK_MK22_MKL  -------------------------------
// SVD Line: 10736

//  <item> SFDITEM_REG__INT_MK_MK_MK22_MKL
//    <name> MKL </name>
//    <i> [Bits 7..0] RW (@ 0x40006158) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK22_MKL >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK22_MKL = (INT_MK_MK_MK22_MKL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_MK_MK_MK22  ---------------------------------
// SVD Line: 10728

//  <itree> SFDITEM_CLUST__INT_MK_MK_MK22
//    <name> [22] </name>
//    <i> Interrupt mask register </i>
//    <item> SFDITEM_REG__INT_MK_MK_MK22_MKL </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK23_MKL  ---------------------------
// SVD Line: 10736

unsigned char INT_MK_MK_MK23_MKL __AT (0x4000615C);



// ----------------------------  Register Item: INT_MK_MK_MK23_MKL  -------------------------------
// SVD Line: 10736

//  <item> SFDITEM_REG__INT_MK_MK_MK23_MKL
//    <name> MKL </name>
//    <i> [Bits 7..0] RW (@ 0x4000615C) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK23_MKL >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK23_MKL = (INT_MK_MK_MK23_MKL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_MK_MK_MK23  ---------------------------------
// SVD Line: 10728

//  <itree> SFDITEM_CLUST__INT_MK_MK_MK23
//    <name> [23] </name>
//    <i> Interrupt mask register </i>
//    <item> SFDITEM_REG__INT_MK_MK_MK23_MKL </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK24_MKL  ---------------------------
// SVD Line: 10736

unsigned char INT_MK_MK_MK24_MKL __AT (0x40006160);



// ----------------------------  Register Item: INT_MK_MK_MK24_MKL  -------------------------------
// SVD Line: 10736

//  <item> SFDITEM_REG__INT_MK_MK_MK24_MKL
//    <name> MKL </name>
//    <i> [Bits 7..0] RW (@ 0x40006160) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK24_MKL >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK24_MKL = (INT_MK_MK_MK24_MKL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_MK_MK_MK24  ---------------------------------
// SVD Line: 10728

//  <itree> SFDITEM_CLUST__INT_MK_MK_MK24
//    <name> [24] </name>
//    <i> Interrupt mask register </i>
//    <item> SFDITEM_REG__INT_MK_MK_MK24_MKL </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK25_MKL  ---------------------------
// SVD Line: 10736

unsigned char INT_MK_MK_MK25_MKL __AT (0x40006164);



// ----------------------------  Register Item: INT_MK_MK_MK25_MKL  -------------------------------
// SVD Line: 10736

//  <item> SFDITEM_REG__INT_MK_MK_MK25_MKL
//    <name> MKL </name>
//    <i> [Bits 7..0] RW (@ 0x40006164) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK25_MKL >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK25_MKL = (INT_MK_MK_MK25_MKL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_MK_MK_MK25  ---------------------------------
// SVD Line: 10728

//  <itree> SFDITEM_CLUST__INT_MK_MK_MK25
//    <name> [25] </name>
//    <i> Interrupt mask register </i>
//    <item> SFDITEM_REG__INT_MK_MK_MK25_MKL </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK26_MKL  ---------------------------
// SVD Line: 10736

unsigned char INT_MK_MK_MK26_MKL __AT (0x40006168);



// ----------------------------  Register Item: INT_MK_MK_MK26_MKL  -------------------------------
// SVD Line: 10736

//  <item> SFDITEM_REG__INT_MK_MK_MK26_MKL
//    <name> MKL </name>
//    <i> [Bits 7..0] RW (@ 0x40006168) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK26_MKL >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK26_MKL = (INT_MK_MK_MK26_MKL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_MK_MK_MK26  ---------------------------------
// SVD Line: 10728

//  <itree> SFDITEM_CLUST__INT_MK_MK_MK26
//    <name> [26] </name>
//    <i> Interrupt mask register </i>
//    <item> SFDITEM_REG__INT_MK_MK_MK26_MKL </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK27_MKL  ---------------------------
// SVD Line: 10736

unsigned char INT_MK_MK_MK27_MKL __AT (0x4000616C);



// ----------------------------  Register Item: INT_MK_MK_MK27_MKL  -------------------------------
// SVD Line: 10736

//  <item> SFDITEM_REG__INT_MK_MK_MK27_MKL
//    <name> MKL </name>
//    <i> [Bits 7..0] RW (@ 0x4000616C) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK27_MKL >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK27_MKL = (INT_MK_MK_MK27_MKL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_MK_MK_MK27  ---------------------------------
// SVD Line: 10728

//  <itree> SFDITEM_CLUST__INT_MK_MK_MK27
//    <name> [27] </name>
//    <i> Interrupt mask register </i>
//    <item> SFDITEM_REG__INT_MK_MK_MK27_MKL </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK28_MKL  ---------------------------
// SVD Line: 10736

unsigned char INT_MK_MK_MK28_MKL __AT (0x40006170);



// ----------------------------  Register Item: INT_MK_MK_MK28_MKL  -------------------------------
// SVD Line: 10736

//  <item> SFDITEM_REG__INT_MK_MK_MK28_MKL
//    <name> MKL </name>
//    <i> [Bits 7..0] RW (@ 0x40006170) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK28_MKL >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK28_MKL = (INT_MK_MK_MK28_MKL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_MK_MK_MK28  ---------------------------------
// SVD Line: 10728

//  <itree> SFDITEM_CLUST__INT_MK_MK_MK28
//    <name> [28] </name>
//    <i> Interrupt mask register </i>
//    <item> SFDITEM_REG__INT_MK_MK_MK28_MKL </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK29_MKL  ---------------------------
// SVD Line: 10736

unsigned char INT_MK_MK_MK29_MKL __AT (0x40006174);



// ----------------------------  Register Item: INT_MK_MK_MK29_MKL  -------------------------------
// SVD Line: 10736

//  <item> SFDITEM_REG__INT_MK_MK_MK29_MKL
//    <name> MKL </name>
//    <i> [Bits 7..0] RW (@ 0x40006174) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK29_MKL >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK29_MKL = (INT_MK_MK_MK29_MKL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_MK_MK_MK29  ---------------------------------
// SVD Line: 10728

//  <itree> SFDITEM_CLUST__INT_MK_MK_MK29
//    <name> [29] </name>
//    <i> Interrupt mask register </i>
//    <item> SFDITEM_REG__INT_MK_MK_MK29_MKL </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK30_MKL  ---------------------------
// SVD Line: 10736

unsigned char INT_MK_MK_MK30_MKL __AT (0x40006178);



// ----------------------------  Register Item: INT_MK_MK_MK30_MKL  -------------------------------
// SVD Line: 10736

//  <item> SFDITEM_REG__INT_MK_MK_MK30_MKL
//    <name> MKL </name>
//    <i> [Bits 7..0] RW (@ 0x40006178) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK30_MKL >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK30_MKL = (INT_MK_MK_MK30_MKL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_MK_MK_MK30  ---------------------------------
// SVD Line: 10728

//  <itree> SFDITEM_CLUST__INT_MK_MK_MK30
//    <name> [30] </name>
//    <i> Interrupt mask register </i>
//    <item> SFDITEM_REG__INT_MK_MK_MK30_MKL </item>
//  </itree>
//  


// ------------------------  Register Item Address: INT_MK_MK_MK31_MKL  ---------------------------
// SVD Line: 10736

unsigned char INT_MK_MK_MK31_MKL __AT (0x4000617C);



// ----------------------------  Register Item: INT_MK_MK_MK31_MKL  -------------------------------
// SVD Line: 10736

//  <item> SFDITEM_REG__INT_MK_MK_MK31_MKL
//    <name> MKL </name>
//    <i> [Bits 7..0] RW (@ 0x4000617C) Interrupt mask register </i>
//    <edit> 
//      <loc> ( (unsigned char)((INT_MK_MK_MK31_MKL >> 0) & 0xFFFFFFFF), ((INT_MK_MK_MK31_MKL = (INT_MK_MK_MK31_MKL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Cluster ITree: INT_MK_MK_MK31  ---------------------------------
// SVD Line: 10728

//  <itree> SFDITEM_CLUST__INT_MK_MK_MK31
//    <name> [31] </name>
//    <i> Interrupt mask register </i>
//    <item> SFDITEM_REG__INT_MK_MK_MK31_MKL </item>
//  </itree>
//  


// -------------------------------  Cluster Array ITree: INT_MK  ----------------------------------
// SVD Line: 10728

//  <itree> SFDITEM_CLUST__INT_MK
//    <name> MK </name>
//    <i> Interrupt mask register </i>
//    <item> SFDITEM_CLUST__INT_MK_MK_MK0 </item>
//    <item> SFDITEM_CLUST__INT_MK_MK_MK1 </item>
//    <item> SFDITEM_CLUST__INT_MK_MK_MK2 </item>
//    <item> SFDITEM_CLUST__INT_MK_MK_MK3 </item>
//    <item> SFDITEM_CLUST__INT_MK_MK_MK4 </item>
//    <item> SFDITEM_CLUST__INT_MK_MK_MK5 </item>
//    <item> SFDITEM_CLUST__INT_MK_MK_MK6 </item>
//    <item> SFDITEM_CLUST__INT_MK_MK_MK7 </item>
//    <item> SFDITEM_CLUST__INT_MK_MK_MK8 </item>
//    <item> SFDITEM_CLUST__INT_MK_MK_MK9 </item>
//    <item> SFDITEM_CLUST__INT_MK_MK_MK10 </item>
//    <item> SFDITEM_CLUST__INT_MK_MK_MK11 </item>
//    <item> SFDITEM_CLUST__INT_MK_MK_MK12 </item>
//    <item> SFDITEM_CLUST__INT_MK_MK_MK13 </item>
//    <item> SFDITEM_CLUST__INT_MK_MK_MK14 </item>
//    <item> SFDITEM_CLUST__INT_MK_MK_MK15 </item>
//    <item> SFDITEM_CLUST__INT_MK_MK_MK16 </item>
//    <item> SFDITEM_CLUST__INT_MK_MK_MK17 </item>
//    <item> SFDITEM_CLUST__INT_MK_MK_MK18 </item>
//    <item> SFDITEM_CLUST__INT_MK_MK_MK19 </item>
//    <item> SFDITEM_CLUST__INT_MK_MK_MK20 </item>
//    <item> SFDITEM_CLUST__INT_MK_MK_MK21 </item>
//    <item> SFDITEM_CLUST__INT_MK_MK_MK22 </item>
//    <item> SFDITEM_CLUST__INT_MK_MK_MK23 </item>
//    <item> SFDITEM_CLUST__INT_MK_MK_MK24 </item>
//    <item> SFDITEM_CLUST__INT_MK_MK_MK25 </item>
//    <item> SFDITEM_CLUST__INT_MK_MK_MK26 </item>
//    <item> SFDITEM_CLUST__INT_MK_MK_MK27 </item>
//    <item> SFDITEM_CLUST__INT_MK_MK_MK28 </item>
//    <item> SFDITEM_CLUST__INT_MK_MK_MK29 </item>
//    <item> SFDITEM_CLUST__INT_MK_MK_MK30 </item>
//    <item> SFDITEM_CLUST__INT_MK_MK_MK31 </item>
//  </itree>
//  


// ----------------------------------  Peripheral View: INT  --------------------------------------
// SVD Line: 10696

//  <view> INT
//    <name> INT </name>
//    <item> SFDITEM_CLUST__INT_IF </item>
//    <item> SFDITEM_CLUST__INT_MK </item>
//  </view>
//  


// ----------------------------  Register Item Address: INTM_EGP0  --------------------------------
// SVD Line: 10788

unsigned char INTM_EGP0 __AT (0x40045B38);



// -------------------------------  Field Item: INTM_EGP0_EGP0  -----------------------------------
// SVD Line: 10796

//  <item> SFDITEM_FIELD__INTM_EGP0_EGP0
//    <name> EGP0 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40045B38) EGP0 </i>
//    <check> 
//      <loc> ( (unsigned char) INTM_EGP0 ) </loc>
//      <o.0..0> EGP0
//    </check>
//  </item>
//  


// -------------------------------  Field Item: INTM_EGP0_EGP1  -----------------------------------
// SVD Line: 10802

//  <item> SFDITEM_FIELD__INTM_EGP0_EGP1
//    <name> EGP1 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40045B38) EGP1 </i>
//    <check> 
//      <loc> ( (unsigned char) INTM_EGP0 ) </loc>
//      <o.1..1> EGP1
//    </check>
//  </item>
//  


// -------------------------------  Field Item: INTM_EGP0_EGP2  -----------------------------------
// SVD Line: 10808

//  <item> SFDITEM_FIELD__INTM_EGP0_EGP2
//    <name> EGP2 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40045B38) EGP2 </i>
//    <check> 
//      <loc> ( (unsigned char) INTM_EGP0 ) </loc>
//      <o.2..2> EGP2
//    </check>
//  </item>
//  


// -------------------------------  Field Item: INTM_EGP0_EGP3  -----------------------------------
// SVD Line: 10814

//  <item> SFDITEM_FIELD__INTM_EGP0_EGP3
//    <name> EGP3 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40045B38) EGP3 </i>
//    <check> 
//      <loc> ( (unsigned char) INTM_EGP0 ) </loc>
//      <o.3..3> EGP3
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: INTM_EGP0  -----------------------------------
// SVD Line: 10788

//  <rtree> SFDITEM_REG__INTM_EGP0
//    <name> EGP0 </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40045B38) External interrupt rising edge enable register </i>
//    <loc> ( (unsigned char)((INTM_EGP0 >> 0) & 0xFF), ((INTM_EGP0 = (INTM_EGP0 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__INTM_EGP0_EGP0 </item>
//    <item> SFDITEM_FIELD__INTM_EGP0_EGP1 </item>
//    <item> SFDITEM_FIELD__INTM_EGP0_EGP2 </item>
//    <item> SFDITEM_FIELD__INTM_EGP0_EGP3 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: INTM_EGN0  --------------------------------
// SVD Line: 10823

unsigned char INTM_EGN0 __AT (0x40045B39);



// -------------------------------  Field Item: INTM_EGN0_EGN0  -----------------------------------
// SVD Line: 10831

//  <item> SFDITEM_FIELD__INTM_EGN0_EGN0
//    <name> EGN0 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40045B39) EGN0 </i>
//    <check> 
//      <loc> ( (unsigned char) INTM_EGN0 ) </loc>
//      <o.0..0> EGN0
//    </check>
//  </item>
//  


// -------------------------------  Field Item: INTM_EGN0_EGN1  -----------------------------------
// SVD Line: 10837

//  <item> SFDITEM_FIELD__INTM_EGN0_EGN1
//    <name> EGN1 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40045B39) EGN1 </i>
//    <check> 
//      <loc> ( (unsigned char) INTM_EGN0 ) </loc>
//      <o.1..1> EGN1
//    </check>
//  </item>
//  


// -------------------------------  Field Item: INTM_EGN0_EGN2  -----------------------------------
// SVD Line: 10843

//  <item> SFDITEM_FIELD__INTM_EGN0_EGN2
//    <name> EGN2 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40045B39) EGN2 </i>
//    <check> 
//      <loc> ( (unsigned char) INTM_EGN0 ) </loc>
//      <o.2..2> EGN2
//    </check>
//  </item>
//  


// -------------------------------  Field Item: INTM_EGN0_EGN3  -----------------------------------
// SVD Line: 10849

//  <item> SFDITEM_FIELD__INTM_EGN0_EGN3
//    <name> EGN3 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40045B39) EGN3 </i>
//    <check> 
//      <loc> ( (unsigned char) INTM_EGN0 ) </loc>
//      <o.3..3> EGN3
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: INTM_EGN0  -----------------------------------
// SVD Line: 10823

//  <rtree> SFDITEM_REG__INTM_EGN0
//    <name> EGN0 </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40045B39) External interrupt falling edge enable register </i>
//    <loc> ( (unsigned char)((INTM_EGN0 >> 0) & 0xFF), ((INTM_EGN0 = (INTM_EGN0 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__INTM_EGN0_EGN0 </item>
//    <item> SFDITEM_FIELD__INTM_EGN0_EGN1 </item>
//    <item> SFDITEM_FIELD__INTM_EGN0_EGN2 </item>
//    <item> SFDITEM_FIELD__INTM_EGN0_EGN3 </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: INTM  -------------------------------------
// SVD Line: 10748

//  <view> INTM
//    <name> INTM </name>
//    <item> SFDITEM_REG__INTM_EGP0 </item>
//    <item> SFDITEM_REG__INTM_EGN0 </item>
//  </view>
//  


// -----------------------------  Register Item Address: KEY_KRM  ---------------------------------
// SVD Line: 10884

unsigned char KEY_KRM __AT (0x40044B37);



// ---------------------------------  Register Item: KEY_KRM  -------------------------------------
// SVD Line: 10884

//  <item> SFDITEM_REG__KEY_KRM
//    <name> KRM </name>
//    <i> [Bits 7..0] RW (@ 0x40044B37) Key return mode register </i>
//    <edit> 
//      <loc> ( (unsigned char)((KEY_KRM >> 0) & 0xFFFFFFFF), ((KEY_KRM = (KEY_KRM & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------------  Peripheral View: KEY  --------------------------------------
// SVD Line: 10862

//  <view> KEY
//    <name> KEY </name>
//    <item> SFDITEM_REG__KEY_KRM </item>
//  </view>
//  


// ----------------------------  Register Item Address: MISC_NFEN0  -------------------------------
// SVD Line: 10912

unsigned char MISC_NFEN0 __AT (0x40040470);



// -----------------------------  Field Item: MISC_NFEN0_SNFEN00  ---------------------------------
// SVD Line: 10919

//  <item> SFDITEM_FIELD__MISC_NFEN0_SNFEN00
//    <name> SNFEN00 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40040470) Enable noise filter of RxD0 </i>
//    <check> 
//      <loc> ( (unsigned char) MISC_NFEN0 ) </loc>
//      <o.0..0> SNFEN00
//    </check>
//  </item>
//  


// -----------------------------  Field Item: MISC_NFEN0_SNFEN10  ---------------------------------
// SVD Line: 10925

//  <item> SFDITEM_FIELD__MISC_NFEN0_SNFEN10
//    <name> SNFEN10 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40040470) Enable noise filter of RxD1 </i>
//    <check> 
//      <loc> ( (unsigned char) MISC_NFEN0 ) </loc>
//      <o.2..2> SNFEN10
//    </check>
//  </item>
//  


// -----------------------------  Field Item: MISC_NFEN0_SNFEN20  ---------------------------------
// SVD Line: 10931

//  <item> SFDITEM_FIELD__MISC_NFEN0_SNFEN20
//    <name> SNFEN20 </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40040470) Enable noise filter of RxD2 </i>
//    <check> 
//      <loc> ( (unsigned char) MISC_NFEN0 ) </loc>
//      <o.4..4> SNFEN20
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: MISC_NFEN0  -----------------------------------
// SVD Line: 10912

//  <rtree> SFDITEM_REG__MISC_NFEN0
//    <name> NFEN0 </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40040470) Noise filter enable register 0 </i>
//    <loc> ( (unsigned char)((MISC_NFEN0 >> 0) & 0xFF), ((MISC_NFEN0 = (MISC_NFEN0 & ~(0x15UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x15) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MISC_NFEN0_SNFEN00 </item>
//    <item> SFDITEM_FIELD__MISC_NFEN0_SNFEN10 </item>
//    <item> SFDITEM_FIELD__MISC_NFEN0_SNFEN20 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: MISC_NFEN1  -------------------------------
// SVD Line: 10940

unsigned char MISC_NFEN1 __AT (0x40040471);



// -----------------------------  Field Item: MISC_NFEN1_TNFEN00  ---------------------------------
// SVD Line: 10948

//  <item> SFDITEM_FIELD__MISC_NFEN1_TNFEN00
//    <name> TNFEN00 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40040471) Enable noise filter of TI00 </i>
//    <check> 
//      <loc> ( (unsigned char) MISC_NFEN1 ) </loc>
//      <o.0..0> TNFEN00
//    </check>
//  </item>
//  


// -----------------------------  Field Item: MISC_NFEN1_TNFEN01  ---------------------------------
// SVD Line: 10954

//  <item> SFDITEM_FIELD__MISC_NFEN1_TNFEN01
//    <name> TNFEN01 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40040471) Enable noise filter of TI01 </i>
//    <check> 
//      <loc> ( (unsigned char) MISC_NFEN1 ) </loc>
//      <o.1..1> TNFEN01
//    </check>
//  </item>
//  


// -----------------------------  Field Item: MISC_NFEN1_TNFEN02  ---------------------------------
// SVD Line: 10960

//  <item> SFDITEM_FIELD__MISC_NFEN1_TNFEN02
//    <name> TNFEN02 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40040471) Enable noise filter of TI02 </i>
//    <check> 
//      <loc> ( (unsigned char) MISC_NFEN1 ) </loc>
//      <o.2..2> TNFEN02
//    </check>
//  </item>
//  


// -----------------------------  Field Item: MISC_NFEN1_TNFEN03  ---------------------------------
// SVD Line: 10966

//  <item> SFDITEM_FIELD__MISC_NFEN1_TNFEN03
//    <name> TNFEN03 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40040471) Enable noise filter of TI03 </i>
//    <check> 
//      <loc> ( (unsigned char) MISC_NFEN1 ) </loc>
//      <o.3..3> TNFEN03
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: MISC_NFEN1  -----------------------------------
// SVD Line: 10940

//  <rtree> SFDITEM_REG__MISC_NFEN1
//    <name> NFEN1 </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40040471) Noise filter enable register 1 </i>
//    <loc> ( (unsigned char)((MISC_NFEN1 >> 0) & 0xFF), ((MISC_NFEN1 = (MISC_NFEN1 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MISC_NFEN1_TNFEN00 </item>
//    <item> SFDITEM_FIELD__MISC_NFEN1_TNFEN01 </item>
//    <item> SFDITEM_FIELD__MISC_NFEN1_TNFEN02 </item>
//    <item> SFDITEM_FIELD__MISC_NFEN1_TNFEN03 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: MISC_NFEN2  -------------------------------
// SVD Line: 10975

unsigned char MISC_NFEN2 __AT (0x40040472);



// -----------------------------  Field Item: MISC_NFEN2_TNFEN10  ---------------------------------
// SVD Line: 10983

//  <item> SFDITEM_FIELD__MISC_NFEN2_TNFEN10
//    <name> TNFEN10 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40040472) Enable noise filter of TI10 </i>
//    <check> 
//      <loc> ( (unsigned char) MISC_NFEN2 ) </loc>
//      <o.0..0> TNFEN10
//    </check>
//  </item>
//  


// -----------------------------  Field Item: MISC_NFEN2_TNFEN11  ---------------------------------
// SVD Line: 10989

//  <item> SFDITEM_FIELD__MISC_NFEN2_TNFEN11
//    <name> TNFEN11 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40040472) Enable noise filter of TI11 </i>
//    <check> 
//      <loc> ( (unsigned char) MISC_NFEN2 ) </loc>
//      <o.1..1> TNFEN11
//    </check>
//  </item>
//  


// -----------------------------  Field Item: MISC_NFEN2_TNFEN12  ---------------------------------
// SVD Line: 10995

//  <item> SFDITEM_FIELD__MISC_NFEN2_TNFEN12
//    <name> TNFEN12 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40040472) Enable noise filter of TI12 </i>
//    <check> 
//      <loc> ( (unsigned char) MISC_NFEN2 ) </loc>
//      <o.2..2> TNFEN12
//    </check>
//  </item>
//  


// -----------------------------  Field Item: MISC_NFEN2_TNFEN13  ---------------------------------
// SVD Line: 11001

//  <item> SFDITEM_FIELD__MISC_NFEN2_TNFEN13
//    <name> TNFEN13 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40040472) Enable noise filter of TI13 </i>
//    <check> 
//      <loc> ( (unsigned char) MISC_NFEN2 ) </loc>
//      <o.3..3> TNFEN13
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: MISC_NFEN2  -----------------------------------
// SVD Line: 10975

//  <rtree> SFDITEM_REG__MISC_NFEN2
//    <name> NFEN2 </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40040472) Noise filter enable register 2 </i>
//    <loc> ( (unsigned char)((MISC_NFEN2 >> 0) & 0xFF), ((MISC_NFEN2 = (MISC_NFEN2 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MISC_NFEN2_TNFEN10 </item>
//    <item> SFDITEM_FIELD__MISC_NFEN2_TNFEN11 </item>
//    <item> SFDITEM_FIELD__MISC_NFEN2_TNFEN12 </item>
//    <item> SFDITEM_FIELD__MISC_NFEN2_TNFEN13 </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: MISC_ISC  --------------------------------
// SVD Line: 11010

unsigned char MISC_ISC __AT (0x40040473);



// -------------------------------  Field Item: MISC_ISC_SSIE00  ----------------------------------
// SVD Line: 11018

//  <item> SFDITEM_FIELD__MISC_ISC_SSIE00
//    <name> SSIE00 </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40040473) \nThe slave select input (SS00) of SPI00 is valid\n0 : INVALID = The slave select input (SS00) pin is invalid\n1 : VALID = The slave select input (SS00) pin is valid </i>
//    <combo> 
//      <loc> ( (unsigned char) MISC_ISC ) </loc>
//      <o.7..7> SSIE00
//        <0=> 0: INVALID = The slave select input (SS00) pin is invalid
//        <1=> 1: VALID = The slave select input (SS00) pin is valid
//    </combo>
//  </item>
//  


// --------------------------------  Register RTree: MISC_ISC  ------------------------------------
// SVD Line: 11010

//  <rtree> SFDITEM_REG__MISC_ISC
//    <name> ISC </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40040473) Input switch control register </i>
//    <loc> ( (unsigned char)((MISC_ISC >> 0) & 0xFF), ((MISC_ISC = (MISC_ISC & ~(0x80UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x80) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__MISC_ISC_SSIE00 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: MISC_TIOS0  -------------------------------
// SVD Line: 11039

unsigned char MISC_TIOS0 __AT (0x40040474);



// --------------------------------  Register Item: MISC_TIOS0  -----------------------------------
// SVD Line: 11039

//  <item> SFDITEM_REG__MISC_TIOS0
//    <name> TIOS0 </name>
//    <i> [Bits 7..0] RW (@ 0x40040474) Timer I/O select register 0 </i>
//    <edit> 
//      <loc> ( (unsigned char)((MISC_TIOS0 >> 0) & 0xFFFFFFFF), ((MISC_TIOS0 = (MISC_TIOS0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: MISC_TIOS1  -------------------------------
// SVD Line: 11047

unsigned char MISC_TIOS1 __AT (0x40040475);



// --------------------------------  Register Item: MISC_TIOS1  -----------------------------------
// SVD Line: 11047

//  <item> SFDITEM_REG__MISC_TIOS1
//    <name> TIOS1 </name>
//    <i> [Bits 7..0] RW (@ 0x40040475) Timer I/O select register 1 </i>
//    <edit> 
//      <loc> ( (unsigned char)((MISC_TIOS1 >> 0) & 0xFFFFFFFF), ((MISC_TIOS1 = (MISC_TIOS1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: MISC_RTCCL  -------------------------------
// SVD Line: 11055

unsigned char MISC_RTCCL __AT (0x4004047C);



// --------------------------------  Register Item: MISC_RTCCL  -----------------------------------
// SVD Line: 11055

//  <item> SFDITEM_REG__MISC_RTCCL
//    <name> RTCCL </name>
//    <i> [Bits 7..0] RW (@ 0x4004047C) Real-time clock select register </i>
//    <edit> 
//      <loc> ( (unsigned char)((MISC_RTCCL >> 0) & 0xFFFFFFFF), ((MISC_RTCCL = (MISC_RTCCL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------------  Peripheral View: MISC  -------------------------------------
// SVD Line: 10896

//  <view> MISC
//    <name> MISC </name>
//    <item> SFDITEM_REG__MISC_NFEN0 </item>
//    <item> SFDITEM_REG__MISC_NFEN1 </item>
//    <item> SFDITEM_REG__MISC_NFEN2 </item>
//    <item> SFDITEM_REG__MISC_ISC </item>
//    <item> SFDITEM_REG__MISC_TIOS0 </item>
//    <item> SFDITEM_REG__MISC_TIOS1 </item>
//    <item> SFDITEM_REG__MISC_RTCCL </item>
//  </view>
//  


// ----------------------------  Register Item Address: FMC_FLSTS  --------------------------------
// SVD Line: 11089

unsigned int FMC_FLSTS __AT (0x40020000);



// --------------------------------  Field Item: FMC_FLSTS_OVF  -----------------------------------
// SVD Line: 11097

//  <item> SFDITEM_FIELD__FMC_FLSTS_OVF
//    <name> OVF </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40020000) Flash erase or write operaiton finish </i>
//    <check> 
//      <loc> ( (unsigned int) FMC_FLSTS ) </loc>
//      <o.0..0> OVF
//    </check>
//  </item>
//  


// --------------------------------  Field Item: FMC_FLSTS_EVF  -----------------------------------
// SVD Line: 11103

//  <item> SFDITEM_FIELD__FMC_FLSTS_EVF
//    <name> EVF </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40020000) Flash hardware verification error flag </i>
//    <check> 
//      <loc> ( (unsigned int) FMC_FLSTS ) </loc>
//      <o.2..2> EVF
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: FMC_FLSTS  -----------------------------------
// SVD Line: 11089

//  <rtree> SFDITEM_REG__FMC_FLSTS
//    <name> FLSTS </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40020000) Flash status register </i>
//    <loc> ( (unsigned int)((FMC_FLSTS >> 0) & 0xFFFFFFFF), ((FMC_FLSTS = (FMC_FLSTS & ~(0x5UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x5) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__FMC_FLSTS_OVF </item>
//    <item> SFDITEM_FIELD__FMC_FLSTS_EVF </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: FMC_FLOPMD1  -------------------------------
// SVD Line: 11112

unsigned int FMC_FLOPMD1 __AT (0x40020004);



// -------------------------------  Register Item: FMC_FLOPMD1  -----------------------------------
// SVD Line: 11112

//  <item> SFDITEM_REG__FMC_FLOPMD1
//    <name> FLOPMD1 </name>
//    <i> [Bits 31..0] RW (@ 0x40020004) Flash operation mode register 1 </i>
//    <edit> 
//      <loc> ( (unsigned int)((FMC_FLOPMD1 >> 0) & 0xFFFFFFFF), ((FMC_FLOPMD1 = (FMC_FLOPMD1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: FMC_FLOPMD2  -------------------------------
// SVD Line: 11120

unsigned int FMC_FLOPMD2 __AT (0x40020008);



// -------------------------------  Register Item: FMC_FLOPMD2  -----------------------------------
// SVD Line: 11120

//  <item> SFDITEM_REG__FMC_FLOPMD2
//    <name> FLOPMD2 </name>
//    <i> [Bits 31..0] RW (@ 0x40020008) Flash operation mode register 2 </i>
//    <edit> 
//      <loc> ( (unsigned int)((FMC_FLOPMD2 >> 0) & 0xFFFFFFFF), ((FMC_FLOPMD2 = (FMC_FLOPMD2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: FMC_FLERMD  -------------------------------
// SVD Line: 11126

unsigned int FMC_FLERMD __AT (0x4002000C);



// --------------------------------  Register Item: FMC_FLERMD  -----------------------------------
// SVD Line: 11126

//  <item> SFDITEM_REG__FMC_FLERMD
//    <name> FLERMD </name>
//    <i> [Bits 31..0] RW (@ 0x4002000C) Flash erase mode register </i>
//    <edit> 
//      <loc> ( (unsigned int)((FMC_FLERMD >> 0) & 0xFFFFFFFF), ((FMC_FLERMD = (FMC_FLERMD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: FMC_FLCERCNT  ------------------------------
// SVD Line: 11134

unsigned int FMC_FLCERCNT __AT (0x40020010);



// -------------------------------  Register Item: FMC_FLCERCNT  ----------------------------------
// SVD Line: 11134

//  <item> SFDITEM_REG__FMC_FLCERCNT
//    <name> FLCERCNT </name>
//    <i> [Bits 31..0] RW (@ 0x40020010) Flash chip erase control register </i>
//    <edit> 
//      <loc> ( (unsigned int)((FMC_FLCERCNT >> 0) & 0xFFFFFFFF), ((FMC_FLCERCNT = (FMC_FLCERCNT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: FMC_FLSERCNT  ------------------------------
// SVD Line: 11141

unsigned int FMC_FLSERCNT __AT (0x40020014);



// -------------------------------  Register Item: FMC_FLSERCNT  ----------------------------------
// SVD Line: 11141

//  <item> SFDITEM_REG__FMC_FLSERCNT
//    <name> FLSERCNT </name>
//    <i> [Bits 31..0] RW (@ 0x40020014) Flash sector erase control register </i>
//    <edit> 
//      <loc> ( (unsigned int)((FMC_FLSERCNT >> 0) & 0xFFFFFFFF), ((FMC_FLSERCNT = (FMC_FLSERCNT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: FMC_FLNVSCNT  ------------------------------
// SVD Line: 11148

unsigned int FMC_FLNVSCNT __AT (0x40020018);



// -------------------------------  Register Item: FMC_FLNVSCNT  ----------------------------------
// SVD Line: 11148

//  <item> SFDITEM_REG__FMC_FLNVSCNT
//    <name> FLNVSCNT </name>
//    <i> [Bits 31..0] RW (@ 0x40020018) Flash address setup time (Tnvs) control register </i>
//    <edit> 
//      <loc> ( (unsigned int)((FMC_FLNVSCNT >> 0) & 0xFFFFFFFF), ((FMC_FLNVSCNT = (FMC_FLNVSCNT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: FMC_FLPROCNT  ------------------------------
// SVD Line: 11155

unsigned int FMC_FLPROCNT __AT (0x4002001C);



// -------------------------------  Register Item: FMC_FLPROCNT  ----------------------------------
// SVD Line: 11155

//  <item> SFDITEM_REG__FMC_FLPROCNT
//    <name> FLPROCNT </name>
//    <i> [Bits 31..0] RW (@ 0x4002001C) Flash program control register </i>
//    <edit> 
//      <loc> ( (unsigned int)((FMC_FLPROCNT >> 0) & 0xFFFFFFFF), ((FMC_FLPROCNT = (FMC_FLPROCNT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: FMC_FLPROT  -------------------------------
// SVD Line: 11162

unsigned int FMC_FLPROT __AT (0x40020020);



// --------------------------------  Register Item: FMC_FLPROT  -----------------------------------
// SVD Line: 11162

//  <item> SFDITEM_REG__FMC_FLPROT
//    <name> FLPROT </name>
//    <i> [Bits 31..0] RW (@ 0x40020020) Flash protect control register </i>
//    <edit> 
//      <loc> ( (unsigned int)((FMC_FLPROT >> 0) & 0xFFFFFFFF), ((FMC_FLPROT = (FMC_FLPROT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: FMC_FLPRVCNT  ------------------------------
// SVD Line: 11170

unsigned int FMC_FLPRVCNT __AT (0x40020038);



// -------------------------------  Register Item: FMC_FLPRVCNT  ----------------------------------
// SVD Line: 11170

//  <item> SFDITEM_REG__FMC_FLPRVCNT
//    <name> FLPRVCNT </name>
//    <i> [Bits 31..0] RW (@ 0x40020038) Flash program recovery time (Trcv) control register </i>
//    <edit> 
//      <loc> ( (unsigned int)((FMC_FLPRVCNT >> 0) & 0xFFFFFFFF), ((FMC_FLPRVCNT = (FMC_FLPRVCNT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register Item Address: FMC_FLERVCNT  ------------------------------
// SVD Line: 11177

unsigned int FMC_FLERVCNT __AT (0x4002003C);



// -------------------------------  Register Item: FMC_FLERVCNT  ----------------------------------
// SVD Line: 11177

//  <item> SFDITEM_REG__FMC_FLERVCNT
//    <name> FLERVCNT </name>
//    <i> [Bits 31..0] RW (@ 0x4002003C) Flash erase recovery time (Trcv) control register </i>
//    <edit> 
//      <loc> ( (unsigned int)((FMC_FLERVCNT >> 0) & 0xFFFFFFFF), ((FMC_FLERVCNT = (FMC_FLERVCNT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------------  Peripheral View: FMC  --------------------------------------
// SVD Line: 11067

//  <view> FMC
//    <name> FMC </name>
//    <item> SFDITEM_REG__FMC_FLSTS </item>
//    <item> SFDITEM_REG__FMC_FLOPMD1 </item>
//    <item> SFDITEM_REG__FMC_FLOPMD2 </item>
//    <item> SFDITEM_REG__FMC_FLERMD </item>
//    <item> SFDITEM_REG__FMC_FLCERCNT </item>
//    <item> SFDITEM_REG__FMC_FLSERCNT </item>
//    <item> SFDITEM_REG__FMC_FLNVSCNT </item>
//    <item> SFDITEM_REG__FMC_FLPROCNT </item>
//    <item> SFDITEM_REG__FMC_FLPROT </item>
//    <item> SFDITEM_REG__FMC_FLPRVCNT </item>
//    <item> SFDITEM_REG__FMC_FLERVCNT </item>
//  </view>
//  


// ---------------------------  Register Item Address: SAF_CRC0CTL  -------------------------------
// SVD Line: 11204

unsigned char SAF_CRC0CTL __AT (0x40021810);



// -----------------------------  Field Item: SAF_CRC0CTL_CRC0EN  ---------------------------------
// SVD Line: 11213

//  <item> SFDITEM_FIELD__SAF_CRC0CTL_CRC0EN
//    <name> CRC0EN </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40021810) Control of high-speed CRC operation </i>
//    <check> 
//      <loc> ( (unsigned char) SAF_CRC0CTL ) </loc>
//      <o.7..7> CRC0EN
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SAF_CRC0CTL_FEA  ----------------------------------
// SVD Line: 11219

//  <item> SFDITEM_FIELD__SAF_CRC0CTL_FEA
//    <name> FEA </name>
//    <rw> 
//    <i> [Bits 6..0] RW (@ 0x40021810) High-speed CRC operation range </i>
//    <edit> 
//      <loc> ( (unsigned char)((SAF_CRC0CTL >> 0) & 0x7F), ((SAF_CRC0CTL = (SAF_CRC0CTL & ~(0x7FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7F) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: SAF_CRC0CTL  ----------------------------------
// SVD Line: 11204

//  <rtree> SFDITEM_REG__SAF_CRC0CTL
//    <name> CRC0CTL </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40021810) Flash memory CRC control register </i>
//    <loc> ( (unsigned char)((SAF_CRC0CTL >> 0) & 0xFF), ((SAF_CRC0CTL = (SAF_CRC0CTL & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SAF_CRC0CTL_CRC0EN </item>
//    <item> SFDITEM_FIELD__SAF_CRC0CTL_FEA </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SAF_PGCRCL  -------------------------------
// SVD Line: 11228

unsigned short SAF_PGCRCL __AT (0x40021812);



// --------------------------------  Register Item: SAF_PGCRCL  -----------------------------------
// SVD Line: 11228

//  <item> SFDITEM_REG__SAF_PGCRCL
//    <name> PGCRCL </name>
//    <i> [Bits 15..0] RW (@ 0x40021812) Flash memory CRC operation result register </i>
//    <edit> 
//      <loc> ( (unsigned short)((SAF_PGCRCL >> 0) & 0xFFFFFFFF), ((SAF_PGCRCL = (SAF_PGCRCL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: SAF_CRCIN  --------------------------------
// SVD Line: 11237

unsigned char SAF_CRCIN __AT (0x400433AC);



// --------------------------------  Register Item: SAF_CRCIN  ------------------------------------
// SVD Line: 11237

//  <item> SFDITEM_REG__SAF_CRCIN
//    <name> CRCIN </name>
//    <i> [Bits 7..0] RW (@ 0x400433AC) CRC input register </i>
//    <edit> 
//      <loc> ( (unsigned char)((SAF_CRCIN >> 0) & 0xFFFFFFFF), ((SAF_CRCIN = (SAF_CRCIN & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register Item Address: SAF_CRCD  --------------------------------
// SVD Line: 11246

unsigned short SAF_CRCD __AT (0x400432FA);



// ---------------------------------  Register Item: SAF_CRCD  ------------------------------------
// SVD Line: 11246

//  <item> SFDITEM_REG__SAF_CRCD
//    <name> CRCD </name>
//    <i> [Bits 15..0] RW (@ 0x400432FA) CRC data register </i>
//    <edit> 
//      <loc> ( (unsigned short)((SAF_CRCD >> 0) & 0xFFFFFFFF), ((SAF_CRCD = (SAF_CRCD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: SAF_RPECTL  -------------------------------
// SVD Line: 11255

unsigned char SAF_RPECTL __AT (0x40020425);



// -------------------------------  Field Item: SAF_RPECTL_RPEF  ----------------------------------
// SVD Line: 11266

//  <item> SFDITEM_FIELD__SAF_RPECTL_RPEF
//    <name> RPEF </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40020425) \nParity error status flag\n0 : NoError = No parity error has occurred\n1 : Error = Parity error has occurred </i>
//    <combo> 
//      <loc> ( (unsigned char) SAF_RPECTL ) </loc>
//      <o.0..0> RPEF
//        <0=> 0: NoError = No parity error has occurred
//        <1=> 1: Error = Parity error has occurred
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: SAF_RPECTL_RPERDIS  ---------------------------------
// SVD Line: 11286

//  <item> SFDITEM_FIELD__SAF_RPECTL_RPERDIS
//    <name> RPERDIS </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40020425) \nDisable RAM parity error reset\n0 : Enable = Enable parity error reset\n1 : Disable = Disable parity error reset </i>
//    <combo> 
//      <loc> ( (unsigned char) SAF_RPECTL ) </loc>
//      <o.7..7> RPERDIS
//        <0=> 0: Enable = Enable parity error reset
//        <1=> 1: Disable = Disable parity error reset
//    </combo>
//  </item>
//  


// -------------------------------  Register RTree: SAF_RPECTL  -----------------------------------
// SVD Line: 11255

//  <rtree> SFDITEM_REG__SAF_RPECTL
//    <name> RPECTL </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40020425) RAM parity error control register </i>
//    <loc> ( (unsigned char)((SAF_RPECTL >> 0) & 0xFF), ((SAF_RPECTL = (SAF_RPECTL & ~(0x81UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x81) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SAF_RPECTL_RPEF </item>
//    <item> SFDITEM_FIELD__SAF_RPECTL_RPERDIS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SAF_SFRGD  --------------------------------
// SVD Line: 11308

unsigned short SAF_SFRGD __AT (0x40040478);



// --------------------------------  Register Item: SAF_SFRGD  ------------------------------------
// SVD Line: 11308

//  <item> SFDITEM_REG__SAF_SFRGD
//    <name> SFRGD </name>
//    <i> [Bits 15..0] RW (@ 0x40040478) SFR guard control register </i>
//    <edit> 
//      <loc> ( (unsigned short)((SAF_SFRGD >> 0) & 0xFFFFFFFF), ((SAF_SFRGD = (SAF_SFRGD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------------  Peripheral View: SAF  --------------------------------------
// SVD Line: 11188

//  <view> SAF
//    <name> SAF </name>
//    <item> SFDITEM_REG__SAF_CRC0CTL </item>
//    <item> SFDITEM_REG__SAF_PGCRCL </item>
//    <item> SFDITEM_REG__SAF_CRCIN </item>
//    <item> SFDITEM_REG__SAF_CRCD </item>
//    <item> SFDITEM_REG__SAF_RPECTL </item>
//    <item> SFDITEM_REG__SAF_SFRGD </item>
//  </view>
//  


// -----------------------------  Register Item Address: CRC_CRCD  --------------------------------
// SVD Line: 11336

unsigned short CRC_CRCD __AT (0x400432FA);



// ---------------------------------  Register Item: CRC_CRCD  ------------------------------------
// SVD Line: 11336

//  <item> SFDITEM_REG__CRC_CRCD
//    <name> CRCD </name>
//    <i> [Bits 15..0] RW (@ 0x400432FA) CRC data register </i>
//    <edit> 
//      <loc> ( (unsigned short)((CRC_CRCD >> 0) & 0xFFFFFFFF), ((CRC_CRCD = (CRC_CRCD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: CRC_CRCIN  --------------------------------
// SVD Line: 11345

unsigned char CRC_CRCIN __AT (0x400433AC);



// --------------------------------  Register Item: CRC_CRCIN  ------------------------------------
// SVD Line: 11345

//  <item> SFDITEM_REG__CRC_CRCIN
//    <name> CRCIN </name>
//    <i> [Bits 7..0] RW (@ 0x400433AC) CRC input register </i>
//    <edit> 
//      <loc> ( (unsigned char)((CRC_CRCIN >> 0) & 0xFFFFFFFF), ((CRC_CRCIN = (CRC_CRCIN & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------------  Peripheral View: CRC  --------------------------------------
// SVD Line: 11320

//  <view> CRC
//    <name> CRC </name>
//    <item> SFDITEM_REG__CRC_CRCD </item>
//    <item> SFDITEM_REG__CRC_CRCIN </item>
//  </view>
//  


// ----------------------------  Register Item Address: DBG_DBGSTR  -------------------------------
// SVD Line: 11374

unsigned int DBG_DBGSTR __AT (0x4001B000);



// ---------------------------  Field Item: DBG_DBGSTR_CDBGPWRUPACK  ------------------------------
// SVD Line: 11382

//  <item> SFDITEM_FIELD__DBG_DBGSTR_CDBGPWRUPACK
//    <name> CDBGPWRUPACK </name>
//    <r> 
//    <i> [Bit 29] RO (@ 0x4001B000) DBG Power Up Acknowledgement </i>
//    <check> 
//      <loc> ( (unsigned int) DBG_DBGSTR ) </loc>
//      <o.29..29> CDBGPWRUPACK
//    </check>
//  </item>
//  


// ---------------------------  Field Item: DBG_DBGSTR_CDBGPWRUPREQ  ------------------------------
// SVD Line: 11388

//  <item> SFDITEM_FIELD__DBG_DBGSTR_CDBGPWRUPREQ
//    <name> CDBGPWRUPREQ </name>
//    <r> 
//    <i> [Bit 28] RO (@ 0x4001B000) DBG Power Up Request </i>
//    <check> 
//      <loc> ( (unsigned int) DBG_DBGSTR ) </loc>
//      <o.28..28> CDBGPWRUPREQ
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: DBG_DBGSTR  -----------------------------------
// SVD Line: 11374

//  <rtree> SFDITEM_REG__DBG_DBGSTR
//    <name> DBGSTR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4001B000) Debug status register </i>
//    <loc> ( (unsigned int)((DBG_DBGSTR >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__DBG_DBGSTR_CDBGPWRUPACK </item>
//    <item> SFDITEM_FIELD__DBG_DBGSTR_CDBGPWRUPREQ </item>
//  </rtree>
//  


// --------------------------  Register Item Address: DBG_DBGSTOPCR  ------------------------------
// SVD Line: 11396

unsigned int DBG_DBGSTOPCR __AT (0x4001B004);



// -----------------------------  Field Item: DBG_DBGSTOPCR_SWDIS  --------------------------------
// SVD Line: 11404

//  <item> SFDITEM_FIELD__DBG_DBGSTOPCR_SWDIS
//    <name> SWDIS </name>
//    <rw> 
//    <i> [Bit 24] RW (@ 0x4001B004) SWD Disable </i>
//    <check> 
//      <loc> ( (unsigned int) DBG_DBGSTOPCR ) </loc>
//      <o.24..24> SWDIS
//    </check>
//  </item>
//  


// ----------------------------  Field Item: DBG_DBGSTOPCR_RPERMSK  -------------------------------
// SVD Line: 11410

//  <item> SFDITEM_FIELD__DBG_DBGSTOPCR_RPERMSK
//    <name> RPERMSK </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x4001B004) Mask RAM parity error in debug mode </i>
//    <check> 
//      <loc> ( (unsigned int) DBG_DBGSTOPCR ) </loc>
//      <o.16..16> RPERMSK
//    </check>
//  </item>
//  


// ----------------------------  Field Item: DBG_DBGSTOPCR_RESMSK  --------------------------------
// SVD Line: 11416

//  <item> SFDITEM_FIELD__DBG_DBGSTOPCR_RESMSK
//    <name> RESMSK </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4001B004) Mask internal reset in debug mode </i>
//    <check> 
//      <loc> ( (unsigned int) DBG_DBGSTOPCR ) </loc>
//      <o.2..2> RESMSK
//    </check>
//  </item>
//  


// ----------------------------  Field Item: DBG_DBGSTOPCR_FRZEN1  --------------------------------
// SVD Line: 11422

//  <item> SFDITEM_FIELD__DBG_DBGSTOPCR_FRZEN1
//    <name> FRZEN1 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4001B004) Stop Communation family macros when cpu halted </i>
//    <check> 
//      <loc> ( (unsigned int) DBG_DBGSTOPCR ) </loc>
//      <o.1..1> FRZEN1
//    </check>
//  </item>
//  


// ----------------------------  Field Item: DBG_DBGSTOPCR_FRZEN0  --------------------------------
// SVD Line: 11428

//  <item> SFDITEM_FIELD__DBG_DBGSTOPCR_FRZEN0
//    <name> FRZEN0 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4001B004) Stop Timer family macros when cpu halted </i>
//    <check> 
//      <loc> ( (unsigned int) DBG_DBGSTOPCR ) </loc>
//      <o.0..0> FRZEN0
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: DBG_DBGSTOPCR  ---------------------------------
// SVD Line: 11396

//  <rtree> SFDITEM_REG__DBG_DBGSTOPCR
//    <name> DBGSTOPCR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001B004) Debug Stop Control register </i>
//    <loc> ( (unsigned int)((DBG_DBGSTOPCR >> 0) & 0xFFFFFFFF), ((DBG_DBGSTOPCR = (DBG_DBGSTOPCR & ~(0x1010007UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1010007) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DBG_DBGSTOPCR_SWDIS </item>
//    <item> SFDITEM_FIELD__DBG_DBGSTOPCR_RPERMSK </item>
//    <item> SFDITEM_FIELD__DBG_DBGSTOPCR_RESMSK </item>
//    <item> SFDITEM_FIELD__DBG_DBGSTOPCR_FRZEN1 </item>
//    <item> SFDITEM_FIELD__DBG_DBGSTOPCR_FRZEN0 </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: DBG  --------------------------------------
// SVD Line: 11358

//  <view> DBG
//    <name> DBG </name>
//    <item> SFDITEM_REG__DBG_DBGSTR </item>
//    <item> SFDITEM_REG__DBG_DBGSTOPCR </item>
//  </view>
//  


// ----------------------------  Register Item Address: BGR_VBG85  --------------------------------
// SVD Line: 11456

unsigned short BGR_VBG85 __AT (0x00500660);



// --------------------------------  Register Item: BGR_VBG85  ------------------------------------
// SVD Line: 11456

//  <item> SFDITEM_REG__BGR_VBG85
//    <name> VBG85 </name>
//    <i> [Bits 15..0] RO (@ 0x00500660) The A/D conversion value of VBGR at 85 degrees and 3.0V reference voltage </i>
//    <edit> 
//      <loc> ( (unsigned short)((BGR_VBG85 >> 0) & 0xFFFFFFFF), ((BGR_VBG85 = (BGR_VBG85 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: BGR_VBG25  --------------------------------
// SVD Line: 11463

unsigned short BGR_VBG25 __AT (0x00500664);



// --------------------------------  Register Item: BGR_VBG25  ------------------------------------
// SVD Line: 11463

//  <item> SFDITEM_REG__BGR_VBG25
//    <name> VBG25 </name>
//    <i> [Bits 15..0] RO (@ 0x00500664) The A/D conversion value of VBGR at 25 degrees and 3.0V reference voltage </i>
//    <edit> 
//      <loc> ( (unsigned short)((BGR_VBG25 >> 0) & 0xFFFFFFFF), ((BGR_VBG25 = (BGR_VBG25 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------------  Peripheral View: BGR  --------------------------------------
// SVD Line: 11440

//  <view> BGR
//    <name> BGR </name>
//    <item> SFDITEM_REG__BGR_VBG85 </item>
//    <item> SFDITEM_REG__BGR_VBG25 </item>
//  </view>
//  


// ----------------------------  Register Item Address: TSN_TSN85  --------------------------------
// SVD Line: 11490

unsigned short TSN_TSN85 __AT (0x00500668);



// --------------------------------  Register Item: TSN_TSN85  ------------------------------------
// SVD Line: 11490

//  <item> SFDITEM_REG__TSN_TSN85
//    <name> TSN85 </name>
//    <i> [Bits 15..0] RO (@ 0x00500668) The A/D conversion value of Temperature Sensor at 85 degrees and 3.0V reference voltage </i>
//    <edit> 
//      <loc> ( (unsigned short)((TSN_TSN85 >> 0) & 0xFFFFFFFF), ((TSN_TSN85 = (TSN_TSN85 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register Item Address: TSN_TSN25  --------------------------------
// SVD Line: 11498

unsigned short TSN_TSN25 __AT (0x0050066C);



// --------------------------------  Register Item: TSN_TSN25  ------------------------------------
// SVD Line: 11498

//  <item> SFDITEM_REG__TSN_TSN25
//    <name> TSN25 </name>
//    <i> [Bits 15..0] RO (@ 0x0050066C) The A/D conversion value of Temperature Sensor at 25 degrees and 3.0V reference voltage </i>
//    <edit> 
//      <loc> ( (unsigned short)((TSN_TSN25 >> 0) & 0xFFFFFFFF), ((TSN_TSN25 = (TSN_TSN25 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------------  Peripheral View: TSN  --------------------------------------
// SVD Line: 11474

//  <view> TSN
//    <name> TSN </name>
//    <item> SFDITEM_REG__TSN_TSN85 </item>
//    <item> SFDITEM_REG__TSN_TSN25 </item>
//  </view>
//  


// -------------------------  Register Item Address: UID_UID_UID_UID0  ----------------------------
// SVD Line: 11526

unsigned int UID_UID_UID_UID0 __AT (0x00500894);



// -----------------------------  Register Item: UID_UID_UID_UID0  --------------------------------
// SVD Line: 11526

//  <item> SFDITEM_REG__UID_UID_UID_UID0
//    <name> UID0 </name>
//    <i> [Bits 31..0] RO (@ 0x00500894) UID word 0 </i>
//    <edit> 
//      <loc> ( (unsigned int)((UID_UID_UID_UID0 >> 0) & 0xFFFFFFFF), ((UID_UID_UID_UID0 = (UID_UID_UID_UID0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: UID_UID_UID_UID1  ----------------------------
// SVD Line: 11526

unsigned int UID_UID_UID_UID1 __AT (0x00500898);



// -----------------------------  Register Item: UID_UID_UID_UID1  --------------------------------
// SVD Line: 11526

//  <item> SFDITEM_REG__UID_UID_UID_UID1
//    <name> UID1 </name>
//    <i> [Bits 31..0] RO (@ 0x00500898) UID word 1 </i>
//    <edit> 
//      <loc> ( (unsigned int)((UID_UID_UID_UID1 >> 0) & 0xFFFFFFFF), ((UID_UID_UID_UID1 = (UID_UID_UID_UID1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: UID_UID_UID_UID2  ----------------------------
// SVD Line: 11526

unsigned int UID_UID_UID_UID2 __AT (0x0050089C);



// -----------------------------  Register Item: UID_UID_UID_UID2  --------------------------------
// SVD Line: 11526

//  <item> SFDITEM_REG__UID_UID_UID_UID2
//    <name> UID2 </name>
//    <i> [Bits 31..0] RO (@ 0x0050089C) UID word 2 </i>
//    <edit> 
//      <loc> ( (unsigned int)((UID_UID_UID_UID2 >> 0) & 0xFFFFFFFF), ((UID_UID_UID_UID2 = (UID_UID_UID_UID2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Register Item Address: UID_UID_UID_UID3  ----------------------------
// SVD Line: 11526

unsigned int UID_UID_UID_UID3 __AT (0x005008A0);



// -----------------------------  Register Item: UID_UID_UID_UID3  --------------------------------
// SVD Line: 11526

//  <item> SFDITEM_REG__UID_UID_UID_UID3
//    <name> UID3 </name>
//    <i> [Bits 31..0] RO (@ 0x005008A0) UID word 3 </i>
//    <edit> 
//      <loc> ( (unsigned int)((UID_UID_UID_UID3 >> 0) & 0xFFFFFFFF), ((UID_UID_UID_UID3 = (UID_UID_UID_UID3 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------------  Peripheral View: UID  --------------------------------------
// SVD Line: 11510

//  <view> UID
//    <name> UID </name>
//    <item> SFDITEM_REG__UID_UID_UID_UID0 </item>
//    <item> SFDITEM_REG__UID_UID_UID_UID1 </item>
//    <item> SFDITEM_REG__UID_UID_UID_UID2 </item>
//    <item> SFDITEM_REG__UID_UID_UID_UID3 </item>
//  </view>
//  


// -----------------------------   IRQ Num definition: CMS32L051  ---------------------------------
// SVD Line: 36



// ------------------------------------------------------------------------------------------------
// -----                              Interrupt Number Definition                             -----
// ------------------------------------------------------------------------------------------------



// ------------------------  ARM Cortex-M0+ Specific Interrupt Numbers  ---------------------------

//  <qitem> Reset_IRQ
//    <name> Reset </name>
//    <i> Reset Vector, invoked on Power up and warm reset </i>
//    <loc> 1 </loc>
//  </qitem>
//  
//  <qitem> NonMaskableInt_IRQ
//    <name> NonMaskableInt </name>
//    <i> Non maskable Interrupt, cannot be stopped or preempted </i>
//    <loc> 2 </loc>
//  </qitem>
//  
//  <qitem> HardFault_IRQ
//    <name> HardFault </name>
//    <i> Hard Fault, all classes of Fault </i>
//    <loc> 3 </loc>
//  </qitem>
//  
//  <qitem> SVCall_IRQ
//    <name> SVCall </name>
//    <i> System Service Call via SVC instruction </i>
//    <loc> 11 </loc>
//  </qitem>
//  
//  <qitem> PendSV_IRQ
//    <name> PendSV </name>
//    <i> Pendable request for system service </i>
//    <loc> 14 </loc>
//  </qitem>
//  
//  <qitem> SysTick_IRQ
//    <name> SysTick </name>
//    <i> System Tick Timer </i>
//    <loc> 15 </loc>
//  </qitem>
//  


// --------------------------  CMS32L051 Specific Interrupt Numbers  ------------------------------

//  <qitem> LVI_IRQ
//    <name> LVI </name>
//    <i> Low Voltage detection interrupt </i>
//    <loc> 16 </loc>
//  </qitem>
//  
//  <qitem> INTP0_IRQ
//    <name> INTP0 </name>
//    <i> INTP0 External interrupt request input is valid </i>
//    <loc> 17 </loc>
//  </qitem>
//  
//  <qitem> INTP1_IRQ
//    <name> INTP1 </name>
//    <i> INTP1 External interrupt request input is valid </i>
//    <loc> 18 </loc>
//  </qitem>
//  
//  <qitem> INTP2_IRQ
//    <name> INTP2 </name>
//    <i> INTP2 External interrupt request input is valid </i>
//    <loc> 19 </loc>
//  </qitem>
//  
//  <qitem> INTP3_IRQ
//    <name> INTP3 </name>
//    <i> INTP3 External interrupt request input is valid </i>
//    <loc> 20 </loc>
//  </qitem>
//  
//  <qitem> TM01H_IRQ
//    <name> TM01H </name>
//    <i> TM40 channel 1(higher 8 bit) interrupt request </i>
//    <loc> 21 </loc>
//  </qitem>
//  
//  <qitem> KEY_IRQ
//    <name> KEY </name>
//    <i> KEY return interrupt request </i>
//    <loc> 22 </loc>
//  </qitem>
//  
//  <qitem> ST2_IRQ
//    <name> ST2 </name>
//    <i> UART2 transmission transfer end or buffer empty </i>
//    <loc> 23 </loc>
//  </qitem>
//  
//  <qitem> SR2_IRQ
//    <name> SR2 </name>
//    <i> UART2 rerception transfer </i>
//    <loc> 24 </loc>
//  </qitem>
//  
//  <qitem> SRE2_IRQ
//    <name> SRE2 </name>
//    <i> UART2 rerception communication error occurrence </i>
//    <loc> 25 </loc>
//  </qitem>
//  
//  <qitem> ST0_IRQ
//    <name> ST0 </name>
//    <i> UART0 transmission transfer end or buffer empty </i>
//    <loc> 26 </loc>
//  </qitem>
//  
//  <qitem> SR0_IRQ
//    <name> SR0 </name>
//    <i> UART0 rerception transfer </i>
//    <loc> 27 </loc>
//  </qitem>
//  
//  <qitem> SRE0_IRQ
//    <name> SRE0 </name>
//    <i> UART0 rerception communication error occurrence </i>
//    <loc> 28 </loc>
//  </qitem>
//  
//  <qitem> ST1_IRQ
//    <name> ST1 </name>
//    <i> UART1 transmission transfer end or buffer empty </i>
//    <loc> 29 </loc>
//  </qitem>
//  
//  <qitem> SR1_IRQ
//    <name> SR1 </name>
//    <i> UART1 rerception transfer </i>
//    <loc> 30 </loc>
//  </qitem>
//  
//  <qitem> SRE1_IRQ
//    <name> SRE1 </name>
//    <i> UART1 rerception communication error occurrence </i>
//    <loc> 31 </loc>
//  </qitem>
//  
//  <qitem> IICA_IRQ
//    <name> IICA </name>
//    <i> IICA interrupt request </i>
//    <loc> 32 </loc>
//  </qitem>
//  
//  <qitem> TM00_IRQ
//    <name> TM00 </name>
//    <i> TM40 channel 0 interrupt request </i>
//    <loc> 33 </loc>
//  </qitem>
//  
//  <qitem> TM01_IRQ
//    <name> TM01 </name>
//    <i> TM40 channel 1 interrupt request </i>
//    <loc> 34 </loc>
//  </qitem>
//  
//  <qitem> TM02_IRQ
//    <name> TM02 </name>
//    <i> TM40 channel 2 interrupt request </i>
//    <loc> 35 </loc>
//  </qitem>
//  
//  <qitem> TM03_IRQ
//    <name> TM03 </name>
//    <i> TM40 channel 3 interrupt request </i>
//    <loc> 36 </loc>
//  </qitem>
//  
//  <qitem> ADC_IRQ
//    <name> ADC </name>
//    <i> ADC interrupt request </i>
//    <loc> 37 </loc>
//  </qitem>
//  
//  <qitem> RTC_IRQ
//    <name> RTC </name>
//    <i> Real-Time Clock interrupt request </i>
//    <loc> 38 </loc>
//  </qitem>
//  
//  <qitem> IT_IRQ
//    <name> IT </name>
//    <i> 15-bit interval timer interrupt request </i>
//    <loc> 39 </loc>
//  </qitem>
//  
//  <qitem> TM10_IRQ
//    <name> TM10 </name>
//    <i> TM41 channel 0 interrupt request </i>
//    <loc> 43 </loc>
//  </qitem>
//  
//  <qitem> TM11_IRQ
//    <name> TM11 </name>
//    <i> TM41 channel 1 interrupt request </i>
//    <loc> 44 </loc>
//  </qitem>
//  
//  <qitem> TM12_IRQ
//    <name> TM12 </name>
//    <i> TM41 channel 2 interrupt request </i>
//    <loc> 45 </loc>
//  </qitem>
//  
//  <qitem> TM13_IRQ
//    <name> TM13 </name>
//    <i> TM41 channel 3 interrupt request </i>
//    <loc> 46 </loc>
//  </qitem>
//  
//  <qitem> FMC_IRQ
//    <name> FMC </name>
//    <i> Flash erase or write finish </i>
//    <loc> 47 </loc>
//  </qitem>
//  
//  <irqtable> CMS32L051_IRQTable
//    <name> CMS32L051 Interrupt Table </name>
//    <nvicPrioBits> 2 </nvicPrioBits>
//    <qitem> Reset_IRQ </qitem>
//    <qitem> NonMaskableInt_IRQ </qitem>
//    <qitem> HardFault_IRQ </qitem>
//    <qitem> SVCall_IRQ </qitem>
//    <qitem> PendSV_IRQ </qitem>
//    <qitem> SysTick_IRQ </qitem>
//    <qitem> LVI_IRQ </qitem>
//    <qitem> INTP0_IRQ </qitem>
//    <qitem> INTP1_IRQ </qitem>
//    <qitem> INTP2_IRQ </qitem>
//    <qitem> INTP3_IRQ </qitem>
//    <qitem> TM01H_IRQ </qitem>
//    <qitem> KEY_IRQ </qitem>
//    <qitem> ST2_IRQ </qitem>
//    <qitem> SR2_IRQ </qitem>
//    <qitem> SRE2_IRQ </qitem>
//    <qitem> ST0_IRQ </qitem>
//    <qitem> SR0_IRQ </qitem>
//    <qitem> SRE0_IRQ </qitem>
//    <qitem> ST1_IRQ </qitem>
//    <qitem> SR1_IRQ </qitem>
//    <qitem> SRE1_IRQ </qitem>
//    <qitem> IICA_IRQ </qitem>
//    <qitem> TM00_IRQ </qitem>
//    <qitem> TM01_IRQ </qitem>
//    <qitem> TM02_IRQ </qitem>
//    <qitem> TM03_IRQ </qitem>
//    <qitem> ADC_IRQ </qitem>
//    <qitem> RTC_IRQ </qitem>
//    <qitem> IT_IRQ </qitem>
//    <qitem> TM10_IRQ </qitem>
//    <qitem> TM11_IRQ </qitem>
//    <qitem> TM12_IRQ </qitem>
//    <qitem> TM13_IRQ </qitem>
//    <qitem> FMC_IRQ </qitem>
//  </irqtable>


// ------------------------------------   Menu: CMS32L051  ----------------------------------------
// SVD Line: 36



// ------------------------------  Peripheral Menu: 'CMS32L051'  ----------------------------------



// ------------------------------------------------------------------------------------------------
// -----                                       Main Menu                                      -----
// ------------------------------------------------------------------------------------------------

//  <b> ADC
//    <m> ADC </m>
//  </b>
//  
//  <b> BGR
//    <m> BGR </m>
//  </b>
//  
//  <b> CLK
//    <m> CGC </m>
//  </b>
//  
//  <b> CRC
//    <m> CRC </m>
//  </b>
//  
//  <b> DBG
//    <m> DBG </m>
//  </b>
//  
//  <b> DMA
//    <m> DMA </m>
//  </b>
//  
//  <b> DMAVEC
//    <m> DMAVEC </m>
//  </b>
//  
//  <b> ELC
//    <m> ELC </m>
//  </b>
//  
//  <b> EPWM
//    <m> EPWM </m>
//  </b>
//  
//  <b> FMC
//    <m> FMC </m>
//  </b>
//  
//  <b> IICA
//    <m> IICA </m>
//  </b>
//  
//  <b> INT
//    <m> INT </m>
//  </b>
//  
//  <b> INTM
//    <m> INTM </m>
//  </b>
//  
//  <b> IRDA
//    <m> IRDA </m>
//  </b>
//  
//  <b> KEY
//    <m> KEY </m>
//  </b>
//  
//  <b> LVD
//    <m> LVD </m>
//  </b>
//  
//  <b> MISC
//    <m> MISC </m>
//  </b>
//  
//  <b> PCBZ
//    <m> PCBZ </m>
//  </b>
//  
//  <b> PORT
//    <m> PORT </m>
//  </b>
//  
//  <b> RST
//    <m> RST </m>
//  </b>
//  
//  <b> RTC
//    <m> RTC </m>
//  </b>
//  
//  <b> SAF
//    <m> SAF </m>
//  </b>
//  
//  <b> SCI0
//    <m> SCI0 </m>
//  </b>
//  
//  <b> SCI1
//    <m> SCI1 </m>
//  </b>
//  
//  <b> SPI
//    <m> SPI </m>
//  </b>
//  
//  <b> TM40
//    <m> TM40 </m>
//  </b>
//  
//  <b> TM41
//    <m> TM41 </m>
//  </b>
//  
//  <b> TSN
//    <m> TSN </m>
//  </b>
//  
//  <b> UID
//    <m> UID </m>
//  </b>
//  
//  <b> WDT
//    <m> WDT </m>
//  </b>
//  
