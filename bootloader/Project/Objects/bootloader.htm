<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\bootloader.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\bootloader.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060960: Last Updated: Wed Mar 08 17:42:03 2023
<BR><P>
<H3>Maximum Stack Usage =         48 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
__rt_entry_main &rArr; main &rArr; Get_Fw_Checksum &rArr; Flash_Cal_Checksum &rArr; InvertUint16
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[5]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">NMI_Handler</a><BR>
 <LI><a href="#[6]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">HardFault_Handler</a><BR>
 <LI><a href="#[7]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">SVC_Handler</a><BR>
 <LI><a href="#[8]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8]">PendSV_Handler</a><BR>
 <LI><a href="#[9]">SysTick_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9]">SysTick_Handler</a><BR>
 <LI><a href="#[a]">IRQ00_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[a]">IRQ00_Handler</a><BR>
 <LI><a href="#[b]">IRQ01_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[b]">IRQ01_Handler</a><BR>
 <LI><a href="#[c]">IRQ02_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[c]">IRQ02_Handler</a><BR>
 <LI><a href="#[d]">IRQ03_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[d]">IRQ03_Handler</a><BR>
 <LI><a href="#[e]">IRQ04_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[e]">IRQ04_Handler</a><BR>
 <LI><a href="#[f]">IRQ05_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[f]">IRQ05_Handler</a><BR>
 <LI><a href="#[10]">IRQ06_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[10]">IRQ06_Handler</a><BR>
 <LI><a href="#[11]">IRQ07_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[11]">IRQ07_Handler</a><BR>
 <LI><a href="#[12]">IRQ08_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[12]">IRQ08_Handler</a><BR>
 <LI><a href="#[13]">IRQ09_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[13]">IRQ09_Handler</a><BR>
 <LI><a href="#[14]">IRQ10_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[14]">IRQ10_Handler</a><BR>
 <LI><a href="#[15]">IRQ11_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[15]">IRQ11_Handler</a><BR>
 <LI><a href="#[16]">IRQ12_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[16]">IRQ12_Handler</a><BR>
 <LI><a href="#[17]">IRQ13_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[17]">IRQ13_Handler</a><BR>
 <LI><a href="#[18]">IRQ14_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[18]">IRQ14_Handler</a><BR>
 <LI><a href="#[19]">IRQ15_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[19]">IRQ15_Handler</a><BR>
 <LI><a href="#[1a]">IRQ16_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1a]">IRQ16_Handler</a><BR>
 <LI><a href="#[1b]">IRQ17_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1b]">IRQ17_Handler</a><BR>
 <LI><a href="#[1c]">IRQ18_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1c]">IRQ18_Handler</a><BR>
 <LI><a href="#[1d]">IRQ19_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1d]">IRQ19_Handler</a><BR>
 <LI><a href="#[1e]">IRQ20_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1e]">IRQ20_Handler</a><BR>
 <LI><a href="#[1f]">IRQ21_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1f]">IRQ21_Handler</a><BR>
 <LI><a href="#[20]">IRQ22_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[20]">IRQ22_Handler</a><BR>
 <LI><a href="#[21]">IRQ23_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[21]">IRQ23_Handler</a><BR>
 <LI><a href="#[22]">IRQ24_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[22]">IRQ24_Handler</a><BR>
 <LI><a href="#[23]">IRQ25_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[23]">IRQ25_Handler</a><BR>
 <LI><a href="#[24]">IRQ26_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[24]">IRQ26_Handler</a><BR>
 <LI><a href="#[25]">IRQ27_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[25]">IRQ27_Handler</a><BR>
 <LI><a href="#[26]">IRQ28_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[26]">IRQ28_Handler</a><BR>
 <LI><a href="#[27]">IRQ29_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[27]">IRQ29_Handler</a><BR>
 <LI><a href="#[28]">IRQ30_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[28]">IRQ30_Handler</a><BR>
 <LI><a href="#[29]">IRQ31_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[29]">IRQ31_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[6]">HardFault_Handler</a> from startup_cms32l051.o(.text) referenced from startup_cms32l051.o(RESET)
 <LI><a href="#[a]">IRQ00_Handler</a> from startup_cms32l051.o(.text) referenced from startup_cms32l051.o(RESET)
 <LI><a href="#[b]">IRQ01_Handler</a> from startup_cms32l051.o(.text) referenced from startup_cms32l051.o(RESET)
 <LI><a href="#[c]">IRQ02_Handler</a> from startup_cms32l051.o(.text) referenced from startup_cms32l051.o(RESET)
 <LI><a href="#[d]">IRQ03_Handler</a> from startup_cms32l051.o(.text) referenced from startup_cms32l051.o(RESET)
 <LI><a href="#[e]">IRQ04_Handler</a> from startup_cms32l051.o(.text) referenced from startup_cms32l051.o(RESET)
 <LI><a href="#[f]">IRQ05_Handler</a> from startup_cms32l051.o(.text) referenced from startup_cms32l051.o(RESET)
 <LI><a href="#[10]">IRQ06_Handler</a> from startup_cms32l051.o(.text) referenced from startup_cms32l051.o(RESET)
 <LI><a href="#[11]">IRQ07_Handler</a> from startup_cms32l051.o(.text) referenced from startup_cms32l051.o(RESET)
 <LI><a href="#[12]">IRQ08_Handler</a> from startup_cms32l051.o(.text) referenced from startup_cms32l051.o(RESET)
 <LI><a href="#[13]">IRQ09_Handler</a> from startup_cms32l051.o(.text) referenced from startup_cms32l051.o(RESET)
 <LI><a href="#[14]">IRQ10_Handler</a> from startup_cms32l051.o(.text) referenced from startup_cms32l051.o(RESET)
 <LI><a href="#[15]">IRQ11_Handler</a> from startup_cms32l051.o(.text) referenced from startup_cms32l051.o(RESET)
 <LI><a href="#[16]">IRQ12_Handler</a> from startup_cms32l051.o(.text) referenced from startup_cms32l051.o(RESET)
 <LI><a href="#[17]">IRQ13_Handler</a> from startup_cms32l051.o(.text) referenced from startup_cms32l051.o(RESET)
 <LI><a href="#[18]">IRQ14_Handler</a> from startup_cms32l051.o(.text) referenced from startup_cms32l051.o(RESET)
 <LI><a href="#[19]">IRQ15_Handler</a> from startup_cms32l051.o(.text) referenced from startup_cms32l051.o(RESET)
 <LI><a href="#[1a]">IRQ16_Handler</a> from startup_cms32l051.o(.text) referenced from startup_cms32l051.o(RESET)
 <LI><a href="#[1b]">IRQ17_Handler</a> from startup_cms32l051.o(.text) referenced from startup_cms32l051.o(RESET)
 <LI><a href="#[1c]">IRQ18_Handler</a> from startup_cms32l051.o(.text) referenced from startup_cms32l051.o(RESET)
 <LI><a href="#[1d]">IRQ19_Handler</a> from startup_cms32l051.o(.text) referenced from startup_cms32l051.o(RESET)
 <LI><a href="#[1e]">IRQ20_Handler</a> from startup_cms32l051.o(.text) referenced from startup_cms32l051.o(RESET)
 <LI><a href="#[1f]">IRQ21_Handler</a> from startup_cms32l051.o(.text) referenced from startup_cms32l051.o(RESET)
 <LI><a href="#[20]">IRQ22_Handler</a> from startup_cms32l051.o(.text) referenced from startup_cms32l051.o(RESET)
 <LI><a href="#[21]">IRQ23_Handler</a> from startup_cms32l051.o(.text) referenced from startup_cms32l051.o(RESET)
 <LI><a href="#[22]">IRQ24_Handler</a> from startup_cms32l051.o(.text) referenced from startup_cms32l051.o(RESET)
 <LI><a href="#[23]">IRQ25_Handler</a> from startup_cms32l051.o(.text) referenced from startup_cms32l051.o(RESET)
 <LI><a href="#[24]">IRQ26_Handler</a> from startup_cms32l051.o(.text) referenced from startup_cms32l051.o(RESET)
 <LI><a href="#[25]">IRQ27_Handler</a> from startup_cms32l051.o(.text) referenced from startup_cms32l051.o(RESET)
 <LI><a href="#[26]">IRQ28_Handler</a> from startup_cms32l051.o(.text) referenced from startup_cms32l051.o(RESET)
 <LI><a href="#[27]">IRQ29_Handler</a> from startup_cms32l051.o(.text) referenced from startup_cms32l051.o(RESET)
 <LI><a href="#[28]">IRQ30_Handler</a> from startup_cms32l051.o(.text) referenced from startup_cms32l051.o(RESET)
 <LI><a href="#[29]">IRQ31_Handler</a> from startup_cms32l051.o(.text) referenced from startup_cms32l051.o(RESET)
 <LI><a href="#[5]">NMI_Handler</a> from startup_cms32l051.o(.text) referenced from startup_cms32l051.o(RESET)
 <LI><a href="#[8]">PendSV_Handler</a> from startup_cms32l051.o(.text) referenced from startup_cms32l051.o(RESET)
 <LI><a href="#[4]">Reset_Handler</a> from startup_cms32l051.o(.text) referenced from startup_cms32l051.o(RESET)
 <LI><a href="#[7]">SVC_Handler</a> from startup_cms32l051.o(.text) referenced from startup_cms32l051.o(RESET)
 <LI><a href="#[9]">SysTick_Handler</a> from startup_cms32l051.o(.text) referenced from startup_cms32l051.o(RESET)
 <LI><a href="#[2a]">SystemInit</a> from system_cms32l051.o(i.SystemInit) referenced from startup_cms32l051.o(.text)
 <LI><a href="#[2c]">__main</a> from __main.o(!!!main) referenced from startup_cms32l051.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[2c]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[2d]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[2f]"></a>__scatterload_rt2</STRONG> (Thumb, 52 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[51]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[52]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[30]"></a>__scatterload_copy</STRONG> (Thumb, 26 bytes, Stack size unknown bytes, __scatter_copy.o(!!handler_copy), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>

<P><STRONG><a name="[53]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[34]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[54]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[55]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[56]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[57]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[58]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[59]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[5a]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000002))

<P><STRONG><a name="[5b]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[5c]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[5d]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[5e]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[5f]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[60]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[61]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[62]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[63]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[64]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[65]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[66]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[67]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[68]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[39]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[69]"></a>__rt_lib_shutdown_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000004))

<P><STRONG><a name="[6a]"></a>__rt_lib_shutdown_fini_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000002))

<P><STRONG><a name="[6b]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000009))

<P><STRONG><a name="[6c]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000011))

<P><STRONG><a name="[6d]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000012))

<P><STRONG><a name="[6e]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C))

<P><STRONG><a name="[6f]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000006))

<P><STRONG><a name="[70]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E))

<P><STRONG><a name="[2e]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[71]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[31]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[33]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[72]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[35]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; Get_Fw_Checksum &rArr; Flash_Cal_Checksum &rArr; InvertUint16
</UL>
<BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[73]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[43]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[38]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[74]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[3a]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[4]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_cms32l051.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32l051.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_cms32l051.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32l051.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_cms32l051.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32l051.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_cms32l051.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>

<P><STRONG><a name="[3d]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_cms32l051.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>

<P><STRONG><a name="[3e]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_cms32l051.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>

<P><STRONG><a name="[7]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_cms32l051.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32l051.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_cms32l051.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>

<P><STRONG><a name="[8]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_cms32l051.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32l051.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_cms32l051.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32l051.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>IRQ00_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_cms32l051.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ00_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ00_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32l051.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>IRQ01_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_cms32l051.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ01_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ01_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32l051.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>IRQ02_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_cms32l051.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ02_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ02_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32l051.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>IRQ03_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_cms32l051.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ03_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ03_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32l051.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>IRQ04_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_cms32l051.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ04_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ04_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32l051.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>IRQ05_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_cms32l051.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ05_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ05_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32l051.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>IRQ06_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_cms32l051.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ06_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ06_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32l051.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>IRQ07_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_cms32l051.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ07_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ07_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32l051.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>IRQ08_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_cms32l051.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ08_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ08_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32l051.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>IRQ09_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_cms32l051.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ09_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ09_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32l051.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>IRQ10_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_cms32l051.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ10_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ10_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32l051.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>IRQ11_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_cms32l051.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ11_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ11_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32l051.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>IRQ12_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_cms32l051.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ12_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ12_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32l051.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>IRQ13_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_cms32l051.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ13_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ13_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32l051.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>IRQ14_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_cms32l051.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ14_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ14_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32l051.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>IRQ15_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_cms32l051.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ15_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ15_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32l051.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>IRQ16_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_cms32l051.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ16_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ16_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32l051.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>IRQ17_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_cms32l051.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ17_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ17_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32l051.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>IRQ18_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_cms32l051.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ18_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ18_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32l051.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>IRQ19_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_cms32l051.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ19_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ19_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32l051.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>IRQ20_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_cms32l051.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ20_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ20_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32l051.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>IRQ21_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_cms32l051.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ21_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ21_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32l051.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>IRQ22_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_cms32l051.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ22_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ22_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32l051.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>IRQ23_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_cms32l051.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ23_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ23_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32l051.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>IRQ24_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_cms32l051.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ24_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ24_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32l051.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>IRQ25_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_cms32l051.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ25_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ25_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32l051.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>IRQ26_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_cms32l051.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ26_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ26_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32l051.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>IRQ27_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_cms32l051.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ27_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ27_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32l051.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>IRQ28_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_cms32l051.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ28_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ28_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32l051.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>IRQ29_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_cms32l051.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ29_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ29_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32l051.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>IRQ30_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_cms32l051.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ30_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ30_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32l051.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>IRQ31_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_cms32l051.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ31_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ31_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32l051.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>__user_initial_stackheap</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, startup_cms32l051.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[75]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[76]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[77]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[32]"></a>__user_setup_stackheap</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[37]"></a>exit</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, exit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = exit
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_call_atexit_fns (Weak Reference)
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[78]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[40]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[79]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[3b]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[7a]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[7b]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[7c]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, indicate_semi.o(.text), UNUSED)

<P><STRONG><a name="[44]"></a>App1_Erase</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, main.o(i.App1_Erase))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = App1_Erase
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EraseSector
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[46]"></a>App1_ProgramPage</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, main.o(i.App1_ProgramPage))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = App1_ProgramPage &rArr; ProgramPage
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProgramPage
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[50]"></a>App_Run</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, main.o(i.App_Run))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = App_Run
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[48]"></a>CLK_GetHocoFreq</STRONG> (Thumb, 92 bytes, Stack size 4 bytes, system_cms32l051.o(i.CLK_GetHocoFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = CLK_GetHocoFreq &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[4a]"></a>Flash_Cal_Checksum</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, main.o(i.Flash_Cal_Checksum))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = Flash_Cal_Checksum &rArr; InvertUint16
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InvertUint16
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Fw_Checksum
</UL>

<P><STRONG><a name="[4c]"></a>Get_Fw_Checksum</STRONG> (Thumb, 16 bytes, Stack size 12 bytes, main.o(i.Get_Fw_Checksum))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Get_Fw_Checksum &rArr; Flash_Cal_Checksum &rArr; InvertUint16
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Cal_Checksum
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4f]"></a>Get_User_Data</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, main.o(i.Get_User_Data))
<BR><BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4b]"></a>InvertUint16</STRONG> (Thumb, 46 bytes, Stack size 12 bytes, main.o(i.InvertUint16))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = InvertUint16
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Cal_Checksum
</UL>

<P><STRONG><a name="[4d]"></a>Set_User_Data</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, main.o(i.Set_User_Data))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Set_User_Data &rArr; ProgramPage
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProgramPage
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EraseSector
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4e]"></a>SystemCoreClockUpdate</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, system_cms32l051.o(i.SystemCoreClockUpdate))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SystemCoreClockUpdate &rArr; CLK_GetHocoFreq &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_GetHocoFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2a]"></a>SystemInit</STRONG> (Thumb, 114 bytes, Stack size 4 bytes, system_cms32l051.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SystemInit &rArr; CLK_GetHocoFreq &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_GetHocoFreq
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32l051.o(.text)
</UL>
<P><STRONG><a name="[49]"></a>__ARM_common_switch8</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, system_cms32l051.o(i.__ARM_common_switch8))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_GetHocoFreq
</UL>

<P><STRONG><a name="[36]"></a>main</STRONG> (Thumb, 120 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = main &rArr; Get_Fw_Checksum &rArr; Flash_Cal_Checksum &rArr; InvertUint16
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_User_Data
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_User_Data
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Fw_Checksum
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_Run
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App1_ProgramPage
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App1_Erase
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[7d]"></a>EraseChip</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, flash.o(ram_fetch_code), UNUSED)

<P><STRONG><a name="[45]"></a>EraseSector</STRONG> (Thumb, 78 bytes, Stack size 0 bytes, flash.o(ram_fetch_code))
<BR><BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_User_Data
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App1_Erase
</UL>

<P><STRONG><a name="[47]"></a>ProgramPage</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, flash.o(ram_fetch_code))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ProgramPage
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_User_Data
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App1_ProgramPage
</UL>
<P>
<H3>
Local Symbols
</H3><P>
<H3>
Undefined Global Symbols
</H3>
<P><STRONG><a name="[42]"></a>_call_atexit_fns</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>
<HR></body></html>
